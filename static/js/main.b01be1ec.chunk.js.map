{"version":3,"sources":["api/downloadTokens.ts","utils/queryParameters.ts","model/themes.ts","model/query.ts","model/tokens.ts","components/Header/Clear/Clear.tsx","api/uploadTokens.ts","components/Header/Share/model.ts","components/Header/Share/Share.tsx","components/Header/Header.tsx","components/IconBack/IconBack.tsx","components/YaMetrika/YaMetrika.ts","components/TextinputField/TextinputField.tsx","utils/isColor.ts","components/Headline/Headline.tsx","components/Showcase/Showcases/BadgeShowcase.tsx","components/Showcase/Showcases/HeaderShowcase.tsx","components/Showcase/Showcase.tsx","components/Showcase/Showcases/AttachShowcase.tsx","components/Showcase/Showcases/ButtonShowcase.tsx","components/Showcase/Showcases/ButtonGroupShowcase.tsx","components/Showcase/Showcases/CheckboxShowcase.tsx","components/Showcase/Showcases/DividerShowcase.tsx","components/Showcase/Showcases/LinkShowcase.tsx","components/Showcase/Showcases/MenuShowcase.tsx","components/Showcase/Showcases/MessageBoxShowcase.tsx","components/Showcase/Showcases/ProgressShowcase.tsx","components/Showcase/Showcases/RadioboxShowcase.tsx","components/Showcase/Showcases/RadioButtonShowcase.tsx","components/Showcase/Showcases/SpinShowcase.tsx","components/Showcase/Showcases/TabsMenuShowcase.tsx","components/Showcase/Showcases/TextShowcase.tsx","components/Showcase/Showcases/TextareaShowcase.tsx","components/Showcase/Showcases/TextinputShowcase.tsx","components/Showcase/Showcases/TooltipShowcase.tsx","components/Showcase/Showcases/TumblerShowcase.tsx","components/Showcase/Showcases/UserPicShowcase.tsx","components/Showcase/Showcases/SliderShowcase.tsx","components/Sandbox/SandboxExample/SandboxExample.tsx","utils/toDeepToken.ts","api/downloadTheme.ts","components/Sandbox/CustomThemeDownloader/model.ts","components/Sandbox/CustomThemeDownloader/CustomThemeDownloader.tsx","components/Sandbox/Sandbox.tsx","App.tsx","index.tsx"],"names":["downloadTokens","tokensHash","a","fetch","method","body","JSON","stringify","response","json","ok","Error","errorMessage","parse","getLocation","window","location","href","replace","search","changeThemeEvent","createEvent","$themes","createStore","default","tokens","stylesDataDefault","mappings","mappingsDataDefault","preset","themeDefault","inverse","stylesDataInverse","mappingsDataInverse","themeInverse","brand","stylesDataBrand","mappingsDataBrand","themeBrand","$themesNames","map","themes","Object","keys","$theme","getState","$themeName","on","_","themeName","updateTokensQueryParameterEvent","name","value","queryParams","URLSearchParams","set","history","pushState","toString","setQueryParameter","delete","query","deleteQueryParameter","variablesChangedEvent","variablesChangedBatchEvent","variablesResetEvent","$cssVariables","$designTokens","$listDesignTokens","values","token","variablesInitializationGate","createGate","variablesInitializationFx","createEffect","get","theme","toast","success","error","state","ret","forEach","v","reset","forward","from","open","to","Clear","props","view","size","onClick","uploadTokens","shareTokensEvent","shareTokensFx","attach","source","mapParams","effect","length","$shareTokensLoading","pending","doneData","watch","copy","failData","autoClose","Share","loading","useStore","progress","Header","menuItems","val","content","className","ListTile","leftSpace","rightSpace","alignItems","leading","typography","color","options","onChange","event","target","IconBack","style","height","width","display","justifyContent","cursor","viewBox","d","fill","metricaGoal","goal","ym","TextinputField","label","path","description","customTokens","useState","setVal","visible","setVisible","scopeRef","useRef","anchorRef","isColorValue","Boolean","String","match","isColor","isChanged","useEffect","handleClick","useCallback","handleClose","onClearClick","changed","onColorChange","colorValue","rgb","r","g","b","hsl","h","s","l","hex","Badge","fontSize","textColor","debounceTimeout","iconRight","marginBottom","hint","position","ref","boxSizing","background","marginLeft","borderRadius","border","direction","anchor","scope","onClose","onChangeComplete","Headline","children","IconTwo","xmlns","SearchButton","withViewSearchArrowButton","ButtonBase","SearchInput","withHasClear","withViewSearchArrowTextinput","TextinputBase","componentsMap","badge","outlineColor","button","disabled","checked","iconLeft","type","icon","whiteSpace","buttonGroup","gaps","undefined","gap","index","pin","checkbox","indeterminate","divider","Divider","margin","header","action","hasClear","active","link","pseudo","menu","items","setValue","messageBox","backgroundColor","padding","actions","Progress","timing","maxValue","radiobox","radioButton","spin","tabsMenu","layout","tabs","id","activeTab","text","as","textarea","value1","setValue1","textinput","value2","setValue2","value3","setValue3","value4","setValue4","tooltip","visible1","setVisible1","visible2","setVisible2","visible3","setVisible3","visible4","setVisible4","visible5","setVisible5","visible6","setVisible6","anchorRef1","anchorRef2","anchorRef3","anchorRef4","anchorRef5","anchorRef6","marginRight","innerRef","hasTail","tumbler","checked1","setChecked1","checked2","setChecked2","labelBefore","labelAfter","aria-label","userPic","plus","avatarId","hasCamera","lodpiUrl","slider","state1","useSliderState","state2","state3","state4","state5","state6","state7","state8","state9","state10","filled","reverse","step","showTicks","showTickValues","Showcase","includes","filter","componentName","createElement","SandboxExample","setActiveTab","cssVariables","designTokens","yml","setYml","css","setCss","shownDiff","setDiff","createYaml","createCSS","reduce","acc","entries","push","prop","chunks","result","i","toDeepToken","c","deepmerge","all","YAML","cnTheme","themeboxConfig","output","transforms","buildPath","files","destination","format","downloadTheme","config","language","headers","res","data","item","uploadRawTokensEvent","uploadRawTokensFx","$uploadRawTokensLoading","message","CustomThemeDownloader","Spacer","Sandbox","globals","components","activeTab1","setActiveTab1","setFilter","tokensTab","tab","placeholder","groupName","groupTokens","key","activePane","panes","configureRootTheme","useGate","transition","Slide","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b01be1ec.chunk.js","sourcesContent":["import { VariablesType } from '../types'\n\nexport const downloadTokens = async (tokensHash: string | null) => {\n  if (!tokensHash) {\n    return\n  }\n\n  const response = await fetch('https://functions.yandexcloud.net/d4eg1ughq5da8rgfonij', {\n    method: 'POST',\n    body: JSON.stringify({\n      tokensHash,\n    }),\n  })\n\n  const json = await response.json()\n\n  if (!response.ok) {\n    throw new Error(json.errorMessage)\n  }\n\n  return JSON.parse(json) as { tokens: VariablesType[]; theme: string }\n}\n","const getLocation = () => window.location.href.replace(window.location.search, '')\n\nexport const getQueryParameter = (name: string) => {\n  return new URLSearchParams(window.location.search).get(name)\n}\n\nexport const setQueryParameter = (name: string, value: string) => {\n  const queryParams = new URLSearchParams(window.location.search)\n  queryParams.set(name, value)\n\n  window.history.pushState({}, '', `${getLocation()}?${queryParams.toString()}`)\n}\n\nexport const deleteQueryParameter = (name: string) => {\n  const queryParams = new URLSearchParams(window.location.search)\n  queryParams.delete(name)\n\n  const query = queryParams.toString() ? `?${queryParams.toString()}` : ''\n\n  window.history.pushState({}, '', getLocation() + query)\n}\n","import { createStore, createEvent } from 'effector'\n\nimport { theme as themeDefault } from '@yandex/ui/Theme/presets/default'\nimport { theme as themeInverse } from '@yandex/ui/Theme/presets/inverse'\nimport { theme as themeBrand } from '@yandex/ui/Theme/presets/brand'\n\nimport stylesDataDefault from '../themes/presets/example/root.json'\nimport stylesDataInverse from '../themes/presets/example-inverse/root.json'\nimport stylesDataBrand from '../themes/presets/example-brand/root.json'\n\nimport mappingsDataDefault from '../themes/presets/example/mappings.json'\nimport mappingsDataInverse from '../themes/presets/example-inverse/mappings.json'\nimport mappingsDataBrand from '../themes/presets/example-brand/mappings.json'\n\nimport { ThemeType, ThemeNamesType } from '../types'\n\nexport const changeThemeEvent = createEvent<ThemeNamesType>()\n\nexport const $themes = createStore<Record<string, ThemeType>>({\n  default: {\n    tokens: stylesDataDefault,\n    mappings: mappingsDataDefault,\n    preset: themeDefault,\n  },\n  inverse: {\n    tokens: stylesDataInverse,\n    mappings: mappingsDataInverse,\n    preset: themeInverse,\n  },\n  brand: {\n    tokens: stylesDataBrand,\n    mappings: mappingsDataBrand,\n    preset: themeBrand,\n  },\n})\n\nexport const $themesNames = $themes.map((themes) => Object.keys(themes))\n\nexport const $theme = createStore<ThemeType>($themes.getState().default)\n\nexport const $themeName = createStore<ThemeNamesType>('default')\n\n$theme.on(changeThemeEvent, (_, themeName) => $themes.getState()[themeName])\n\n$themeName.on(changeThemeEvent, (_, themeName) => themeName)\n","import { setQueryParameter, deleteQueryParameter } from '../utils/queryParameters'\n\nexport const TOKENS_QUERY_PARAMETER = 'tokens'\n\nexport const updateTokensQueryParameterEvent = (tokens: string) => {\n  if (!tokens) {\n    deleteQueryParameter(TOKENS_QUERY_PARAMETER)\n    return\n  }\n\n  setQueryParameter(TOKENS_QUERY_PARAMETER, tokens)\n}\n","import { createStore, createEvent, createEffect, forward, Store } from 'effector'\nimport { createGate } from 'effector-react'\nimport { toast } from 'react-toastify'\n\nimport { downloadTokens } from '../api/downloadTokens'\nimport { getQueryParameter } from '../utils/queryParameters'\nimport { changeThemeEvent } from './themes'\nimport { updateTokensQueryParameterEvent } from './query'\nimport { VariablesType, ThemeNamesType } from '../types'\n\nexport const variablesInitializationEvent = createEvent()\nexport const variablesChangedEvent = createEvent<VariablesType>()\nexport const variablesChangedBatchEvent = createEvent<VariablesType[]>()\nexport const variablesResetEvent = createEvent()\n\nexport const uploadTokensEvent = createEvent()\n\nexport const loadingTokensEvent = createEvent<boolean>()\n\nexport const $cssVariables = createStore({})\nexport const $designTokens = createStore<any>({})\n\nexport const $listDesignTokens: Store<VariablesType[]> = $designTokens.map((tokens) =>\n  Object.values<VariablesType>(tokens).map((token) => ({ ...token })),\n)\n\nexport const variablesInitializationGate = createGate()\n\nexport const variablesInitializationFx = createEffect(async () => {\n  const tokensHash = getQueryParameter('tokens')\n\n  if (!tokensHash) {\n    return\n  }\n\n  try {\n    const response = await downloadTokens(tokensHash)\n\n    if (!response) {\n      throw new Error('No response')\n    }\n\n    const { tokens, theme } = response\n\n    changeThemeEvent(theme as ThemeNamesType)\n    variablesChangedBatchEvent(tokens)\n    updateTokensQueryParameterEvent(tokensHash)\n    toast.success('Тема успешно загружена')\n  } catch (err) {\n    toast.error('Не удалось загрузить тему, проверьте ссылку')\n  }\n})\n\n// TODO: Удалять значение из стора если change=false.\n$designTokens\n  .on(variablesChangedEvent, (state, token) => ({ ...state, [token.name]: token }))\n  .on(variablesChangedBatchEvent, (state, tokens) => {\n    const ret: Record<string, any> = {}\n    tokens.forEach((v) => (ret[v.name] = v))\n    return { ...state, ...ret }\n  })\n  .reset(variablesResetEvent)\n\n// TODO: Удалять значение из стора если change=false.\n$cssVariables\n  .on(variablesChangedEvent, (state, { name, value }) => ({ ...state, [`--${name}`]: value }))\n  .on(variablesChangedBatchEvent, (state, tokens) => {\n    const ret: Record<string, any> = {}\n    tokens.forEach((v) => (ret[`--${v.name}`] = v.value))\n    return { ...state, ...ret }\n  })\n  .reset(variablesResetEvent)\n\nforward({\n  from: variablesInitializationGate.open,\n  to: variablesInitializationFx,\n})\n","import React, { FC } from 'react'\nimport { Button, IButtonProps as ButtonProps } from '@yandex/ui/Button/desktop/bundle'\n\nimport { variablesResetEvent } from '../../../model/tokens'\n\nexport const Clear: FC<ButtonProps> = (props) => {\n  return (\n    <Button {...props} view=\"clear\" size=\"m\" onClick={variablesResetEvent}>\n      Сбросить\n    </Button>\n  )\n}\n","import { VariablesType } from '../types'\n\nexport const uploadTokens = async (theme: string, tokens: VariablesType[]) => {\n  const response = await fetch('https://functions.yandexcloud.net/d4emk05t1v8gvek4q8l0', {\n    method: 'POST',\n    body: JSON.stringify({\n      theme,\n      tokens,\n    }),\n  })\n\n  const json = await response.json()\n\n  if (!response.ok) {\n    throw new Error(json.errorMessage)\n  }\n\n  return json.tokensHash\n}\n","import { attach, createEffect, createEvent, forward } from 'effector'\nimport copy from 'copy-to-clipboard'\nimport { toast } from 'react-toastify'\n\nimport { $themeName } from '../../../model/themes'\nimport { $listDesignTokens } from '../../../model/tokens'\nimport { updateTokensQueryParameterEvent } from '../../../model/query'\nimport { uploadTokens } from '../../../api/uploadTokens'\n\nimport { ThemeNamesType, VariablesType } from '../../../types'\n\ntype ShareTokensFxPropsType = {\n  themeName: ThemeNamesType\n  tokens: VariablesType[]\n}\n\nexport const shareTokensEvent = createEvent()\n\nexport const shareTokensFx = attach({\n  source: {\n    themeName: $themeName,\n    tokens: $listDesignTokens,\n  },\n  mapParams: (_: any, { themeName, tokens }) => ({\n    themeName,\n    tokens,\n  }),\n  effect: createEffect(({ themeName, tokens }: ShareTokensFxPropsType) => {\n    if (tokens.length === 0) {\n      return\n    }\n\n    return uploadTokens(themeName, tokens)\n  }),\n})\n\nexport const $shareTokensLoading = shareTokensFx.pending\n\nshareTokensFx.doneData.watch((tokensHash) => {\n  updateTokensQueryParameterEvent(tokensHash)\n  copy(window.location.href)\n  toast.success('Ссылка успешно скопирована в буфер обмена')\n})\n\nshareTokensFx.failData.watch((error) => toast.error(error, { autoClose: 5000 }))\n\nforward({\n  from: shareTokensEvent,\n  to: shareTokensFx,\n})\n","import React, { FC } from 'react'\nimport { Button, IButtonProps as ButtonProps } from '@yandex/ui/Button/desktop/bundle'\nimport { useStore } from 'effector-react'\n\nimport { shareTokensEvent, $shareTokensLoading } from './model'\n\nexport const Share: FC<ButtonProps> = (props) => {\n  const loading = useStore($shareTokensLoading)\n\n  return (\n    <Button {...props} view=\"action\" size=\"m\" onClick={shareTokensEvent} progress={loading}>\n      Поделиться\n    </Button>\n  )\n}\n","import React, { ChangeEvent } from 'react'\nimport { useStore } from 'effector-react'\nimport { Select } from '@yandex/ui/Select/desktop/bundle'\nimport { ListTile } from '@yandex/ui/ListTile/desktop'\nimport { Text } from '@yandex/ui/Text/bundle'\n\nimport { Clear } from './Clear'\nimport { Share } from './Share'\n\nimport { $themes, $themesNames, $themeName, changeThemeEvent } from '../../model/themes'\n\nimport { ThemeNamesType } from '../../types'\n\nimport './Header.css'\n\nexport function Header() {\n  const themes = useStore($themes)\n  const themeName = useStore($themeName)\n  const themesNames = useStore($themesNames)\n\n  const menuItems = themesNames.map((val) => ({\n    value: val,\n    content: themes[val].name || val,\n  }))\n\n  const handleChange = (event: ChangeEvent<HTMLSelectElement>) =>\n    changeThemeEvent(event.target.value as ThemeNamesType)\n\n  return (\n    <div className=\"Header\">\n      <ListTile\n        leftSpace=\"m\"\n        rightSpace=\"m\"\n        alignItems=\"center\"\n        leading={\n          <Text typography=\"control-m\" color=\"secondary\">\n            Тема из пресетов @yandex/ui:\n          </Text>\n        }\n      >\n        <Select\n          size=\"m\"\n          view=\"default\"\n          options={menuItems}\n          value={themeName}\n          onChange={handleChange}\n          className=\"Header-ThemeSelector\"\n        />\n        <Share className=\"Header-Share\" />\n        <Clear className=\"Header-Clear\" />\n      </ListTile>\n    </div>\n  )\n}\n","import React, { FC, MouseEventHandler } from 'react'\n\nexport const IconBack: FC<{ onClick: MouseEventHandler<HTMLSpanElement>; className?: string }> = ({\n  onClick,\n  className,\n}) => (\n  <span\n    onClick={onClick}\n    className={className}\n    style={{\n      height: 32,\n      width: 32,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      cursor: 'pointer',\n    }}\n  >\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\">\n      <path\n        d=\"M3.713 9a.75.75 0 0 1-.697-1.026l1.862-4.705a.75.75 0 0 1 1.318-.145l.9 1.328a9 9 0 1 1-3.939 9.234 1 1 0 0 1 1.966-.373 7 7 0 1 0 3.096-7.205l1.167 1.721A.75.75 0 0 1 8.766 9H3.712z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  </span>\n)\n","export const COUNTER_ID = '69595123';\n\nexport const metricaGoal = (goal: string) => {\n    // @ts-ignore\n    window.ym(COUNTER_ID, 'reachGoal', goal);\n};\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport { ChromePicker } from 'react-color'\nimport { Textinput } from '@yandex/ui/Textinput/desktop/bundle'\nimport { ListTile } from '@yandex/ui/ListTile/desktop'\nimport { Text } from '@yandex/ui/Text/bundle'\nimport { Badge } from '@yandex/ui/Badge/desktop'\nimport { Popup } from '@yandex/ui/Popup/desktop/bundle'\n\nimport { isColor } from '../../utils/isColor'\nimport { variablesChangedEvent } from '../../model/tokens'\nimport { IconBack } from '../IconBack/IconBack'\n\nimport { metricaGoal } from '../YaMetrika/YaMetrika'\n\nexport const TextinputField: React.FC<{\n  label: string\n  value: string\n  path: string[]\n  description: string\n  customTokens: string\n}> = ({ label, value, path, description, customTokens }) => {\n  const [val, setVal] = useState(customTokens)\n\n  const [visible, setVisible] = useState(false)\n  const scopeRef = useRef<HTMLDivElement>(null)\n  const anchorRef = useRef<HTMLDivElement>(null)\n\n  const isColorValue = isColor(value)\n  const isChanged = value !== val\n\n  // Update internal value when showcase is changed.\n  useEffect(() => {\n    setVal(customTokens || value)\n  }, [value, customTokens])\n\n  const handleClick = useCallback(() => {\n    setVisible(!visible)\n  }, [visible])\n\n  const handleClose = useCallback(() => {\n    setVisible(false)\n  }, [])\n\n  const onClearClick = useCallback(() => {\n    setVal(value)\n    variablesChangedEvent({\n      path,\n      name: label,\n      value: value,\n      changed: false,\n    })\n  }, [value, label, path])\n\n  const onColorChange = useCallback(\n    (color) => {\n      let colorValue = ''\n\n      // TODO: Move to util.\n      if (color.source === 'rgb') {\n        colorValue = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`\n      } else if (color.source === 'hsl') {\n        colorValue = `hsla(${color.hsl.h}, ${color.hsl.s}, ${color.hsl.l}, ${color.hsl.a})`\n      } else {\n        colorValue = color.hex\n      }\n\n      setVal(colorValue)\n      variablesChangedEvent({\n        path,\n        name: label,\n        value: colorValue,\n        changed: colorValue !== value,\n      })\n    },\n    [path, value, label],\n  )\n\n  const onChange = useCallback(\n    (event) => {\n      setVal(event.target.value)\n      variablesChangedEvent({\n        path,\n        name: label,\n        value: event.target.value,\n        changed: event.target.value !== value,\n      })\n    },\n    [path, value, label],\n  )\n\n  return (\n    <ListTile\n      leftSpace=\"m\"\n      rightSpace=\"m\"\n      alignItems=\"center\"\n      leading={\n        <div style={{ width: 300, display: 'inline-block' }}>\n          <Text typography=\"control-m\" color=\"secondary\">\n            {label}:{' '}\n          </Text>\n          {description && (\n            <div className=\"Description-Wrapper\">\n              <Badge\n                style={{ fontSize: '11px' }}\n                className=\"Description-Trigger\"\n                content=\"?\"\n                textColor=\"#fff\"\n                color=\"#535353\"\n              />\n              <span className=\"Description-Popover\" style={{ fontSize: 14 }}>\n                {description}\n              </span>\n            </div>\n          )}\n        </div>\n      }\n    >\n      <div style={{ display: 'flex' }}>\n        <Textinput\n          debounceTimeout={500}\n          onChange={(event) => {\n            onChange(event)\n            metricaGoal('change-tokens')\n          }}\n          // @ts-ignore\n          iconRight={\n            isChanged && (\n              <IconBack\n                onClick={() => {\n                  onClearClick()\n                  metricaGoal('clear-textinput')\n                }}\n              />\n            )\n          }\n          view=\"default\"\n          size=\"s\"\n          style={{ width: 200, marginBottom: 8 }}\n          value={val}\n          // @ts-ignore\n          hint={isChanged && `Оригинальное значение - ${value}`}\n        />\n        {isColorValue && (\n          <div style={{ position: 'relative' }} ref={scopeRef}>\n            <div\n              ref={anchorRef}\n              onClick={() => {\n                handleClick()\n                metricaGoal('picker')\n              }}\n              style={{\n                boxSizing: 'border-box',\n                background: val,\n                width: 32,\n                height: 32,\n                marginLeft: 8,\n                borderRadius: '50%',\n                border: '1px solid #d9d9d9',\n              }}\n            />\n            <Popup\n              direction=\"bottom-end\"\n              target=\"anchor\"\n              anchor={anchorRef}\n              view=\"default\"\n              visible={visible}\n              scope={scopeRef}\n              onClose={handleClose}\n            >\n              <ChromePicker\n                color={val}\n                onChangeComplete={(event) => {\n                  onColorChange(event)\n                  metricaGoal('change-tokens')\n                }}\n              />\n            </Popup>\n          </div>\n        )}\n      </div>\n    </ListTile>\n  )\n}\n","export function isColor(value: string): boolean {\n  return Boolean(String(value).match(/^(#|hsla?|rgba?)/))\n}\n","import React from 'react'\nimport { Text } from '@yandex/ui/Text/bundle'\n\nexport const Headline: React.FC = ({ children }) => (\n  <Text typography=\"display-s\" color=\"primary\">\n    {children}\n  </Text>\n)\n","import React from 'react';\nimport { Badge } from '@yandex/ui/Badge';\nimport { Button } from '@yandex/ui/Button/Button.bundle/desktop';\n\nimport { Headline } from '../../Headline/Headline';\n\nconst IconTwo = () => (\n  <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\">\n    <path d=\"M4.5 18a.5.5 0 1 1 0-1 .5.5 0 0 1 0 1zm0-3a2.5 2.5 0 0 0 0 5 2.5 2.5 0 0 0 0-5zm11 3a.5.5 0 1 1 0-1 .5.5 0 0 1 0 1zm0-3a2.5 2.5 0 0 0 0 5 2.5 2.5 0 0 0 0-5zM19 4H5.78L4.97.758A.998.998 0 0 0 4 0H1a1 1 0 0 0 0 2h2.22l.805 3.222.01.042 1.995 7.98a1 1 0 0 0 1.135.743l11.017-1.837c1.02-.17 1.818-1.11 1.818-2.14V5a1 1 0 0 0-1-1zm-1 6.01c0 .05-.085.157-.146.167L7.746 11.862 6.28 6H18v4.01z\" />\n  </svg>\n)\n\nexport const BadgeShowcase = () => {\n  return (\n    <>\n      <Headline>Badge</Headline>\n      <div\n        className=\"Showcase-Item\"\n        style={{ display: 'flex', justifyContent: 'space-between', width: 300 }}\n      >\n        <Badge />\n\n        <Badge content=\"?\" />\n\n        <Badge content={5}>\n          <IconTwo />\n        </Badge>\n\n        <Button view=\"default\" size=\"m\">\n          Закладка\n          <Badge color=\"#0679ff\" outlineColor=\"#0679ff\" content={5} style={{ marginLeft: 5 }} />\n        </Button>\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport { Button as ButtonBase } from '@yandex/ui/Button';\nimport { Textinput as TextinputBase, withHasClear } from '@yandex/ui/Textinput/desktop';\nimport { Header, HeaderSearch, HeaderNav, HeaderNavItem } from '@yandex/ui/Header/desktop';\nimport { withViewSearchArrow as withViewSearchArrowButton } from '@yandex/ui/Header/Button';\nimport { withViewSearchArrow as withViewSearchArrowTextinput } from '@yandex/ui/Header/Textinput';\n\nimport { Headline } from '../../Headline/Headline';\n\nconst SearchButton = withViewSearchArrowButton(ButtonBase);\nconst SearchInput = withHasClear(withViewSearchArrowTextinput(TextinputBase));\n\nexport const HeaderShowcase = () => {\n  return (\n    <>\n      <Headline> Header </Headline>\n      <div className=\"Showcase-Item\">\n        <Header className=\"SearchHeader\">\n          <HeaderSearch action=\"//yandex.ru/search\">\n            <SearchInput view=\"search-arrow\" name=\"text\" hasClear value=\"Yandex\" />\n            <SearchButton view=\"search-arrow\"> Найти </SearchButton>\n          </HeaderSearch>\n        </Header>\n        <br /> <br />\n        <Header className=\"SearchHeader\">\n          <HeaderSearch action=\"//yandex.ru/search\">\n            <HeaderNav>\n              <HeaderNavItem href=\"/\"> Таб </HeaderNavItem>\n              <HeaderNavItem href=\"/\"> По </HeaderNavItem>\n              <HeaderNavItem href=\"/\"> Умолчанию </HeaderNavItem>\n              <HeaderNavItem href=\"/\" active> Активный </HeaderNavItem>\n            </HeaderNav>\n          </HeaderSearch>\n        </Header>\n      </div>\n    </>\n  );\n}\n","import React, { createElement, ComponentType } from 'react'\n\nimport { AttachShowcase } from './Showcases/AttachShowcase';\nimport { BadgeShowcase } from './Showcases/BadgeShowcase';\nimport { ButtonGroupShowcase } from './Showcases/ButtonGroupShowcase';\nimport { ButtonShowcase } from './Showcases/ButtonShowcase';\nimport { CheckboxShowcase } from './Showcases/CheckboxShowcase';\nimport { DividerShowcase } from './Showcases/DividerShowcase';\nimport { HeaderShowcase } from './Showcases/HeaderShowcase';\nimport { LinkShowcase } from './Showcases/LinkShowcase';\nimport { MenuShowcase } from './Showcases/MenuShowcase';\nimport { MessageBoxShowcase } from './Showcases/MessageBoxShowcase';\nimport { ProgressShowcase } from './Showcases/ProgressShowcase';\nimport { RadioboxShowcase } from './Showcases/RadioboxShowcase';\nimport { RadioButtonShowcase } from './Showcases/RadioButtonShowcase';\nimport { SliderShowcase } from './Showcases/SliderShowcase';\nimport { SpinShowcase } from './Showcases/SpinShowcase';\nimport { TabsMenuShowcase } from './Showcases/TabsMenuShowcase';\nimport { TextareaShowcase } from './Showcases/TextareaShowcase';\nimport { TextinputShowcase } from './Showcases/TextinputShowcase';\nimport { TextShowcase } from './Showcases/TextShowcase';\nimport { TooltipShowcase } from './Showcases/TooltipShowcase';\nimport { TumblerShowcase } from './Showcases/TumblerShowcase';\nimport { UserPicShowcase } from './Showcases/UserPicShowcase';\n\nimport './Showcase.css'\n\nconst componentsMap: Record<string, ComponentType> = {\n  attach: AttachShowcase,\n  badge: BadgeShowcase,\n  button: ButtonShowcase,\n  buttonGroup: ButtonGroupShowcase,\n  checkbox: CheckboxShowcase,\n  divider: DividerShowcase,\n  header: HeaderShowcase,\n  link: LinkShowcase,\n  menu: MenuShowcase,\n  messageBox: MessageBoxShowcase,\n  progress: ProgressShowcase,\n  radiobox: RadioboxShowcase,\n  radioButton: RadioButtonShowcase,\n  spin: SpinShowcase,\n  tabsMenu: TabsMenuShowcase,\n  text: TextShowcase,\n  textarea: TextareaShowcase,\n  textinput: TextinputShowcase,\n  tooltip: TooltipShowcase,\n  tumbler: TumblerShowcase,\n  userPic: UserPicShowcase,\n  slider: SliderShowcase\n}\n\nexport const Showcase: React.FC<{ includes: string[] }> = ({ includes }) => {\n  return (\n    <div className=\"Showcase\">\n      {includes\n        .filter((componentName) => componentsMap[componentName])\n        .map((componentName) => createElement(componentsMap[componentName]))}\n    </div>\n  )\n}\n","import React from 'react';\nimport { Attach } from '@yandex/ui/Attach/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const AttachShowcase = () => {\n  return (\n    <>\n      <Headline>Attach</Headline>\n      <div className=\"Showcase-Item\">\n        <Attach size=\"l\" view=\"default\">\n          Select file\n        </Attach>\n        <Attach size=\"m\" view=\"default\">\n          Select file\n        </Attach>\n        <Attach size=\"s\" view=\"default\">\n          Select file\n        </Attach>\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport { Button } from '@yandex/ui/Button/Button.bundle/desktop';\nimport { Icon } from '@yandex/ui/Icon/Icon.bundle/desktop';\nimport { Text } from '@yandex/ui/Text/Text.bundle/desktop';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const ButtonShowcase = () => {\n  const view = ['default', 'action', 'pseudo', 'link', 'clear', 'raised']\n\n  return (\n    <>\n      <Headline>Button</Headline>\n      {view.map((view: any) => {\n        return (\n          <>\n            <p>View {view}</p>\n            <div className=\"Showcase-Item\">\n              <Button view={view} size=\"l\">\n                Button\n              </Button>\n              <Button view={view} size=\"m\">\n                Button\n              </Button>\n              <Button view={view} size=\"s\">\n                Button\n              </Button>\n              <Button view={view} size=\"s\" disabled>\n                Button\n              </Button>\n              <Button view={view} size=\"s\" checked>\n                Button\n              </Button>\n              <Button view={view} size=\"s\" progress>\n                Button\n              </Button>\n              <Button\n                view={view}\n                size=\"s\"\n                iconLeft={(className: string) => (\n                  <Icon size=\"s\" type=\"arrow\" direction=\"left\" className={className} />\n                )}\n                iconRight={(className: string) => (\n                  <Icon size=\"s\" type=\"arrow\" direction=\"left\" className={className} />\n                )}\n              >\n                Button\n              </Button>\n              <Button\n                view={view}\n                size=\"s\"\n                icon={(className: string) => (\n                  <Icon size=\"s\" type=\"arrow\" direction=\"left\" className={className} />\n                )}\n              />\n            </div>\n          </>\n        )\n      })}\n      <div className=\"Showcase-Item\" style={{ whiteSpace: 'normal' }}>\n        <Button view=\"default\" size=\"m\">\n          Button\n        </Button>\n        <Text>Любя, съешь щипцы, — вздохнёт мэр, — кайф жгуч.</Text>\n        <Text>\n          Шеф взъярён тчк щипцы с эхом гудбай Жюль. Эй, жлоб! Где туз? Прячь юных съёмщиц в шкаф.\n          Экс-граф? Плюш изъят. Бьём чуждый цен хвощ!\n        </Text>\n        <Button view=\"action\" size=\"m\">\n          Button\n        </Button>\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport { Button } from '@yandex/ui/Button/Button.bundle/desktop';\nimport { ButtonGroup } from '@yandex/ui/ButtonGroup/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const ButtonGroupShowcase = () => {\n  const gaps = [undefined, 's', 'm', 'l', 'xl'] as ('s' | 'm' | 'l' | 'xl')[];\n  const pins = ['circle', 'round'] as ('circle' | 'round')[];\n\n  return (\n    <>\n      <Headline>ButtonGroup</Headline>\n      <div className=\"Showcase-Item\">\n        {gaps.map((gap, index) => (\n          <>\n            { index !== 0 && (<> <br /> <br /> </>) }\n            <p> Gap: {gap || 'no gap'} </p>\n            <ButtonGroup gap={gap}>\n                <Button view=\"default\" size=\"m\">\n                    Button 1\n                </Button>\n                <Button view=\"default\" size=\"m\">\n                    Button 2\n                </Button>\n                <Button view=\"default\" size=\"m\">\n                    Button 3\n                </Button>\n            </ButtonGroup>\n          </>\n        ))}\n\n        {pins.map((pin) => (\n          <>\n            <br /> <br />\n            <p> Pin: { pin } </p>\n            <ButtonGroup pin={pin}>\n                <Button view=\"default\" size=\"m\">\n                    Button 1\n                </Button>\n                <Button view=\"default\" size=\"m\">\n                    Button 2\n                </Button>\n            </ButtonGroup>\n          </>\n        ))}\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { Checkbox } from '@yandex/ui/Checkbox/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const CheckboxShowcase = () => {\n  return (\n    <>\n      <Headline>Checkbox</Headline>\n      <div className=\"Showcase-Item\">\n        <Checkbox size=\"m\" view=\"default\" label=\"Label\" checked />\n        <Checkbox size=\"m\" view=\"default\" label=\"Label\" />\n        <Checkbox size=\"m\" view=\"default\" label=\"Label\" disabled />\n        <Checkbox size=\"m\" view=\"default\" label=\"Label\" indeterminate />\n        <br />\n        <br />\n        <Checkbox size=\"s\" view=\"default\" label=\"Label\" checked />\n        <Checkbox size=\"s\" view=\"default\" label=\"Label\" />\n        <Checkbox size=\"s\" view=\"default\" label=\"Label\" disabled />\n        <Checkbox size=\"s\" view=\"default\" label=\"Label\" indeterminate />\n        <br />\n        <br />\n        <Checkbox size=\"s\" view=\"outline\" label=\"Label\" checked />\n        <Checkbox size=\"s\" view=\"outline\" label=\"Label\" />\n        <Checkbox size=\"s\" view=\"outline\" label=\"Label\" disabled />\n        <Checkbox size=\"s\" view=\"outline\" label=\"Label\" indeterminate />\n        <br />\n        <br />\n        <Checkbox size=\"m\" view=\"outline\" label=\"Label\" checked />\n        <Checkbox size=\"m\" view=\"outline\" label=\"Label\" />\n        <Checkbox size=\"m\" view=\"outline\" label=\"Label\" disabled />\n        <Checkbox size=\"m\" view=\"outline\" label=\"Label\" indeterminate />\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport { Divider } from '@yandex/ui/Divider';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const DividerShowcase = () => {\n  return (\n    <>\n      <Headline>Divider</Headline>\n      <div className=\"Showcase-Item\">\n        <p>Content</p>\n        <Divider style={{ margin: '8px 0' }}><p>Section</p></Divider>\n        <p>Content</p>\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport { Link } from '@yandex/ui/Link/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const LinkShowcase = () => {\n  return (\n    <>\n      <Headline>Link</Headline>\n      <div className=\"Showcase-Item\">\n        <Link href=\"https://ya.ru\" view=\"default\">\n          Ссылка\n        </Link>\n        <br />\n        <Link view=\"default\" pseudo>\n          Ссылка\n        </Link>\n        <br />\n        <Link href=\"https://ya.ru\" view=\"default\" disabled>\n          Ссылка\n        </Link>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react';\nimport { Menu } from '@yandex/ui/Menu/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const MenuShowcase = () => {\n  const items = [\n    { value: 'a', content: 'Каждый' },\n    { value: 'b', content: 'Охотник' },\n    {\n      items: [\n        { value: 'c', content: 'Желает', disabled: true },\n        { value: 'd', content: 'Знать' },\n        { value: 'e', content: 'Где' },\n      ],\n    },\n  ]\n\n  const [value, setValue] = useState('a')\n\n  return (\n    <>\n      <Headline>Menu</Headline>\n      <div className=\"Showcase-Item\">\n        <Menu\n          size=\"m\"\n          theme=\"normal\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n        <Menu\n          size=\"s\"\n          theme=\"normal\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n      </div>\n      <div className=\"Showcase-Item\">\n        <Menu\n          size=\"m\"\n          view=\"default\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n        <Menu\n          size=\"s\"\n          view=\"default\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport { MessageBox } from '@yandex/ui/MessageBox/desktop/bundle';\nimport { Button } from '@yandex/ui/Button/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const MessageBoxShowcase = () => {\n  return (\n    <>\n      <Headline>MessageBox</Headline>\n      <div className=\"Showcase-Item\">\n        <div style={{ backgroundColor: '#fff', padding: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"default\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"clear\" size=\"s\">\n                  Отклонить\n                </Button>\n                <Button view=\"action\" size=\"s\">\n                  Принять\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n        <div style={{ backgroundColor: '#000', padding: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"inverse\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"clear\" size=\"s\">\n                  Отклонить\n                </Button>\n                <Button view=\"action\" size=\"s\">\n                  Принять\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n        <div style={{ backgroundColor: '#fff', padding: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"promo\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"action\" size=\"s\">\n                  Подробнее\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport { Progress } from '@yandex/ui/Progress/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const ProgressShowcase = () => {\n  return (\n    <>\n      <Headline>Progres</Headline>\n      <div className=\"Showcase-Item\">\n        <Progress timing=\"linear\" value={50} maxValue={100} />\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport { Radiobox } from '@yandex/ui/Radiobox/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const RadioboxShowcase = () => {\n  const options = [\n    { label: 'Option A', value: 'a' },\n    { label: 'Option B', value: 'b' },\n    { label: 'Option C (disabled)', value: 'c', disabled: true },\n  ]\n\n  return (\n    <>\n      <Headline>Radiobox</Headline>\n      <div className=\"Showcase-Item\">\n        <Radiobox size=\"m\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <Radiobox size=\"s\" view=\"default\" value=\"a\" options={options} />\n      </div>\n      <div className=\"Showcase-Item\">\n        <Radiobox size=\"m\" view=\"outline\" value=\"a\" options={options} />\n        <br />\n        <Radiobox size=\"s\" view=\"outline\" value=\"a\" options={options} />\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport { RadioButton } from '@yandex/ui/RadioButton/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const RadioButtonShowcase = () => {\n  const options = [\n    { value: 'a', children: 'Option A' },\n    { value: 'b', children: 'Option B' },\n    { value: 'c', children: 'Option C' },\n  ]\n\n  return (\n    <>\n      <Headline>RadioButton</Headline>\n      <div className=\"Showcase-Item\">\n        <RadioButton size=\"l\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <br />\n        <RadioButton size=\"m\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <br />\n        <RadioButton size=\"s\" view=\"default\" value=\"a\" options={options} />\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport { Spin } from '@yandex/ui/Spin/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const SpinShowcase = () => {\n  return (\n    <>\n      <Headline>Spin</Headline>\n      <div className=\"Showcase-Item\">\n        <Spin progress view=\"default\" size=\"l\" />\n        <Spin progress view=\"default\" size=\"m\" />\n        <Spin progress view=\"default\" size=\"s\" />\n        <Spin progress view=\"default\" size=\"xs\" />\n        <Spin progress view=\"default\" size=\"xxs\" />\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport { TabsMenu } from '@yandex/ui/TabsMenu/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const TabsMenuShowcase = () => {\n  return (\n    <>\n      <Headline>TabsMenu</Headline>\n      <div className=\"Showcase-Item\">\n        <TabsMenu\n          size=\"m\"\n          view=\"default\"\n          layout=\"horiz\"\n          tabs={[\n            { id: 'search', content: 'Поиск' },\n            { id: 'images', content: 'Картинки' },\n            { id: 'video', content: 'Видео' },\n          ]}\n          activeTab={'search'}\n        />\n\n        <br />\n        <TabsMenu\n          size=\"s\"\n          view=\"default\"\n          layout=\"horiz\"\n          tabs={[\n            { id: 'search', content: 'Поиск' },\n            { id: 'images', content: 'Картинки' },\n            { id: 'video', content: 'Видео' },\n          ]}\n          activeTab={'search'}\n        />\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport { Text } from '@yandex/ui/Text/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const TextShowcase = () => {\n  return (\n    <>\n      <Headline>Text</Headline>\n      <div className=\"Showcase-Item\">\n        <Text as=\"div\">\n          Миссия Яндекса — помогать людям решать задачи и достигать своих целей в жизни.\n        </Text>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react';\nimport { Textarea } from '@yandex/ui/Textarea/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const TextareaShowcase = () => {\n  const [value1, setValue1] = useState('')\n\n  return (\n    <>\n      <Headline>Textarea</Headline>\n      <div className=\"Showcase-Item\">\n        <Textarea\n          hasClear\n          size=\"m\"\n          view=\"default\"\n          value={value1}\n          onChange={(event) => setValue1(event.target.value)}\n          onClearClick={() => setValue1('')}\n        />\n        <br />\n        <br />\n        <Textarea\n          hasClear\n          size=\"s\"\n          view=\"default\"\n          value={value1}\n          onChange={(event) => setValue1(event.target.value)}\n          onClearClick={() => setValue1('')}\n        />\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react';\nimport { Textinput } from '@yandex/ui/Textinput/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const TextinputShowcase = () => {\n  const [value1, setValue1] = useState('')\n  const [value2, setValue2] = useState('')\n  const [value3, setValue3] = useState('')\n  const [value4, setValue4] = useState('')\n\n  return (\n    <>\n      <Headline>Textinput</Headline>\n      <div className=\"Showcase-Item\">\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"m\"\n            view=\"default\"\n            value={value1}\n            onChange={(event) => setValue1(event.target.value)}\n            onClearClick={() => setValue1('')}\n          />\n        </div>\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"s\"\n            view=\"default\"\n            value={value2}\n            onChange={(event) => setValue2(event.target.value)}\n            onClearClick={() => setValue2('')}\n          />\n        </div>\n      </div>\n      <div className=\"Showcase-Item\">\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"s\"\n            label=\"Label\"\n            view=\"material\"\n            value={value3}\n            onChange={(event) => setValue3(event.target.value)}\n            onClearClick={() => setValue2('')}\n          />\n        </div>\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            label=\"Label\"\n            size=\"m\"\n            view=\"material\"\n            value={value4}\n            onChange={(event) => setValue4(event.target.value)}\n            onClearClick={() => setValue2('')}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { useState, useRef } from 'react';\nimport { Tooltip } from '@yandex/ui/Tooltip/desktop/bundle';\nimport { Button } from '@yandex/ui/Button/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const TooltipShowcase = () => {\n  const [visible1, setVisible1] = useState(true)\n  const [visible2, setVisible2] = useState(true)\n  const [visible3, setVisible3] = useState(true)\n  const [visible4, setVisible4] = useState(true)\n  const [visible5, setVisible5] = useState(true)\n  const [visible6, setVisible6] = useState(true)\n  const anchorRef1 = useRef<HTMLDivElement>(null)\n  const anchorRef2 = useRef<HTMLDivElement>(null)\n  const anchorRef3 = useRef<HTMLDivElement>(null)\n  const anchorRef4 = useRef<HTMLDivElement>(null)\n  const anchorRef5 = useRef<HTMLDivElement>(null)\n  const anchorRef6 = useRef<HTMLDivElement>(null)\n  const scopeRef = useRef<HTMLDivElement>(null)\n\n  return (\n    <>\n      <Headline>Tooltip</Headline>\n      <div className=\"Showcase-Item\">\n        <div style={{ position: 'relative', display: 'flex', height: 96 }} ref={scopeRef}>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef1}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible1(!visible1)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef2}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible2(!visible2)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef3}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible3(!visible3)}\n            >\n              Target\n            </Button>\n          </div>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"s\"\n            anchor={anchorRef1}\n            scope={scopeRef}\n            visible={visible1}\n          >\n            Size small\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"m\"\n            anchor={anchorRef2}\n            scope={scopeRef}\n            visible={visible2}\n          >\n            Size medium\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"l\"\n            anchor={anchorRef3}\n            scope={scopeRef}\n            visible={visible3}\n          >\n            Size large\n          </Tooltip>\n        </div>\n      </div>\n      <div className=\"Showcase-Item\">\n        <div style={{ position: 'relative', display: 'flex', height: 96 }} ref={scopeRef}>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef4}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible4(!visible4)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef5}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible5(!visible5)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef6}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible6(!visible6)}\n            >\n              Target\n            </Button>\n          </div>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"s\"\n            state=\"warning\"\n            anchor={anchorRef4}\n            scope={scopeRef}\n            visible={visible4}\n          >\n            Size small\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"m\"\n            state=\"success\"\n            anchor={anchorRef5}\n            scope={scopeRef}\n            visible={visible5}\n          >\n            Size medium\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"l\"\n            state=\"alert\"\n            anchor={anchorRef6}\n            scope={scopeRef}\n            visible={visible6}\n          >\n            Size large\n          </Tooltip>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react';\nimport { Tumbler } from '@yandex/ui/Tumbler/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const TumblerShowcase = () => {\n  const [checked1, setChecked1] = useState(true)\n  const [checked2, setChecked2] = useState(false)\n\n  return (\n    <>\n      <Headline>Tumbler</Headline>\n      <div className=\"Showcase-Item\">\n        <>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"m\"\n              view=\"default\"\n              checked={checked1}\n              onChange={() => setChecked1(!checked1)}\n              labelBefore=\"labelBefore\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"m\"\n              view=\"default\"\n              checked\n              disabled\n              onChange={() => {}}\n              labelAfter=\"disabled check\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"s\"\n              view=\"default\"\n              checked={checked2}\n              onChange={() => setChecked2(!checked2)}\n              labelAfter=\"labelAfter\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"l\"\n              view=\"default\"\n              checked={false}\n              disabled\n              onChange={() => {}}\n              labelBefore={\n                <svg\n                  aria-label=\"labelBefore\"\n                  width=\"16\"\n                  height=\"16\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M3.5 7.003a1.5 1.5 0 0 0-1.5 1.5v6a1.5 1.5 0 0 0 1.5 1.5h9a1.5 1.5 0 0 0 1.5-1.5v-6a1.5 1.5 0 0 0-1.5-1.5H12v-2a4 4 0 0 0-8 0v2h-.5zm2.5-2a2 2 0 1 1 4 0V7H6V5.003z\"\n                    fill=\"currentColor\"\n                  />\n                </svg>\n              }\n              labelAfter=\"disabled\"\n            />\n          </div>\n        </>\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport { UserPic } from '@yandex/ui/UserPic/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const UserPicShowcase = () => {\n  return (\n    <>\n      <Headline>UserPic</Headline>\n      <div className=\"Showcase-Item\">\n        <>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic plus avatarId=\"43978/351415393-30646433\" size=\"m\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic avatarId=\"0/0-0\" hasCamera size=\"m\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic plus avatarId=\"0/0-0\" hasCamera size=\"s\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic\n              lodpiUrl=\"https://jing.yandex-team.ru/files/kri0-gen/halp_orange.jpg\"\n              size=\"s\"\n            />\n          </div>\n        </>\n      </div>\n    </>\n  )\n}\n","import React from 'react';\nimport { Slider, useSliderState } from '@yandex/ui/Slider/desktop/bundle';\n\nimport { Headline } from '../../Headline/Headline';\n\nexport const SliderShowcase = () => {\n  const state1 = useSliderState({ value: [20] });\n  const state2 = useSliderState({ value: [20, 50] });\n\n  const state3 = useSliderState({ value: [20] });\n  const state4 = useSliderState({ value: [20, 50] });\n\n  const state5 = useSliderState({ value: [20] });\n  const state6 = useSliderState({ value: [20, 50] });\n\n  const state7 = useSliderState({ value: [20] });\n  const state8 = useSliderState({ value: [20, 50] });\n\n  const state9 = useSliderState({ value: [20] });\n  const state10 = useSliderState({ value: [20, 50] });\n\n\n  return (\n    <>\n      <Headline>Slider</Headline>\n      <Slider view=\"default\" {...state1} />\n      <Slider view=\"default\" {...state2} />\n      <Slider filled view=\"default\" {...state3} />\n      <Slider filled view=\"default\" {...state4} />\n      <Slider reverse filled view=\"default\" {...state5} />\n      <Slider reverse filled view=\"default\" {...state6} />\n      <Slider filled step={25} view=\"default\" {...state7} />\n      <Slider filled step={25} view=\"default\" {...state8} />\n      <Slider filled step={20} showTicks showTickValues view=\"default\" {...state9} />\n      <Slider filled showTicks showTickValues step={20} view=\"default\" {...state10} />\n    </>\n  );\n}\n","import React, { FC, useState, useEffect } from 'react'\nimport { useStore } from 'effector-react'\nimport deepmerge from 'deepmerge'\nimport YAML from 'yaml'\nimport { cnTheme } from '@yandex/ui/Theme'\n\nimport { TabsMenu } from '@yandex/ui/TabsMenu/TabsMenu.bundle/desktop'\nimport { Tumbler } from '@yandex/ui/Tumbler/Tumbler.bundle/desktop'\n\nimport { toDeepToken } from '../../../utils/toDeepToken'\nimport { Showcase } from '../../Showcase/Showcase'\nimport { metricaGoal } from '../../YaMetrika/YaMetrika'\n\nimport { $cssVariables, $designTokens } from '../../../model/tokens'\n\nexport const SandboxExample: FC<any> = ({ includes, theme }) => {\n  const [activeTab, setActiveTab] = useState('jsx')\n\n  const cssVariables: Record<string, any> = useStore($cssVariables)\n  const designTokens = useStore($designTokens)\n\n  const [yml, setYml] = useState('')\n  const [css, setCss] = useState('')\n  const [shownDiff, setDiff] = useState(true)\n\n  useEffect(() => {\n    if (activeTab === 'yml') {\n      createYaml()\n    }\n\n    if (activeTab === 'css') {\n      createCSS()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeTab, designTokens])\n\n  const createCSS = () => {\n    const a = Object.keys(cssVariables).reduce((acc: string, v: string) => {\n      if (designTokens[v.replace('--', '')].changed) {\n        acc += `  ${v}: ${cssVariables[v]};\\n`\n      }\n      return acc\n    }, '')\n    const r = `:root {\\n${a}}`\n\n    setCss(r)\n  }\n\n  const createYaml = () => {\n    const yml = Object.entries(designTokens).reduce((acc, value: any) => {\n      if (value[1].changed) {\n        acc.push(toDeepToken(value[1].path, { value: value[1].value }))\n      }\n      return acc\n    }, [] as any)\n\n    const c = deepmerge.all(yml)\n    const text = YAML.stringify(c)\n\n    setYml(text)\n  }\n\n  return (\n    <div className=\"Sandbox-Examples\">\n      <div>\n        <div className=\"Sandbox-Showcase\">\n          <div className=\"Sandbox-Content\">\n            <div className=\"Sandbox-Tabs\">\n              <TabsMenu\n                size=\"m\"\n                view=\"default\"\n                layout=\"horiz\"\n                activeTab={activeTab}\n                tabs={[\n                  {\n                    id: 'jsx',\n                    onClick: () => {\n                      setActiveTab('jsx')\n                      metricaGoal('jsx')\n                    },\n                    content: 'JSX',\n                  },\n                  {\n                    id: 'yml',\n                    onClick: () => {\n                      setActiveTab('yml')\n                      metricaGoal('yml')\n                    },\n                    content: 'YML',\n                  },\n                  {\n                    id: 'css',\n                    onClick: () => {\n                      setActiveTab('css')\n                      metricaGoal('css')\n                    },\n                    content: 'CSS',\n                  },\n                ]}\n              />\n              <div className=\"Tumbler-Wrapper\">\n                <Tumbler\n                  size=\"m\"\n                  view=\"default\"\n                  checked={shownDiff}\n                  onChange={() => {\n                    setDiff(!shownDiff)\n                    metricaGoal('show-hide-changes')\n                  }}\n                  labelAfter={'Показать изменения'}\n                />\n              </div>\n            </div>\n            <div\n              className={cnTheme(theme, ['Sandbox-ContentWrapper'])}\n              style={shownDiff ? cssVariables : {}}\n            >\n              {activeTab === 'jsx' && <Showcase includes={includes} />}\n              {activeTab === 'yml' && (\n                <div className=\"Sandbox-ContentWrapper-YML\">\n                  <pre>\n                    <code>{yml}</code>\n                  </pre>\n                </div>\n              )}\n              {activeTab === 'css' && (\n                <div className=\"Sandbox-ContentWrapper-YML\">\n                  <pre>\n                    <code>{css}</code>\n                  </pre>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export function toDeepToken(path: string[], prop: any): any {\n  const chunks = [...path].reverse()\n  let result: any = prop\n  for (let i = 0; i < chunks.length; i++) {\n    result = { [chunks[i]]: result }\n  }\n  return result\n}\n","import { MappingsType } from '../types'\n\nexport const themeboxConfig = {\n  output: {\n    css: {\n      transforms: ['name/cti/kebab', 'json/extended/mapper'],\n      buildPath: './themes',\n      files: [\n        {\n          destination: 'tokens.json',\n          format: 'json/extended',\n        },\n      ],\n    },\n  },\n}\n\nexport const downloadTheme = async (content: any, mappings: MappingsType) => {\n  const body = JSON.stringify({\n    config: themeboxConfig,\n    tokens: {\n      language: 'yaml',\n      content: content,\n    },\n    mappings,\n  })\n\n  const response = await fetch('https://themebox.now.sh', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body,\n  })\n\n  const json = await response.json()\n\n  if (!response.ok) {\n    throw new Error(json.error)\n  }\n\n  const res = JSON.parse(json.data[0].content)\n  const tokens = Object.entries(res).map(([_, item]: any) => ({\n    path: item.path,\n    name: item.name,\n    value: item.value,\n    changed: true,\n  }))\n\n  return tokens\n}\n","import { attach, createEffect, createEvent, forward } from 'effector'\nimport { toast } from 'react-toastify'\n\nimport { $theme } from '../../../model/themes'\nimport { variablesChangedBatchEvent } from '../../../model/tokens'\nimport { downloadTheme } from '../../../api/downloadTheme'\nimport { ThemeType } from '../../../types'\n\ntype UploadRawTokensFxPropsType = {\n  content: string\n  theme: ThemeType\n}\n\nexport const uploadRawTokensEvent = createEvent<string>()\n\nexport const uploadRawTokensFx = attach({\n  source: $theme,\n  mapParams: (content, theme) =>\n    ({\n      content,\n      theme,\n    } as UploadRawTokensFxPropsType),\n  effect: createEffect(({ content, theme }: UploadRawTokensFxPropsType) => {\n    return downloadTheme(content, theme.mappings)\n  }),\n})\n\nexport const $uploadRawTokensLoading = uploadRawTokensFx.pending\n\nuploadRawTokensFx.doneData.watch((tokens) => {\n  variablesChangedBatchEvent(tokens)\n  toast.success('Токены успешно загружены')\n})\n\nuploadRawTokensFx.failData.watch((error) => toast.error(error.message, { autoClose: 5000 }))\n\nforward({\n  from: uploadRawTokensEvent,\n  to: uploadRawTokensFx,\n})\n","import React, { useState, FC } from 'react'\nimport { useStore } from 'effector-react'\n\nimport { TextareaWithAutoResize } from '@yandex/ui/Textarea/desktop/bundle'\nimport { Button } from '@yandex/ui/Button/Button.bundle/desktop'\nimport { Spacer } from '@yandex/ui/Spacer/desktop'\n\nimport { uploadRawTokensEvent, $uploadRawTokensLoading } from './model'\n\nconst tokensDefault = `button:\n  viewAction:\n    fillColor:\n      base:\n        value: \"#C728B3\"\n      progress:\n        base:\n          value: \"#C728B3\"\n        process:\n          value: \"#de1258\"\n  viewDefault:\n    fillColor:\n      base:\n        value: \"#ecb6ea\"\n`\n\nexport const CustomThemeDownloader: FC = () => {\n  const progress = useStore($uploadRawTokensLoading)\n  const [value, setValue] = useState(tokensDefault)\n\n  const handleClick = () => uploadRawTokensEvent(value)\n\n  return (\n    <form\n      style={{\n        margin: '0 14px 0 0',\n      }}\n    >\n      Токены:\n      <Spacer all={10} />\n      <TextareaWithAutoResize\n        view=\"default\"\n        size=\"m\"\n        value={value}\n        onChange={(event) => setValue(event.target.value)}\n      />\n      <Spacer all={10} />\n      <Button view=\"action\" size=\"m\" progress={progress} onClick={handleClick}>\n        Загрузить\n      </Button>\n    </form>\n  )\n}\n","import React, { useState } from 'react'\nimport { Select } from '@yandex/ui/Select/Select.bundle/desktop'\nimport { Textinput } from '@yandex/ui/Textinput/Textinput.bundle/desktop'\nimport { TabsMenu } from '@yandex/ui/TabsMenu/TabsMenu.bundle/desktop'\nimport { TabsPanes } from '@yandex/ui/TabsPanes/TabsPanes.bundle/desktop'\nimport { useStore } from 'effector-react'\n\nimport { TextinputField } from '../TextinputField/TextinputField'\nimport { metricaGoal } from '../YaMetrika/YaMetrika'\n\nimport { SandboxExample } from './SandboxExample/SandboxExample'\nimport { CustomThemeDownloader } from './CustomThemeDownloader/CustomThemeDownloader'\nimport { $designTokens } from '../../model/tokens'\nimport { $theme } from '../../model/themes'\n\nimport './Sandbox.css'\n\ntype SandboxProps = {}\n\nexport const Sandbox: React.FC<SandboxProps> = (props) => {\n  const {\n    preset,\n    tokens: { globals, components },\n  } = useStore($theme)\n  const designTokens = useStore($designTokens)\n  const tabs = ['globals', ...Object.keys(components)]\n  const [activeTab, setActiveTab] = useState('globals')\n  const [activeTab1, setActiveTab1] = useState('tokens')\n  const values = activeTab === 'globals' ? globals : components[activeTab]\n  const [filter, setFilter] = useState('')\n\n  const tokensTab = (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-beetwen',\n          marginRight: 20,\n          marginBottom: 20,\n        }}\n      >\n        <Select\n          style={{ width: 150, marginRight: 20 }}\n          size=\"m\"\n          view=\"default\"\n          onChange={(event) => {\n            setActiveTab(event.target.value)\n            metricaGoal('select')\n          }}\n          value={activeTab}\n          options={tabs.map((tab) => ({ value: tab, content: tab }))}\n        />\n        <Textinput\n          debounceTimeout={500}\n          hasClear\n          onChange={(event) => {\n            setFilter(event.target.value)\n            metricaGoal('search')\n          }}\n          view=\"default\"\n          size=\"m\"\n          placeholder=\"Поиск по токенам\"\n          value={filter}\n        />\n      </div>\n      {Object.entries(values)\n        .filter(([groupName]) => groupName.includes(filter))\n        .map(([groupName, groupTokens]: any, index) => (\n          <TextinputField\n            key={index}\n            label={groupName}\n            value={groupTokens.value}\n            customTokens={(designTokens[groupName] || {}).value}\n            path={groupTokens.path}\n            description={groupTokens.description}\n          />\n        ))}\n    </>\n  )\n\n  return (\n    <div className=\"Sandbox\">\n      <SandboxExample\n        theme={preset}\n        includes={activeTab === 'globals' ? Object.keys(components) : [activeTab]}\n      />\n      <div className=\"Sandbox-Tokens\">\n        <div className=\"Sandbox-Tokens-Tabs\">\n          <TabsMenu\n            view=\"default\"\n            layout=\"horiz\"\n            size=\"m\"\n            activeTab={activeTab1}\n            tabs={[\n              { id: 'custom', onClick: () => setActiveTab1('custom'), content: 'Загрузить тему' },\n              { id: 'tokens', onClick: () => setActiveTab1('tokens'), content: 'Токены' },\n            ]}\n          />\n        </div>\n        <TabsPanes\n          activePane={activeTab1}\n          panes={[\n            { id: 'custom', content: <CustomThemeDownloader /> },\n            { id: 'tokens', content: tokensTab },\n          ]}\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useGate } from 'effector-react'\nimport { configureRootTheme } from '@yandex/ui/Theme'\nimport { theme } from '@yandex/ui/Theme/presets/default'\n\nimport { ToastContainer, Slide } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.min.css'\n\nimport { Header } from './components/Header'\nimport { Sandbox } from './components/Sandbox/Sandbox'\n\nimport { variablesInitializationGate } from './model/tokens'\n\nimport './App.css'\n\nconfigureRootTheme({ theme })\n\nexport default () => {\n  useGate(variablesInitializationGate)\n\n  return (\n    <div className=\"Site\">\n      <Header />\n      <div className=\"Content\">\n        <Sandbox />\n      </div>\n      <ToastContainer transition={Slide} autoClose={2000} position=\"bottom-right\" />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}