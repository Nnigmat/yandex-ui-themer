{"version":3,"sources":["components/Sandbox/Sandbox.model.ts","components/IconBack/IconBack.tsx","components/YaMetrika/YaMetrika.ts","components/TextinputField/TextinputField.tsx","utils/isColor.ts","components/Headline/Headline.tsx","components/Showcase/Showcase.tsx","components/Sandbox/SandboxExample/SandboxExample.tsx","utils/toDeepToken.ts","components/Sandbox/CustomThemeDownloader/CustomThemeDownloader.tsx","components/Sandbox/Sandbox.tsx","App.tsx","index.tsx"],"names":["variablesChanged","createEvent","variablesChangedBatch","$cssVariables","createStore","$designTokens","on","state","name","data","tokens","ret","forEach","v","value","watch","r","console","log","IconBack","onClick","className","style","height","width","display","justifyContent","alignItems","cursor","viewBox","d","fill","metricaGoal","goal","window","ym","TextinputField","label","path","description","customTokens","useState","val","setVal","visible","setVisible","scopeRef","useRef","anchorRef","isColorValue","Boolean","String","match","isColor","isChanged","useEffect","handleClick","useCallback","handleClose","onClearClick","changed","onColorChange","color","colorValue","source","rgb","g","b","a","hsl","h","s","l","hex","onChange","event","target","ListTile","leftSpace","rightSpace","leading","typography","Badge","fontSize","content","textColor","debounceTimeout","iconRight","view","size","marginBottom","hint","position","ref","boxSizing","background","marginLeft","borderRadius","border","directions","anchor","scope","onClose","onChangeComplete","Headline","children","IconTwo","xmlns","componentsMap","button","map","disabled","checked","progress","iconLeft","type","direction","icon","whiteSpace","attach","badge","outlineColor","checkbox","indeterminate","divider","Divider","margin","link","href","pseudo","menu","items","setValue","theme","messageBox","backgroundColor","padding","actions","Progress","timing","maxValue","radiobox","options","radioButton","spin","tabsMenu","layout","tabs","id","activeTab","text","as","textarea","value1","setValue1","hasClear","textinput","value2","setValue2","value3","setValue3","value4","setValue4","tooltip","visible1","setVisible1","visible2","setVisible2","visible3","setVisible3","visible4","setVisible4","visible5","setVisible5","visible6","setVisible6","anchorRef1","anchorRef2","anchorRef3","anchorRef4","anchorRef5","anchorRef6","marginRight","innerRef","hasTail","tumbler","checked1","setChecked1","checked2","setChecked2","labelBefore","labelAfter","aria-label","userPic","plus","avatarId","hasCamera","lodpiUrl","slider","state1","useSliderState","state2","state3","state4","state5","state6","state7","state8","state9","state10","filled","reverse","step","showTicks","showTickValues","Showcase","includes","filter","componentName","createElement","SandboxExample","setActiveTab","cssVariables","useStore","designTokens","yml","setYml","shownDiff","setDiff","createYaml","Object","entries","reduce","acc","push","prop","chunks","result","i","length","toDeepToken","c","deepmerge","all","YAML","stringify","cnTheme","CustomThemeDownloader","error","setError","setProgress","Spacer","undefined","body","JSON","config","output","css","transforms","buildPath","files","destination","format","language","fetch","method","headers","then","response","json","res","parse","item","Sandbox","components","globals","keys","activeTab1","setActiveTab1","values","setFilter","tokensTab","tab","placeholder","index","groupName","groupTokens","key","activePane","panes","configureRootTheme","themes","default","stylesDataDefault","preset","themeDefault","inverse","stylesDataInverse","themeInverse","brand","stylesDataBrand","themeBrand","turbo","stylesDataTurbo","themeTurbo","themesNames","chooseTheme","menuItems","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb98ccb2.chunk.js","sourcesContent":["import { createStore, createEvent } from 'effector';\n\nexport const variablesChanged = createEvent<{\n  name: string;\n  path: string[];\n  value: string;\n  changed: boolean;\n}>();\n\nexport const variablesChangedBatch = createEvent<{\n  name: string;\n  path: string[];\n  value: string;\n  changed: boolean;\n}[]>();\n\nexport const $cssVariables = createStore({})\nexport const $designTokens = createStore<any>({})\n\n// TODO: Удалять значение из стора если change=false.\n$designTokens\n  .on(variablesChanged, (state, { name, ...data }) => ({ ...state, [name]: data }))\n  .on(variablesChangedBatch, (state, tokens) => {\n    const ret: Record<string, any> = {};\n    tokens.forEach(v => ret[v.name] = v);\n    return { ...state, ...ret }\n  });\n\n// TODO: Удалять значение из стора если change=false.\n$cssVariables\n  .on(variablesChanged, (state, { name, value }) => ({ ...state, [`--${name}`]: value }))\n  .on(variablesChangedBatch, (state, tokens) => {\n    const ret: Record<string, any> = {};\n    tokens.forEach(v => ret[`--${v.name}`] = v.value);\n    return { ...state, ...ret }\n  });\n\n$designTokens.watch(r => console.log(r));\n","import React, { FC, MouseEventHandler } from 'react'\n\nexport const IconBack: FC<{ onClick: MouseEventHandler<HTMLSpanElement>; className?: string }> = ({\n  onClick,\n  className,\n}) => (\n  <span\n    onClick={onClick}\n    className={className}\n    style={{\n      height: 32,\n      width: 32,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      cursor: 'pointer',\n    }}\n  >\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\">\n      <path\n        d=\"M3.713 9a.75.75 0 0 1-.697-1.026l1.862-4.705a.75.75 0 0 1 1.318-.145l.9 1.328a9 9 0 1 1-3.939 9.234 1 1 0 0 1 1.966-.373 7 7 0 1 0 3.096-7.205l1.167 1.721A.75.75 0 0 1 8.766 9H3.712z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  </span>\n)\n","export const COUNTER_ID = '69595123';\n\nexport const metricaGoal = (goal: string) => {\n    // @ts-ignore\n    window.ym(COUNTER_ID, 'reachGoal', goal);\n};\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport { ChromePicker } from 'react-color'\nimport { Textinput } from '@yandex/ui/Textinput/desktop/bundle'\nimport { ListTile } from '@yandex/ui/ListTile/desktop'\nimport { Text } from '@yandex/ui/Text/bundle'\nimport { Badge } from '@yandex/ui/Badge/desktop'\nimport { Popup } from '@yandex/ui/Popup/desktop/bundle'\n\nimport { isColor } from '../../utils/isColor'\nimport { variablesChanged } from '../Sandbox/Sandbox.model'\nimport { IconBack } from '../IconBack/IconBack'\n\nimport { metricaGoal } from '../YaMetrika/YaMetrika'\n\nexport const TextinputField: React.FC<{\n  label: string\n  value: string\n  path: string[]\n  description: string\n  customTokens: string\n}> = ({ label, value, path, description, customTokens }) => {\n  const [val, setVal] = useState(customTokens)\n\n  const [visible, setVisible] = useState(false)\n  const scopeRef = useRef<HTMLDivElement>(null)\n  const anchorRef = useRef<HTMLDivElement>(null)\n\n  const isColorValue = isColor(value)\n  const isChanged = value !== val\n\n  // Update internal value when showcase is changed.\n  useEffect(() => {\n    setVal(customTokens || value)\n  }, [value, customTokens])\n\n  const handleClick = useCallback(() => {\n    setVisible(!visible)\n  }, [visible])\n\n  const handleClose = useCallback(() => {\n    setVisible(false)\n  }, [])\n\n  const onClearClick = useCallback(() => {\n    setVal(value)\n    variablesChanged({\n      path,\n      name: label,\n      value: value,\n      changed: false,\n    })\n  }, [value])\n\n  const onColorChange = useCallback(\n    (color) => {\n      let colorValue = ''\n\n      // TODO: Move to util.\n      if (color.source === 'rgb') {\n        colorValue = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`\n      } else if (color.source === 'hsl') {\n        colorValue = `hsla(${color.hsl.h}, ${color.hsl.s}, ${color.hsl.l}, ${color.hsl.a})`\n      } else {\n        colorValue = color.hex\n      }\n\n      setVal(colorValue)\n      variablesChanged({\n        path,\n        name: label,\n        value: colorValue,\n        changed: colorValue !== value,\n      })\n    },\n    [path, value, label],\n  )\n\n  const onChange = useCallback(\n    (event) => {\n      setVal(event.target.value)\n      variablesChanged({\n        path,\n        name: label,\n        value: event.target.value,\n        changed: event.target.value !== value,\n      })\n    },\n    [path, value, label],\n  )\n\n  return (\n    <ListTile\n      leftSpace=\"m\"\n      rightSpace=\"m\"\n      alignItems=\"center\"\n      leading={\n        <div style={{ width: 300, display: 'inline-block' }}>\n          <Text typography=\"control-m\" color=\"secondary\">\n            {label}:{' '}\n          </Text>\n          {description && (\n            <div className=\"Description-Wrapper\">\n              <Badge\n                style={{ fontSize: '11px' }}\n                className=\"Description-Trigger\"\n                content=\"?\"\n                textColor=\"#fff\"\n                color=\"#535353\"\n              />\n              <span className=\"Description-Popover\" style={{ fontSize: 14 }}>\n                {description}\n              </span>\n            </div>\n          )}\n        </div>\n      }\n    >\n      <div style={{ display: 'flex' }}>\n        <Textinput\n          debounceTimeout={500}\n          onChange={(event) => {\n            onChange(event)\n            metricaGoal('change-tokens')\n          }}\n          // @ts-ignore\n          iconRight={isChanged && <IconBack onClick={() => {\n            onClearClick()\n            metricaGoal('clear-textinput')\n          }} />}\n          view=\"default\"\n          size=\"s\"\n          style={{ width: 200, marginBottom: 8 }}\n          value={val}\n          // @ts-ignore\n          hint={isChanged && `Оригинальное значение - ${value}`}\n        />\n        {isColorValue && (\n          <div style={{ position: 'relative' }} ref={scopeRef}>\n            <div\n              ref={anchorRef}\n              onClick={() => {\n                handleClick();\n                metricaGoal('picker');\n              }}\n              style={{\n                boxSizing: 'border-box',\n                background: val,\n                width: 32,\n                height: 32,\n                marginLeft: 8,\n                borderRadius: '50%',\n                border: '1px solid #d9d9d9',\n              }}\n            />\n            <Popup\n              directions={['bottom-right']}\n              target=\"anchor\"\n              anchor={anchorRef}\n              view=\"default\"\n              visible={visible}\n              scope={scopeRef}\n              onClose={handleClose}\n            >\n              <ChromePicker color={val} onChangeComplete={(event) => {\n                onColorChange(event)\n                metricaGoal('change-tokens')\n              }} />\n            </Popup>\n          </div>\n        )}\n      </div>\n    </ListTile>\n  )\n}\n","export function isColor(value: string): boolean {\n  return Boolean(String(value).match(/^(#|hsla?|rgba?)/))\n}\n","import React from 'react'\nimport { Text } from '@yandex/ui/Text/bundle'\n\nexport const Headline: React.FC = ({ children }) => (\n  <Text typography=\"display-s\" color=\"primary\">\n    {children}\n  </Text>\n)\n","import React, { useState, useRef, createElement, ComponentType } from 'react'\nimport { Button } from '@yandex/ui/Button/Button.bundle/desktop'\nimport { Attach } from '@yandex/ui/Attach/Attach.bundle/desktop'\nimport { Icon } from '@yandex/ui/Icon/Icon.bundle/desktop'\nimport { Badge } from '@yandex/ui/Badge/'\nimport { Checkbox } from '@yandex/ui/Checkbox/Checkbox.bundle/desktop'\nimport { Divider } from '@yandex/ui/Divider'\nimport { Link } from '@yandex/ui/Link/Link.bundle/desktop'\nimport { Menu } from '@yandex/ui/Menu/Menu.bundle/desktop'\nimport { MessageBox } from '@yandex/ui/MessageBox/MessageBox.bundle/desktop'\nimport { Progress } from '@yandex/ui/Progress'\nimport { Radiobox } from '@yandex/ui/Radiobox/Radiobox.bundle/desktop'\nimport { RadioButton } from '@yandex/ui/RadioButton/RadioButton.bundle/desktop'\nimport { Spin } from '@yandex/ui/Spin/Spin.bundle/desktop'\nimport { TabsMenu } from '@yandex/ui/TabsMenu/TabsMenu.bundle/desktop'\nimport { Text } from '@yandex/ui/Text/Text.bundle/desktop'\nimport { Textarea } from '@yandex/ui/Textarea/Textarea.bundle/desktop'\nimport { Textinput } from '@yandex/ui/Textinput/Textinput.bundle/desktop'\nimport { Tooltip } from '@yandex/ui/Tooltip/Tooltip.bundle/desktop'\nimport { Tumbler } from '@yandex/ui/Tumbler/Tumbler.bundle/desktop'\nimport { UserPic } from '@yandex/ui/UserPic/UserPic.bundle/desktop'\nimport { Slider, useSliderState } from '@yandex/ui/Slider/desktop/bundle';\n\nimport { Headline } from '../Headline/Headline'\nimport './Showcase.css'\n\nconst ButtonShowcase = () => {\n  const view = ['default', 'action', 'pseudo', 'link', 'clear', 'raised']\n\n  return (\n    <>\n      <Headline>Button</Headline>\n      {view.map((view: any) => {\n        return (\n          <>\n            <p>View {view}</p>\n            <div className=\"Showcase-Item\">\n              <Button view={view} size=\"l\">\n                Button\n              </Button>\n              <Button view={view} size=\"m\">\n                Button\n              </Button>\n              <Button view={view} size=\"s\">\n                Button\n              </Button>\n              <Button view={view} size=\"s\" disabled>\n                Button\n              </Button>\n              <Button view={view} size=\"s\" checked>\n                Button\n              </Button>\n              <Button view={view} size=\"s\" progress>\n                Button\n              </Button>\n              <Button\n                view={view}\n                size=\"s\"\n                iconLeft={(className: string) => (\n                  <Icon size=\"s\" type=\"arrow\" direction=\"left\" className={className} />\n                )}\n                iconRight={(className: string) => (\n                  <Icon size=\"s\" type=\"arrow\" direction=\"left\" className={className} />\n                )}\n              >\n                Button\n              </Button>\n              <Button\n                view={view}\n                size=\"s\"\n                icon={(className: string) => (\n                  <Icon size=\"s\" type=\"arrow\" direction=\"left\" className={className} />\n                )}\n              />\n            </div>\n          </>\n        )\n      })}\n      <div className=\"Showcase-Item\" style={{ whiteSpace: 'normal' }}>\n        <Button view=\"default\" size=\"m\">\n          Button\n        </Button>\n        <Text>Любя, съешь щипцы, — вздохнёт мэр, — кайф жгуч.</Text>\n        <Text>\n          Шеф взъярён тчк щипцы с эхом гудбай Жюль. Эй, жлоб! Где туз? Прячь юных съёмщиц в шкаф.\n          Экс-граф? Плюш изъят. Бьём чуждый цен хвощ!\n        </Text>\n        <Button view=\"action\" size=\"m\">\n          Button\n        </Button>\n      </div>\n    </>\n  )\n}\n\nconst AttachShowcase = () => {\n  return (\n    <>\n      <Headline>Attach</Headline>\n      <div className=\"Showcase-Item\">\n        <Attach size=\"l\" view=\"default\">\n          Select file\n        </Attach>\n        <Attach size=\"m\" view=\"default\">\n          Select file\n        </Attach>\n        <Attach size=\"s\" view=\"default\">\n          Select file\n        </Attach>\n      </div>\n    </>\n  )\n}\n\nconst IconTwo = () => (\n  <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\">\n    <path d=\"M4.5 18a.5.5 0 1 1 0-1 .5.5 0 0 1 0 1zm0-3a2.5 2.5 0 0 0 0 5 2.5 2.5 0 0 0 0-5zm11 3a.5.5 0 1 1 0-1 .5.5 0 0 1 0 1zm0-3a2.5 2.5 0 0 0 0 5 2.5 2.5 0 0 0 0-5zM19 4H5.78L4.97.758A.998.998 0 0 0 4 0H1a1 1 0 0 0 0 2h2.22l.805 3.222.01.042 1.995 7.98a1 1 0 0 0 1.135.743l11.017-1.837c1.02-.17 1.818-1.11 1.818-2.14V5a1 1 0 0 0-1-1zm-1 6.01c0 .05-.085.157-.146.167L7.746 11.862 6.28 6H18v4.01z\" />\n  </svg>\n)\n\nconst BadgeShowcase = () => {\n  return (\n    <>\n      <Headline>Badge</Headline>\n      <div\n        className=\"Showcase-Item\"\n        style={{ display: 'flex', justifyContent: 'space-between', width: 300 }}\n      >\n        <Badge />\n\n        <Badge content=\"?\" />\n\n        <Badge content={5}>\n          <IconTwo />\n        </Badge>\n\n        <Button view=\"default\" size=\"m\">\n          Закладка\n          <Badge color=\"#0679ff\" outlineColor=\"#0679ff\" content={5} style={{ marginLeft: 5 }} />\n        </Button>\n      </div>\n    </>\n  )\n}\n\nconst CheckboxShowcase = () => {\n  return (\n    <>\n      <Headline>Checkbox</Headline>\n      <div className=\"Showcase-Item\">\n        <Checkbox size=\"m\" view=\"default\" label=\"Label\" checked />\n        <Checkbox size=\"m\" view=\"default\" label=\"Label\" />\n        <Checkbox size=\"m\" view=\"default\" label=\"Label\" disabled />\n        <Checkbox size=\"m\" view=\"default\" label=\"Label\" indeterminate />\n        <br />\n        <br />\n        <Checkbox size=\"s\" view=\"default\" label=\"Label\" checked />\n        <Checkbox size=\"s\" view=\"default\" label=\"Label\" />\n        <Checkbox size=\"s\" view=\"default\" label=\"Label\" disabled />\n        <Checkbox size=\"s\" view=\"default\" label=\"Label\" indeterminate />\n        <br />\n        <br />\n        <Checkbox size=\"s\" view=\"outline\" label=\"Label\" checked />\n        <Checkbox size=\"s\" view=\"outline\" label=\"Label\" />\n        <Checkbox size=\"s\" view=\"outline\" label=\"Label\" disabled />\n        <Checkbox size=\"s\" view=\"outline\" label=\"Label\" indeterminate />\n        <br />\n        <br />\n        <Checkbox size=\"m\" view=\"outline\" label=\"Label\" checked />\n        <Checkbox size=\"m\" view=\"outline\" label=\"Label\" />\n        <Checkbox size=\"m\" view=\"outline\" label=\"Label\" disabled />\n        <Checkbox size=\"m\" view=\"outline\" label=\"Label\" indeterminate />\n      </div>\n    </>\n  )\n}\n\nconst DividerShowcase = () => {\n  return (\n    <>\n      <Headline>Divider</Headline>\n      <div className=\"Showcase-Item\">\n        <p>Content</p>\n        <Divider style={{ margin: '8px 0' }}><p>Section</p></Divider>\n        <p>Content</p>\n      </div>\n    </>\n  )\n}\n\nconst LinkrShowcase = () => {\n  return (\n    <>\n      <Headline>Link</Headline>\n      <div className=\"Showcase-Item\">\n        <Link href=\"https://ya.ru\" view=\"default\">\n          Ссылка\n        </Link>\n        <br />\n        <Link view=\"default\" pseudo>\n          Ссылка\n        </Link>\n        <br />\n        <Link href=\"https://ya.ru\" view=\"default\" disabled>\n          Ссылка\n        </Link>\n      </div>\n    </>\n  )\n}\n\nconst MenuShowcase = () => {\n  const items = [\n    { value: 'a', content: 'Каждый' },\n    { value: 'b', content: 'Охотник' },\n    {\n      items: [\n        { value: 'c', content: 'Желает', disabled: true },\n        { value: 'd', content: 'Знать' },\n        { value: 'e', content: 'Где' },\n      ],\n    },\n  ]\n\n  const [value, setValue] = useState('a')\n\n  return (\n    <>\n      <Headline>Menu</Headline>\n      <div className=\"Showcase-Item\">\n        <Menu\n          size=\"m\"\n          theme=\"normal\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n        <Menu\n          size=\"s\"\n          theme=\"normal\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n      </div>\n      <div className=\"Showcase-Item\">\n        <Menu\n          size=\"m\"\n          view=\"default\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n        <Menu\n          size=\"s\"\n          view=\"default\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n      </div>\n    </>\n  )\n}\n\nconst MessageBoxrShowcase = () => {\n  return (\n    <>\n      <Headline>MessageBox</Headline>\n      <div className=\"Showcase-Item\">\n        <div style={{ backgroundColor: '#fff', padding: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"default\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"clear\" size=\"s\">\n                  Отклонить\n                </Button>\n                <Button view=\"action\" size=\"s\">\n                  Принять\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n        <div style={{ backgroundColor: '#000', padding: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"inverse\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"clear\" size=\"s\">\n                  Отклонить\n                </Button>\n                <Button view=\"action\" size=\"s\">\n                  Принять\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n        <div style={{ backgroundColor: '#fff', padding: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"promo\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"action\" size=\"s\">\n                  Подробнее\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n      </div>\n    </>\n  )\n}\n\nconst ProgresShowcase = () => {\n  return (\n    <>\n      <Headline>Progres</Headline>\n      <div className=\"Showcase-Item\">\n        <Progress timing=\"linear\" value={50} maxValue={100} />\n      </div>\n    </>\n  )\n}\n\nconst RadioButtonShowcase = () => {\n  const options = [\n    { value: 'a', children: 'Option A' },\n    { value: 'b', children: 'Option B' },\n    { value: 'c', children: 'Option C' },\n  ]\n\n  return (\n    <>\n      <Headline>RadioButton</Headline>\n      <div className=\"Showcase-Item\">\n        <RadioButton size=\"l\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <br />\n        <RadioButton size=\"m\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <br />\n        <RadioButton size=\"s\" view=\"default\" value=\"a\" options={options} />\n      </div>\n    </>\n  )\n}\n\nconst RadioboxShowcase = () => {\n  const options = [\n    { label: 'Option A', value: 'a' },\n    { label: 'Option B', value: 'b' },\n    { label: 'Option C (disabled)', value: 'c', disabled: true },\n  ]\n\n  return (\n    <>\n      <Headline>Radiobox</Headline>\n      <div className=\"Showcase-Item\">\n        <Radiobox size=\"m\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <Radiobox size=\"s\" view=\"default\" value=\"a\" options={options} />\n      </div>\n      <div className=\"Showcase-Item\">\n        <Radiobox size=\"m\" view=\"outline\" value=\"a\" options={options} />\n        <br />\n        <Radiobox size=\"s\" view=\"outline\" value=\"a\" options={options} />\n      </div>\n    </>\n  )\n}\n\nconst SpinShowcase = () => {\n  return (\n    <>\n      <Headline>Spin</Headline>\n      <div className=\"Showcase-Item\">\n        <Spin progress view=\"default\" size=\"l\" />\n        <Spin progress view=\"default\" size=\"m\" />\n        <Spin progress view=\"default\" size=\"s\" />\n        <Spin progress view=\"default\" size=\"xs\" />\n        <Spin progress view=\"default\" size=\"xxs\" />\n      </div>\n    </>\n  )\n}\n\nconst TabsMenuShowcase = () => {\n  return (\n    <>\n      <Headline>TabsMenu</Headline>\n      <div className=\"Showcase-Item\">\n        <TabsMenu\n          size=\"m\"\n          view=\"default\"\n          layout=\"horiz\"\n          tabs={[\n            { id: 'search', content: 'Поиск' },\n            { id: 'images', content: 'Картинки' },\n            { id: 'video', content: 'Видео' },\n          ]}\n          activeTab={'search'}\n        />\n\n        <br />\n        <TabsMenu\n          size=\"s\"\n          view=\"default\"\n          layout=\"horiz\"\n          tabs={[\n            { id: 'search', content: 'Поиск' },\n            { id: 'images', content: 'Картинки' },\n            { id: 'video', content: 'Видео' },\n          ]}\n          activeTab={'search'}\n        />\n      </div>\n    </>\n  )\n}\n\nconst TextShowcase = () => {\n  return (\n    <>\n      <Headline>Text</Headline>\n      <div className=\"Showcase-Item\">\n        <Text as=\"div\">\n          Миссия Яндекса — помогать людям решать задачи и достигать своих целей в жизни.\n        </Text>\n      </div>\n    </>\n  )\n}\n\nconst TextareaShowcase = () => {\n  const [value1, setValue1] = useState('')\n\n  return (\n    <>\n      <Headline>Textarea</Headline>\n      <div className=\"Showcase-Item\">\n        <Textarea\n          hasClear\n          size=\"m\"\n          view=\"default\"\n          value={value1}\n          onChange={(event) => setValue1(event.target.value)}\n          onClearClick={() => setValue1('')}\n        />\n        <br />\n        <br />\n        <Textarea\n          hasClear\n          size=\"s\"\n          view=\"default\"\n          value={value1}\n          onChange={(event) => setValue1(event.target.value)}\n          onClearClick={() => setValue1('')}\n        />\n      </div>\n    </>\n  )\n}\n\nconst TextinputShowcase = () => {\n  const [value1, setValue1] = useState('')\n  const [value2, setValue2] = useState('')\n  const [value3, setValue3] = useState('')\n  const [value4, setValue4] = useState('')\n\n  return (\n    <>\n      <Headline>Textinput</Headline>\n      <div className=\"Showcase-Item\">\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"m\"\n            view=\"default\"\n            value={value1}\n            onChange={(event) => setValue1(event.target.value)}\n            onClearClick={() => setValue1('')}\n          />\n        </div>\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"s\"\n            view=\"default\"\n            value={value2}\n            onChange={(event) => setValue2(event.target.value)}\n            onClearClick={() => setValue2('')}\n          />\n        </div>\n      </div>\n      <div className=\"Showcase-Item\">\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"s\"\n            label=\"Label\"\n            view=\"material\"\n            value={value3}\n            onChange={(event) => setValue3(event.target.value)}\n            onClearClick={() => setValue2('')}\n          />\n        </div>\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            label=\"Label\"\n            size=\"m\"\n            view=\"material\"\n            value={value4}\n            onChange={(event) => setValue4(event.target.value)}\n            onClearClick={() => setValue2('')}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nconst TooltipShowcase = () => {\n  const [visible1, setVisible1] = useState(true)\n  const [visible2, setVisible2] = useState(true)\n  const [visible3, setVisible3] = useState(true)\n  const [visible4, setVisible4] = useState(true)\n  const [visible5, setVisible5] = useState(true)\n  const [visible6, setVisible6] = useState(true)\n  const anchorRef1 = useRef<HTMLDivElement>(null)\n  const anchorRef2 = useRef<HTMLDivElement>(null)\n  const anchorRef3 = useRef<HTMLDivElement>(null)\n  const anchorRef4 = useRef<HTMLDivElement>(null)\n  const anchorRef5 = useRef<HTMLDivElement>(null)\n  const anchorRef6 = useRef<HTMLDivElement>(null)\n  const scopeRef = useRef<HTMLDivElement>(null)\n\n  return (\n    <>\n      <Headline>Tooltip</Headline>\n      <div className=\"Showcase-Item\">\n        <div style={{ position: 'relative', display: 'flex', height: 96 }} ref={scopeRef}>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef1}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible1(!visible1)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef2}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible2(!visible2)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef3}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible3(!visible3)}\n            >\n              Target\n            </Button>\n          </div>\n          <Tooltip\n            hasTail\n            direction=\"bottom-center\"\n            view=\"default\"\n            size=\"s\"\n            anchor={anchorRef1}\n            scope={scopeRef}\n            visible={visible1}\n          >\n            Size small\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom-center\"\n            view=\"default\"\n            size=\"m\"\n            anchor={anchorRef2}\n            scope={scopeRef}\n            visible={visible2}\n          >\n            Size medium\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom-center\"\n            view=\"default\"\n            size=\"l\"\n            anchor={anchorRef3}\n            scope={scopeRef}\n            visible={visible3}\n          >\n            Size large\n          </Tooltip>\n        </div>\n      </div>\n      <div className=\"Showcase-Item\">\n        <div style={{ position: 'relative', display: 'flex', height: 96 }} ref={scopeRef}>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef4}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible4(!visible4)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef5}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible5(!visible5)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef6}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible6(!visible6)}\n            >\n              Target\n            </Button>\n          </div>\n          <Tooltip\n            hasTail\n            direction=\"bottom-center\"\n            view=\"default\"\n            size=\"s\"\n            state=\"warning\"\n            anchor={anchorRef4}\n            scope={scopeRef}\n            visible={visible4}\n          >\n            Size small\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom-center\"\n            view=\"default\"\n            size=\"m\"\n            state=\"success\"\n            anchor={anchorRef5}\n            scope={scopeRef}\n            visible={visible5}\n          >\n            Size medium\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom-center\"\n            view=\"default\"\n            size=\"l\"\n            state=\"alert\"\n            anchor={anchorRef6}\n            scope={scopeRef}\n            visible={visible6}\n          >\n            Size large\n          </Tooltip>\n        </div>\n      </div>\n    </>\n  )\n}\n\nconst TumblerShowcase = () => {\n  const [checked1, setChecked1] = useState(true)\n  const [checked2, setChecked2] = useState(false)\n\n  return (\n    <>\n      <Headline>Tumbler</Headline>\n      <div className=\"Showcase-Item\">\n        <>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"m\"\n              view=\"default\"\n              checked={checked1}\n              onChange={() => setChecked1(!checked1)}\n              labelBefore=\"labelBefore\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"m\"\n              view=\"default\"\n              checked\n              disabled\n              onChange={() => {}}\n              labelAfter=\"disabled check\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"s\"\n              view=\"default\"\n              checked={checked2}\n              onChange={() => setChecked2(!checked2)}\n              labelAfter=\"labelAfter\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"l\"\n              view=\"default\"\n              checked={false}\n              disabled\n              onChange={() => {}}\n              labelBefore={\n                <svg\n                  aria-label=\"labelBefore\"\n                  width=\"16\"\n                  height=\"16\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M3.5 7.003a1.5 1.5 0 0 0-1.5 1.5v6a1.5 1.5 0 0 0 1.5 1.5h9a1.5 1.5 0 0 0 1.5-1.5v-6a1.5 1.5 0 0 0-1.5-1.5H12v-2a4 4 0 0 0-8 0v2h-.5zm2.5-2a2 2 0 1 1 4 0V7H6V5.003z\"\n                    fill=\"currentColor\"\n                  />\n                </svg>\n              }\n              labelAfter=\"disabled\"\n            />\n          </div>\n        </>\n      </div>\n    </>\n  )\n}\n\nconst UserPicShowcase = () => {\n  return (\n    <>\n      <Headline>UserPic</Headline>\n      <div className=\"Showcase-Item\">\n        <>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic plus avatarId=\"43978/351415393-30646433\" size=\"m\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic avatarId=\"0/0-0\" hasCamera size=\"m\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic plus avatarId=\"0/0-0\" hasCamera size=\"s\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic\n              lodpiUrl=\"https://jing.yandex-team.ru/files/kri0-gen/halp_orange.jpg\"\n              size=\"s\"\n            />\n          </div>\n        </>\n      </div>\n    </>\n  )\n}\n\nconst SliderShowcase = () => {\n  const state1 = useSliderState({ value: [20] });\n  const state2 = useSliderState({ value: [20, 50] });\n\n  const state3 = useSliderState({ value: [20] });\n  const state4 = useSliderState({ value: [20, 50] });\n\n  const state5 = useSliderState({ value: [20] });\n  const state6 = useSliderState({ value: [20, 50] });\n\n  const state7 = useSliderState({ value: [20] });\n  const state8 = useSliderState({ value: [20, 50] });\n\n  const state9 = useSliderState({ value: [20] });\n  const state10 = useSliderState({ value: [20, 50] });\n\n\n  return (\n    <>\n      <Headline>Slider</Headline>\n      <Slider view=\"default\" {...state1} />\n      <Slider view=\"default\" {...state2} />\n      <Slider filled view=\"default\" {...state3} />\n      <Slider filled view=\"default\" {...state4} />\n      <Slider reverse filled view=\"default\" {...state5} />\n      <Slider reverse filled view=\"default\" {...state6} />\n      <Slider filled step={25} view=\"default\" {...state7} />\n      <Slider filled step={25} view=\"default\" {...state8} />\n      <Slider filled step={20} showTicks showTickValues view=\"default\" {...state9} />\n      <Slider filled showTicks showTickValues step={20} view=\"default\" {...state10} />\n    </>\n  );\n}\n\nconst componentsMap: Record<string, ComponentType> = {\n  button: ButtonShowcase,\n  attach: AttachShowcase,\n  badge: BadgeShowcase,\n  checkbox: CheckboxShowcase,\n  divider: DividerShowcase,\n  link: LinkrShowcase,\n  menu: MenuShowcase,\n  messageBox: MessageBoxrShowcase,\n  progress: ProgresShowcase,\n  radiobox: RadioboxShowcase,\n  radioButton: RadioButtonShowcase,\n  spin: SpinShowcase,\n  tabsMenu: TabsMenuShowcase,\n  text: TextShowcase,\n  textarea: TextareaShowcase,\n  textinput: TextinputShowcase,\n  tooltip: TooltipShowcase,\n  tumbler: TumblerShowcase,\n  userPic: UserPicShowcase,\n  slider: SliderShowcase\n}\n\nexport const Showcase: React.FC<{ includes: string[] }> = ({ includes }) => {\n  return (\n    <div className=\"Showcase\">\n      {includes\n        .filter((componentName) => componentsMap[componentName])\n        .map((componentName) => createElement(componentsMap[componentName]))}\n    </div>\n  )\n}\n","import React, { FC, useState, useEffect } from 'react'\nimport { useStore } from 'effector-react'\nimport deepmerge from 'deepmerge'\nimport YAML from 'yaml'\nimport { cnTheme } from '@yandex/ui/Theme';\n\nimport { TabsMenu } from '@yandex/ui/TabsMenu/TabsMenu.bundle/desktop'\nimport { Tumbler } from '@yandex/ui/Tumbler/Tumbler.bundle/desktop'\n\nimport { toDeepToken } from '../../../utils/toDeepToken'\nimport { Showcase } from '../../Showcase/Showcase'\nimport { metricaGoal } from '../../YaMetrika/YaMetrika'\n\nimport { $cssVariables, $designTokens } from '../Sandbox.model';\n\nexport const SandboxExample: FC<any> = ({ includes, theme }) => {\n    const [activeTab, setActiveTab] = useState('jsx')\n\n    const cssVariables = useStore($cssVariables)\n    const designTokens = useStore($designTokens)\n\n    const [yml, setYml] = useState('')\n    const [shownDiff, setDiff] = useState(true)\n\n    useEffect(() => {\n        if (activeTab === 'yml') {\n            createYaml()\n        }\n    }, [activeTab, designTokens])\n\n    const createYaml = () => {\n        const yml = Object.entries(designTokens).reduce((acc, value: any) => {\n            if (value[1].changed) {\n                acc.push(toDeepToken(value[1].path, { value: value[1].value }))\n            }\n            return acc\n        }, [] as any)\n\n        const c = deepmerge.all(yml)\n        const text = YAML.stringify(c)\n\n        setYml(text)\n    }\n\n    return (\n        <div className=\"Sandbox-Examples\">\n            <div>\n                <div className=\"Sandbox-Showcase\">\n                    <div className=\"Sandbox-Content\">\n                        <div className=\"Sandbox-Tabs\">\n                            <TabsMenu\n                                size=\"m\"\n                                view=\"default\"\n                                layout=\"horiz\"\n                                activeTab={activeTab}\n                                tabs={[\n                                    {\n                                        id: 'jsx', onClick: () => {\n                                            setActiveTab('jsx');\n                                            metricaGoal('jsx');\n                                        }, content: 'JSX'\n                                    },\n                                    {\n                                        id: 'yml', onClick: () => {\n                                            setActiveTab('yml');\n                                            metricaGoal('yml');\n                                        }, content: 'YML'\n                                    },\n                                ]}\n                            />\n                            <div className=\"Tumbler-Wrapper\">\n                                <Tumbler\n                                    size=\"m\"\n                                    view=\"default\"\n                                    checked={shownDiff}\n                                    onChange={() => {\n                                        setDiff(!shownDiff)\n                                        metricaGoal('show-hide-changes')\n                                    }}\n                                    labelAfter={'Показать изменения'}\n                                />\n                            </div>\n                        </div>\n                        <div\n                            className={cnTheme(theme, ['Sandbox-ContentWrapper'])}\n                            style={shownDiff ? cssVariables : {}}\n                        >\n                            {activeTab === 'jsx' && <Showcase includes={includes} />}\n                            {activeTab === 'yml' && (\n                                <div className=\"Sandbox-ContentWrapper-YML\">\n                                    <pre>\n                                        <code>{yml}</code>\n                                    </pre>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","export function toDeepToken(path: string[], prop: any): any {\n  const chunks = [...path].reverse()\n  let result: any = prop\n  for (let i = 0; i < chunks.length; i++) {\n    result = { [chunks[i]]: result }\n  }\n  return result\n}\n","import React, { useState } from 'react'\n\nimport { variablesChangedBatch } from '../../Sandbox/Sandbox.model'\n\nimport { TextareaWithAutoResize } from '@yandex/ui/Textarea/desktop/bundle'\nimport { Button } from '@yandex/ui/Button/Button.bundle/desktop'\nimport { Spacer } from '@yandex/ui/Spacer/desktop'\n\nexport const CustomThemeDownloader: React.FC<any> = () => {\n    const tokensDefault = `button:\n    viewAction:\n      fillColor:\n        base:\n          value: \"#C728B3\"\n        progress:\n          base:\n            value: \"#C728B3\"\n          process:\n            value: \"#de1258\"\n    viewDefault:\n      fillColor:\n        base:\n          value: \"#ecb6ea\"`\n\n    const [value, setValue] = useState(tokensDefault)\n    const [error, setError] = useState('')\n    const [progress, setProgress] = useState(false)\n\n    const tokenProcessing = () => {\n      setProgress(true)\n      setError('')\n\n      const body = JSON.stringify({\n        config: {\n          output: {\n            css: {\n              transforms: ['name/cti/kebab'],\n              buildPath: './themes',\n              files: [\n                {\n                  destination: 'tokens.json',\n                  format: 'json/extended',\n                },\n              ],\n            },\n          },\n        },\n        tokens: {\n          language: 'yaml',\n          content: value\n        }\n      })\n\n      fetch('https://themebox.now.sh', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body,\n      })\n        .then(response => response.json())\n        .then(response => {\n          if (response.error) {\n            setProgress(false)\n            setError(response.error)\n            return\n          }\n\n          const res = JSON.parse(response.data[0].content)\n          const tokens = Object.entries(res).map(([_, item]:any) => {\n            return {\n                path: item.path,\n                name: item.name,\n                value: item.value,\n                changed: true,\n              }\n          })\n\n          variablesChangedBatch(tokens)\n          setProgress(false)\n        });\n    }\n\n    return (\n      <form style={{\n        margin: '0 14px 0 0'\n      }}>\n        Токены:\n        <Spacer all={10} />\n        <TextareaWithAutoResize\n          state={error ? 'error' : undefined}\n          hint={error}\n          view=\"default\"\n          size=\"m\"\n          value={value}\n          onChange={(event) => setValue(event.target.value)}\n        />\n        <Spacer all={10} />\n        <Button view=\"action\" size=\"m\" progress={progress} onClick={tokenProcessing}>Загрузить</Button>\n      </form>\n    )\n  }\n","import React, { useState } from 'react'\nimport { Select } from '@yandex/ui/Select/Select.bundle/desktop'\nimport { Textinput } from '@yandex/ui/Textinput/Textinput.bundle/desktop'\nimport { TabsMenu } from '@yandex/ui/TabsMenu/TabsMenu.bundle/desktop'\nimport { TabsPanes } from '@yandex/ui/TabsPanes/TabsPanes.bundle/desktop'\n\nimport { TextinputField } from '../TextinputField/TextinputField'\nimport { metricaGoal } from '../YaMetrika/YaMetrika'\n\nimport { SandboxExample } from './SandboxExample/SandboxExample'\nimport { CustomThemeDownloader } from './CustomThemeDownloader/CustomThemeDownloader'\nimport { $designTokens } from '../Sandbox/Sandbox.model'\n\nimport './Sandbox.css'\nimport { useStore } from 'effector-react'\n\ntype SandboxProps = {\n  globals?: any\n  components?: any\n  theme?: string\n}\n\nexport const Sandbox: React.FC<SandboxProps> = ({ components, globals, theme }) => {\n  const designTokens = useStore($designTokens)\n  const tabs = ['globals', ...Object.keys(components)]\n  const [activeTab, setActiveTab] = useState('globals')\n  const [activeTab1, setActiveTab1] = useState('tokens')\n  const values = activeTab === 'globals' ? globals : components[activeTab]\n  const [filter, setFilter] = useState('')\n\n  const tokensTab = (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-beetwen',\n          marginRight: 20,\n          marginBottom: 20,\n        }}\n      >\n        <Select\n          style={{ width: 150, marginRight: 20 }}\n          size=\"m\"\n          view=\"default\"\n          onChange={(event) => {\n            setActiveTab(event.target.value)\n            metricaGoal('select')\n          }}\n          value={activeTab}\n          options={tabs.map((tab) => ({ value: tab, content: tab }))}\n        />\n        <Textinput\n          debounceTimeout={500}\n          hasClear\n          onChange={(event) => {\n            setFilter(event.target.value)\n            metricaGoal('search')\n          }}\n          view=\"default\"\n          size=\"m\"\n          placeholder=\"Поиск по токенам\"\n          value={filter}\n        />\n      </div>\n      {Object.entries(values)\n        .filter(([groupName]) => groupName.includes(filter))\n        .map(([groupName, groupTokens]: any, index) => (\n          <TextinputField\n            key={index}\n            label={groupName}\n            value={groupTokens.value}\n            customTokens={(designTokens[groupName] || {}).value}\n            path={groupTokens.path}\n            description={groupTokens.description}\n          />\n        ))}\n    </>\n  )\n\n  return (\n    <div className=\"Sandbox\">\n      <SandboxExample theme={theme} includes={activeTab === 'globals' ? Object.keys(components) : [activeTab]} />\n      <div className=\"Sandbox-Tokens\">\n        <div className=\"Sandbox-Tokens-Tabs\">\n          <TabsMenu\n            view=\"default\"\n            layout=\"horiz\"\n            size=\"m\"\n            activeTab={activeTab1}\n            tabs={[\n              { id: 'custom', onClick: () => setActiveTab1('custom'), content: 'Загрузить тему' },\n              { id: 'tokens', onClick: () => setActiveTab1('tokens'), content: 'Токены' },\n            ]}\n          />\n        </div>\n        <TabsPanes\n          activePane={activeTab1}\n          panes={[\n            { id: 'custom', content: <CustomThemeDownloader /> },\n            { id: 'tokens', content: tokensTab }\n          ]}\n        />\n      </div>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { configureRootTheme } from '@yandex/ui/Theme'\nimport { theme } from '@yandex/ui/Theme/presets/default'\nimport { Select } from '@yandex/ui/Select/desktop/bundle'\nimport { ListTile } from '@yandex/ui/ListTile/desktop'\nimport { Text } from '@yandex/ui/Text/bundle'\n\nimport stylesDataDefault from './themes/presets/example/root.json'\nimport stylesDataInverse from './themes/presets/example-inverse/root.json'\nimport stylesDataBrand from './themes/presets/example-brand/root.json'\nimport stylesDataTurbo from './themes/presets/example-turbo/root.json'\n\nimport { Sandbox } from './components/Sandbox/Sandbox'\n\nimport { theme as themeDefault} from '@yandex/ui/Theme/presets/default'\nimport { theme as themeInverse} from '@yandex/ui/Theme/presets/inverse'\nimport { theme as themeBrand} from '@yandex/ui/Theme/presets/brand'\nimport { theme as themeTurbo} from '@yandex/ui/Theme/presets/turbo'\n\nimport './App.css'\nconfigureRootTheme({ theme })\n\n\nconst themes: Record<string, any> = {\n    default: { tokens: stylesDataDefault, preset: themeDefault },\n    inverse: { tokens: stylesDataInverse, preset: themeInverse },\n    brand: { tokens: stylesDataBrand, preset: themeBrand },\n    turbo: { tokens: stylesDataTurbo, preset: themeTurbo },\n}\n\nexport default () => {\n    const themesNames = Object.keys(themes);\n    const [theme, chooseTheme] = useState('default')\n\n    const menuItems = themesNames.map(val => ({\n        value: val,\n        content: themes[val].name || `${val}`,\n    }))\n\n    return (\n        <div className=\"Site\">\n            <div className=\"Header\">\n                <ListTile\n                    leftSpace=\"m\"\n                    rightSpace=\"m\"\n                    alignItems=\"center\"\n                    leading={\n                        <Text typography=\"control-m\" color=\"secondary\">\n                            Тема из пресетов @yandex/ui:\n                        </Text>\n                    }\n                >\n                    <Select\n                        size=\"m\"\n                        view=\"default\"\n                        options={menuItems}\n                        value={theme}\n                        onChange={(event: any) => chooseTheme(event.target.value)}\n                    />\n                </ListTile>\n            </div>\n            <div className=\"Content\">\n                <Sandbox theme={themes[theme].preset} globals={themes[theme].tokens.globals} components={themes[theme].tokens.components} />\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}