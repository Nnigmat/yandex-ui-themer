{"version":3,"sources":["api/downloadTokens.ts","utils/queryParameters.ts","model/themes.ts","model/query.ts","model/tokens.ts","components/Header/Clear/Clear.tsx","api/uploadTokens.ts","components/Header/Share/model.ts","components/Header/Share/Share.tsx","components/Header/Header.tsx","utils/isColor.ts","components/IconBack/IconBack.tsx","components/YaMetrika/YaMetrika.ts","components/TextinputField/ColorPicker/ColorPicker.tsx","components/TextinputField/Description/Description.tsx","model/mappings.ts","utils/constants.ts","utils/transformers.ts","utils/resolveTokens.ts","model/cssVariables.ts","components/TextinputField/TextinputField.tsx","components/Headline/Headline.tsx","components/Showcase/Showcases/BadgeShowcase.tsx","components/Showcase/Showcases/HeaderShowcase.tsx","components/Showcase/Showcase.tsx","components/Showcase/Showcases/AttachShowcase.tsx","components/Showcase/Showcases/ButtonShowcase.tsx","components/Showcase/Showcases/ButtonGroupShowcase.tsx","components/Showcase/Showcases/CheckboxShowcase.tsx","components/Showcase/Showcases/DividerShowcase.tsx","components/Showcase/Showcases/LinkShowcase.tsx","components/Showcase/Showcases/MenuShowcase.tsx","components/Showcase/Showcases/MessageBoxShowcase.tsx","components/Showcase/Showcases/ProgressShowcase.tsx","components/Showcase/Showcases/RadioboxShowcase.tsx","components/Showcase/Showcases/RadioButtonShowcase.tsx","components/Showcase/Showcases/SpinShowcase.tsx","components/Showcase/Showcases/TabsMenuShowcase.tsx","components/Showcase/Showcases/TextShowcase.tsx","components/Showcase/Showcases/TextareaShowcase.tsx","components/Showcase/Showcases/TextinputShowcase.tsx","components/Showcase/Showcases/TooltipShowcase.tsx","components/Showcase/Showcases/TumblerShowcase.tsx","components/Showcase/Showcases/UserPicShowcase.tsx","components/Showcase/Showcases/SliderShowcase.tsx","utils/toDeepToken.ts","components/Sandbox/SandboxExample/model.ts","components/Sandbox/SandboxExample/SandboxExample.tsx","api/downloadTheme.ts","components/Sandbox/CustomThemeDownloader/model.ts","components/Sandbox/CustomThemeDownloader/CustomThemeDownloader.tsx","components/Sandbox/Sandbox.tsx","App.tsx","index.tsx"],"names":["downloadTokens","tokensHash","a","fetch","method","body","JSON","stringify","response","json","ok","Error","errorMessage","parse","getLocation","window","location","href","replace","search","themeToAllTokens","theme","globals","Object","values","components","reduce","acc","val","changeThemeEvent","createEvent","$themes","createStore","default","tokens","stylesDataDefault","mappings","mappingsDataDefault","preset","themeDefault","allTokens","inverse","stylesDataInverse","mappingsDataInverse","themeInverse","brand","stylesDataBrand","mappingsDataBrand","themeBrand","$themesNames","map","themes","keys","$theme","getState","$themeName","on","_","themeName","updateTokensQueryParameterEvent","name","value","queryParams","URLSearchParams","set","history","pushState","toString","setQueryParameter","delete","query","deleteQueryParameter","variablesChangedEvent","variablesChangedBatchEvent","variablesResetEvent","$designTokens","$listDesignTokens","token","variablesInitializationGate","createGate","variablesInitializationFx","createEffect","get","toast","success","error","state","ret","forEach","v","reset","watch","forward","from","open","to","Clear","props","view","size","onClick","uploadTokens","shareTokensEvent","shareTokensFx","attach","source","mapParams","effect","length","$shareTokensLoading","pending","$shareTokensDisabled","doneData","copy","failData","autoClose","Share","loading","useStore","disabled","progress","cnHeader","cn","Header","menuItems","content","className","ListTile","leftSpace","rightSpace","alignItems","leading","typography","color","options","onChange","event","target","isColor","Boolean","String","match","cnIconBack","IconBack","width","height","viewBox","d","fill","metricaGoal","goal","ym","cnColorPicker","ColorPicker","onColorChange","useState","visible","setVisible","scopeRef","useRef","anchorRef","handleClick","useCallback","handleClose","handleColorChange","ref","style","background","direction","anchor","scope","onClose","onChangeComplete","cnDescription","Description","description","Badge","textColor","$tokenMappings","entries","path","mappedName","join","$invertedTokenMappings","COLOR_RE","PARAM_DASH_RE","PARAM_DOT_RE","BRACES_REMOVAL_RE","transformMappings","inverted","template","params","extractParams","el","$resolvedTokens","combine","designTokens","resolved","seen","Set","resolveToken","has","add","mappedValue","resolveTokens","e","message","$transformedTokens","key","cssColorFn","convert","memoCssVariables","$cssVariables","cnTextinputField","TextinputField","label","defaultValue","customTokens","rawValue","transformedTokens","setVal","isColorValue","colorValue","isChanged","useEffect","handleClearClick","changed","rgb","r","g","b","hsl","h","s","l","hex","handleChange","debounceTimeout","iconRight","hint","Headline","children","IconTwo","xmlns","SearchButton","withViewSearchArrowButton","ButtonBase","SearchInput","withHasClear","withViewSearchArrowTextinput","TextinputBase","componentsMap","badge","display","justifyContent","outlineColor","marginLeft","button","checked","iconLeft","type","icon","whiteSpace","buttonGroup","gaps","undefined","gap","index","pin","checkbox","indeterminate","divider","Divider","margin","header","action","hasClear","active","link","pseudo","menu","items","setValue","messageBox","backgroundColor","padding","actions","Progress","timing","maxValue","radiobox","radioButton","spin","tabsMenu","layout","tabs","id","activeTab","text","as","textarea","value1","setValue1","onClearClick","textinput","value2","setValue2","value3","setValue3","value4","setValue4","value5","setValue5","value6","setValue6","tooltip","visible1","setVisible1","visible2","setVisible2","visible3","setVisible3","visible4","setVisible4","visible5","setVisible5","visible6","setVisible6","anchorRef1","anchorRef2","anchorRef3","anchorRef4","anchorRef5","anchorRef6","position","marginRight","innerRef","hasTail","tumbler","checked1","setChecked1","checked2","setChecked2","marginBottom","labelBefore","labelAfter","aria-label","userPic","plus","avatarId","hasCamera","lodpiUrl","slider","state1","useSliderState","state2","state3","state4","state5","state6","state7","state8","state9","state10","filled","reverse","step","showTicks","showTickValues","Showcase","includes","filter","componentName","createElement","toDeepToken","prop","chunks","result","chunk","$cssText","cssVariables","cssText","$yamlText","addedTokens","yml","push","paramsToAdd","hasSeen","deepmergedYml","deepmerge","all","YAML","tabsNames","SandboxExample","setActiveTab","yamlText","shownDiff","setDiff","tab","handleTabChange","prev","cnTheme","themeboxConfig","output","css","transforms","buildPath","files","destination","format","downloadTheme","config","language","headers","res","data","item","uploadRawTokensEvent","$tokensText","uploadRawTokensFx","$uploadRawTokensLoading","updateTokensEvent","payload","cnCustomThemeDownloader","CustomThemeDownloader","Spacer","Sandbox","invertedTokenMappings","activeTab1","setActiveTab1","setFilter","tokensTab","placeholder","groupName","groupTokens","activePane","panes","configureRootTheme","useGate","onbeforeunload","preventDefault","transition","Slide","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57326ac9.chunk.js","sourcesContent":["import { VariablesType } from '../types'\n\nexport const downloadTokens = async (tokensHash: string | null) => {\n  if (!tokensHash) {\n    return\n  }\n\n  const response = await fetch('https://functions.yandexcloud.net/d4eg1ughq5da8rgfonij', {\n    method: 'POST',\n    body: JSON.stringify({\n      tokensHash,\n    }),\n  })\n\n  const json = await response.json()\n\n  if (!response.ok) {\n    throw new Error(json.errorMessage)\n  }\n\n  return JSON.parse(json) as { tokens: VariablesType[]; theme: string }\n}\n","const getLocation = () => window.location.href.replace(window.location.search, '')\n\nexport const getQueryParameter = (name: string) => {\n  return new URLSearchParams(window.location.search).get(name)\n}\n\nexport const setQueryParameter = (name: string, value: string) => {\n  const queryParams = new URLSearchParams(window.location.search)\n  queryParams.set(name, value)\n\n  window.history.pushState({}, '', `${getLocation()}?${queryParams.toString()}`)\n}\n\nexport const deleteQueryParameter = (name: string) => {\n  const queryParams = new URLSearchParams(window.location.search)\n  queryParams.delete(name)\n\n  const query = queryParams.toString() ? `?${queryParams.toString()}` : ''\n\n  window.history.pushState({}, '', getLocation() + query)\n}\n","import { createStore, createEvent } from 'effector'\n\nimport { theme as themeDefault } from '@yandex/ui/Theme/presets/default'\nimport { theme as themeInverse } from '@yandex/ui/Theme/presets/inverse'\nimport { theme as themeBrand } from '@yandex/ui/Theme/presets/brand'\n\nimport stylesDataDefault from '../themes/presets/example/root.json'\nimport stylesDataInverse from '../themes/presets/example-inverse/root.json'\nimport stylesDataBrand from '../themes/presets/example-brand/root.json'\n\nimport mappingsDataDefault from '../themes/presets/example/mappings.json'\nimport mappingsDataInverse from '../themes/presets/example-inverse/mappings.json'\nimport mappingsDataBrand from '../themes/presets/example-brand/mappings.json'\n\nimport { ThemeType, ThemeNamesType, TokensType } from '../types'\n\nconst themeToAllTokens = (theme: TokensType) => ({\n  ...theme.globals,\n  ...Object.values(theme.components).reduce((acc, val) => ({ ...acc, ...val })),\n})\n\nexport const changeThemeEvent = createEvent<ThemeNamesType>()\n\nexport const $themes = createStore<Record<string, ThemeType>>({\n  default: {\n    tokens: stylesDataDefault,\n    mappings: mappingsDataDefault,\n    preset: themeDefault,\n    allTokens: themeToAllTokens(stylesDataDefault),\n  },\n  inverse: {\n    tokens: stylesDataInverse,\n    mappings: mappingsDataInverse,\n    preset: themeInverse,\n    allTokens: themeToAllTokens(stylesDataInverse),\n  },\n  brand: {\n    tokens: stylesDataBrand,\n    mappings: mappingsDataBrand,\n    preset: themeBrand,\n    allTokens: themeToAllTokens(stylesDataBrand),\n  },\n})\n\nexport const $themesNames = $themes.map((themes) => Object.keys(themes))\n\nexport const $theme = createStore<ThemeType>($themes.getState().default)\n\nexport const $themeName = createStore<ThemeNamesType>('default')\n\n$theme.on(changeThemeEvent, (_, themeName) => $themes.getState()[themeName])\n\n$themeName.on(changeThemeEvent, (_, themeName) => themeName)\n","import { setQueryParameter, deleteQueryParameter } from '../utils/queryParameters'\n\nexport const TOKENS_QUERY_PARAMETER = 'tokens'\n\nexport const updateTokensQueryParameterEvent = (tokens?: string) => {\n  if (!tokens) {\n    deleteQueryParameter(TOKENS_QUERY_PARAMETER)\n    return\n  }\n\n  setQueryParameter(TOKENS_QUERY_PARAMETER, tokens)\n}\n","import { createStore, createEvent, createEffect, forward } from 'effector'\nimport { createGate } from 'effector-react'\nimport { toast } from 'react-toastify'\n\nimport { downloadTokens } from '../api/downloadTokens'\nimport { getQueryParameter } from '../utils/queryParameters'\nimport { changeThemeEvent } from './themes'\nimport { updateTokensQueryParameterEvent } from './query'\nimport { VariablesType, ThemeNamesType, DesignTokensType, ListDesignTokensType } from '../types'\n\nexport const variablesInitializationEvent = createEvent()\nexport const variablesChangedEvent = createEvent<VariablesType>()\nexport const variablesChangedBatchEvent = createEvent<VariablesType[]>()\nexport const variablesResetEvent = createEvent()\n\nexport const uploadTokensEvent = createEvent()\n\nexport const loadingTokensEvent = createEvent<boolean>()\n\nexport const $designTokens = createStore<DesignTokensType>({})\n\nexport const $listDesignTokens = $designTokens.map<ListDesignTokensType>((tokens) =>\n  Object.values(tokens).map((token) => ({ ...token })),\n)\n\nexport const variablesInitializationGate = createGate()\n\nexport const variablesInitializationFx = createEffect(async () => {\n  const tokensHash = getQueryParameter('tokens')\n\n  if (!tokensHash) {\n    return\n  }\n\n  try {\n    const response = await downloadTokens(tokensHash)\n\n    if (!response) {\n      throw new Error('No response')\n    }\n\n    const { tokens, theme } = response\n\n    changeThemeEvent(theme as ThemeNamesType)\n    variablesChangedBatchEvent(tokens)\n    updateTokensQueryParameterEvent(tokensHash)\n    toast.success('Тема успешно загружена')\n  } catch (err) {\n    toast.error('Не удалось загрузить тему, проверьте ссылку')\n  }\n})\n\n// TODO: Удалять значение из стора если change=false.\n$designTokens\n  .on(variablesChangedEvent, (state, token) => ({ ...state, [token.name]: token }))\n  .on(variablesChangedBatchEvent, (state, tokens) => {\n    const ret: Record<string, any> = {}\n    tokens.forEach((v) => (ret[v.name] = v))\n    return { ...state, ...ret }\n  })\n  .reset(variablesResetEvent)\n\nvariablesResetEvent.watch(() => updateTokensQueryParameterEvent())\n\nforward({\n  from: variablesInitializationGate.open,\n  to: variablesInitializationFx,\n})\n","import React, { FC } from 'react'\nimport { Button, IButtonProps as ButtonProps } from '@yandex/ui/Button/desktop/bundle'\n\nimport { variablesResetEvent } from '../../../model/tokens'\n\nexport const Clear: FC<ButtonProps> = (props) => {\n  return (\n    <Button {...props} view=\"clear\" size=\"m\" onClick={variablesResetEvent}>\n      Сбросить\n    </Button>\n  )\n}\n","import { VariablesType } from '../types'\n\nexport const uploadTokens = async (theme: string, tokens: VariablesType[]) => {\n  const response = await fetch('https://functions.yandexcloud.net/d4emk05t1v8gvek4q8l0', {\n    method: 'POST',\n    body: JSON.stringify({\n      theme,\n      tokens,\n    }),\n  })\n\n  const json = await response.json()\n\n  if (!response.ok) {\n    throw new Error(json.errorMessage)\n  }\n\n  return json.tokensHash\n}\n","import { attach, createEffect, createEvent, forward } from 'effector'\nimport copy from 'copy-to-clipboard'\nimport { toast } from 'react-toastify'\n\nimport { $themeName } from '../../../model/themes'\nimport { $listDesignTokens } from '../../../model/tokens'\nimport { updateTokensQueryParameterEvent } from '../../../model/query'\nimport { uploadTokens } from '../../../api/uploadTokens'\n\nimport { ThemeNamesType, VariablesType } from '../../../types'\n\ntype ShareTokensFxPropsType = {\n  themeName: ThemeNamesType\n  tokens: VariablesType[]\n}\n\nexport const shareTokensEvent = createEvent()\n\nexport const shareTokensFx = attach({\n  source: {\n    themeName: $themeName,\n    tokens: $listDesignTokens,\n  },\n  mapParams: (_: any, { themeName, tokens }) => ({\n    themeName,\n    tokens,\n  }),\n  effect: createEffect(({ themeName, tokens }: ShareTokensFxPropsType) => {\n    if (tokens.length === 0) {\n      return\n    }\n\n    return uploadTokens(themeName, tokens)\n  }),\n})\n\nexport const $shareTokensLoading = shareTokensFx.pending\nexport const $shareTokensDisabled = $listDesignTokens.map((tokens) => tokens.length === 0)\n\nshareTokensFx.doneData.watch((tokensHash) => {\n  if (!tokensHash) {\n    return\n  }\n\n  updateTokensQueryParameterEvent(tokensHash)\n  copy(window.location.href)\n  toast.success('Ссылка успешно скопирована в буфер обмена')\n})\n\nshareTokensFx.failData.watch((error) => toast.error(error, { autoClose: 5000 }))\n\nforward({\n  from: shareTokensEvent,\n  to: shareTokensFx,\n})\n","import React, { FC } from 'react'\nimport { Button, IButtonProps as ButtonProps } from '@yandex/ui/Button/desktop/bundle'\nimport { useStore } from 'effector-react'\n\nimport { shareTokensEvent, $shareTokensLoading, $shareTokensDisabled } from './model'\n\nexport const Share: FC<ButtonProps> = (props) => {\n  const loading = useStore($shareTokensLoading)\n  const disabled = useStore($shareTokensDisabled)\n\n  return (\n    <Button\n      {...props}\n      view=\"action\"\n      size=\"m\"\n      onClick={shareTokensEvent}\n      progress={loading}\n      disabled={disabled}\n    >\n      Поделиться\n    </Button>\n  )\n}\n","import React, { ChangeEvent } from 'react'\nimport { useStore } from 'effector-react'\nimport { Select } from '@yandex/ui/Select/desktop/bundle'\nimport { ListTile } from '@yandex/ui/ListTile/desktop'\nimport { Text } from '@yandex/ui/Text/bundle'\nimport { cn } from '@bem-react/classname'\n\nimport { Clear } from './Clear'\nimport { Share } from './Share'\n\nimport { $themes, $themesNames, $themeName, changeThemeEvent } from '../../model/themes'\n\nimport { ThemeNamesType } from '../../types'\n\nimport './Header.css'\n\nexport const cnHeader = cn('Header')\n\nexport function Header() {\n  const themes = useStore($themes)\n  const themeName = useStore($themeName)\n  const themesNames = useStore($themesNames)\n\n  const menuItems = themesNames.map((value) => ({\n    value,\n    content: themes[value].name || value,\n  }))\n\n  const handleChange = (event: ChangeEvent<HTMLSelectElement>) =>\n    changeThemeEvent(event.target.value as ThemeNamesType)\n\n  return (\n    <div className={cnHeader()}>\n      <ListTile\n        leftSpace=\"m\"\n        rightSpace=\"m\"\n        alignItems=\"center\"\n        leading={\n          <Text typography=\"control-m\" color=\"secondary\">\n            Тема из пресетов @yandex/ui:\n          </Text>\n        }\n      >\n        <Select\n          size=\"m\"\n          view=\"default\"\n          options={menuItems}\n          value={themeName}\n          onChange={handleChange}\n          className={cnHeader('ThemeSelector')}\n        />\n        <Share className={cnHeader('Share')} />\n        <Clear className={cnHeader('Clear')} />\n      </ListTile>\n    </div>\n  )\n}\n","export function isColor(value: string): boolean {\n  return Boolean(String(value).match(/^(#|hsla?|rgba?)/))\n}\n","import React, { FC, MouseEventHandler } from 'react'\nimport { cn } from '@bem-react/classname'\n\nimport './IconBack.css'\n\nexport const cnIconBack = cn('IconBack')\n\nexport const IconBack: FC<{ onClick: MouseEventHandler<HTMLSpanElement>; className?: string }> = ({\n  onClick,\n  className,\n}) => (\n  <span onClick={onClick} className={cnIconBack(null, [className])}>\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\">\n      <path\n        d=\"M3.713 9a.75.75 0 0 1-.697-1.026l1.862-4.705a.75.75 0 0 1 1.318-.145l.9 1.328a9 9 0 1 1-3.939 9.234 1 1 0 0 1 1.966-.373 7 7 0 1 0 3.096-7.205l1.167 1.721A.75.75 0 0 1 8.766 9H3.712z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  </span>\n)\n","export const COUNTER_ID = '69595123';\n\nexport const metricaGoal = (goal: string) => {\n    // @ts-ignore\n    window.ym(COUNTER_ID, 'reachGoal', goal);\n};\n","import React, { useState, useRef, useCallback, FC } from 'react'\nimport { ChromePicker } from 'react-color'\nimport { Popup } from '@yandex/ui/Popup/desktop/bundle'\nimport { cn } from '@bem-react/classname'\n\nimport { metricaGoal } from '../../YaMetrika'\n\nimport './ColorPicker.css'\n\nexport type ColorPickerProps = {\n  color: string\n  onColorChange: (color: string) => void\n}\n\nexport const cnColorPicker = cn('ColorPicker')\n\nexport const ColorPicker: FC<ColorPickerProps> = ({ color, onColorChange }) => {\n  const [visible, setVisible] = useState(false)\n\n  const scopeRef = useRef<HTMLDivElement>(null)\n  const anchorRef = useRef<HTMLDivElement>(null)\n\n  const handleClick = useCallback(() => {\n    setVisible(true)\n    metricaGoal('picker')\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setVisible(false)\n  }, [])\n\n  const handleColorChange = useCallback(\n    (event) => {\n      onColorChange(event)\n      metricaGoal('change-tokens')\n    },\n    [onColorChange],\n  )\n\n  return (\n    <div ref={scopeRef} className={cnColorPicker()}>\n      <div\n        ref={anchorRef}\n        onClick={handleClick}\n        className={cnColorPicker('Preview')}\n        style={{ background: color }}\n      />\n      <Popup\n        direction=\"bottom-end\"\n        target=\"anchor\"\n        anchor={anchorRef}\n        view=\"default\"\n        visible={visible}\n        scope={scopeRef}\n        onClose={handleClose}\n      >\n        <ChromePicker color={color} onChangeComplete={handleColorChange} />\n      </Popup>\n    </div>\n  )\n}\n","import React, { FC } from 'react'\nimport { cn } from '@bem-react/classname'\nimport { Badge } from '@yandex/ui/Badge'\n\nimport './Description.css'\n\nexport type DescriptionProps = {\n  description: string\n}\n\nexport const cnDescription = cn('Description')\n\nexport const Description: FC<DescriptionProps> = ({ description }) => {\n  return (\n    <div className={cnDescription('Wrapper')}>\n      <Badge className={cnDescription('Trigger')} content=\"?\" textColor=\"#fff\" color=\"#535353\" />\n      <span className={cnDescription('Popover')}>{description}</span>\n    </div>\n  )\n}\n","import { $theme } from './themes'\nimport { MappingsType } from '../types'\n\n/**\n * Object for design tokens mappings storing\n *\n * @example\n *\n * {\n *  'button-view-action-fill-color-base': 'button.viewAction.fillColor.base.value',\n * }\n */\nexport const $tokenMappings = $theme.map<MappingsType>(({ allTokens }) =>\n  Object.entries(allTokens).reduce((acc, [name, { path }]) => {\n    const mappedName = [...path, 'value'].join('.')\n    return { ...acc, [name]: mappedName }\n  }, {}),\n)\n\n/**\n * Object for design tokens mappings storing\n *\n * @example\n *\n * {\n *  'button.viewAction.fillColor.base.value': 'button-view-action-fill-color-base',\n * }\n */\nexport const $invertedTokenMappings = $theme.map<MappingsType>(({ allTokens }) =>\n  Object.entries(allTokens).reduce((acc, [name, { path }]) => {\n    const mappedName = [...path, 'value'].join('.')\n    return { ...acc, [mappedName]: name }\n  }, {}),\n)\n","export const COLOR_RE = /color\\(.+\\)/\nexport const PARAM_DASH_RE = /({([a-zA-Z--]+)})/g\nexport const PARAM_DOT_RE = /({([a-zA-Z-.]+)})/g\nexport const BRACES_REMOVAL_RE = /[{}]/g\n","import cssColorFn from 'css-color-function'\n\nimport { COLOR_RE, PARAM_DASH_RE, PARAM_DOT_RE } from './constants'\nimport { extractParams } from './resolveTokens'\n\nexport type TokensType = Record<string, string>\n\nexport function transformColors(tokens: TokensType): TokensType {\n  return Object.entries(tokens).reduce(\n    (acc, [key, value]) => ({\n      ...acc,\n      [key]: value.match(COLOR_RE) ? cssColorFn.convert(value) : value,\n    }),\n    {},\n  )\n}\n\nexport function transformMappings(\n  token: string,\n  mappings: Record<string, string>,\n  inverted: boolean = false,\n): string {\n  const template = !inverted ? PARAM_DASH_RE : PARAM_DOT_RE\n  const params = extractParams(token, template)\n\n  if (!params) {\n    return token\n  }\n\n  return params.reduce((acc, { token }) => {\n    const value = mappings[token] || token\n    return acc.replace(token, value)\n  }, token)\n}\n","import { MappingsType, ThemeType, DesignTokensType, ParamsType } from '../types'\nimport { transformMappings } from './transformers'\nimport { PARAM_DASH_RE, BRACES_REMOVAL_RE } from './constants'\n\n/**\n * Get parameters from string.\n *\n * @param value {string} String from which parameters should be retrieved\n * @returns {ParamsType[] | undefined}\n *\n * @example\n *\n * extractParams('{button-bg-color}') // [ { template: '{button-bg-color}', token: 'button-bg-color'} ]\n * extractParams('{width} {height}') // [ {template: '{width}', token: 'width'}, { template: '{height}', token: 'height'} ]\n */\nexport const extractParams = (\n  value: string,\n  template: RegExp = PARAM_DASH_RE,\n): ParamsType[] | undefined => {\n  const params = value.match(template)\n\n  if (!params) {\n    return\n  }\n\n  return params.reduce<ParamsType[]>(\n    (acc, el) => [...acc, { template: el, token: el.replace(BRACES_REMOVAL_RE, '') }],\n    [],\n  )\n}\n\n/**\n * Resolves dependencies in tokens.\n *\n * @param tokens {DesignTokensType} Design tokens which need to be resolved\n * @param theme {ThemeType} Theme based on which values resolving should be done\n * @returns {Record<string, string>}\n *\n * @example\n *\n * const exampleTokens = {\n *   'color.project': '#fc0',\n *   'color.bg.action': 'color({color.project} l(+15%))',\n *   'color.bg.alert': '{color.bg.action}',\n *   'space-x': '2px',\n *   'space-y': '4px',\n *   padding: '{space-y} {space-x}',\n * };\n *\n * resolveTokens(exampleTokens);\n *\n * // Result\n * {\n *   'color.project': '#fc0',\n *   'color.bg.action': 'color(#fc0 l(+15%))',\n *   'color.bg.alert': '#fc0',\n *   'space-x': '2px',\n *   'space-y': '4px',\n *   'padding': '4px 2px',\n * };\n *\n */\nexport function resolveTokens(\n  tokens: DesignTokensType,\n  mappings: MappingsType,\n  theme: ThemeType,\n): Record<string, string> {\n  const resolved: Record<string, string> = {}\n  const seen: Set<string> = new Set()\n\n  function resolveToken(token: string, value: string): string {\n    if (resolved[token]) {\n      return resolved[token]\n    }\n\n    // When we don't override token and it is in the the theme, get its value\n    if (theme.allTokens[token] && !(token in tokens)) {\n      resolved[token] = theme.allTokens[token].value.toString()\n      return resolved[token]\n    }\n\n    // If we see token more than once, it means that there is cycle dependency in tokens\n    // and we should terminate the algorithm\n    if (seen.has(token)) {\n      throw new Error(`Cycle dependence. Token: '${token}'`)\n    }\n\n    seen.add(token)\n\n    const params = extractParams(value)\n\n    if (!params) {\n      return value\n    }\n\n    // Change params in the string to resolved tokens\n    return params.reduce((acc, { template, token }) => {\n      let value\n      if (token in tokens) {\n        value = tokens[token].name\n      } else if (token in theme.allTokens) {\n        value = theme.allTokens[token].value.toString()\n      } else {\n        throw new Error(`No such token \\`${token}\\``)\n      }\n\n      return acc.replace(template, resolveToken(token, value))\n    }, value)\n  }\n\n  for (let [token, { value }] of Object.entries(tokens)) {\n    // Convert all tokens to dash-sep format `(button-view-action)`\n    const mappedValue = transformMappings(value, mappings, true)\n    resolved[token] = resolveToken(token, mappedValue)\n  }\n\n  return resolved\n}\n","import { combine } from 'effector'\nimport { toast } from 'react-toastify'\n\nimport { $theme } from './themes'\nimport { $designTokens } from './tokens'\nimport { $invertedTokenMappings } from './mappings'\n\nimport { resolveTokens } from '../utils/resolveTokens'\nimport { transformColors } from '../utils/transformers'\n\nexport const $resolvedTokens = combine(\n  $designTokens,\n  $theme,\n  $invertedTokenMappings,\n  (designTokens, theme, mappings) => {\n    try {\n      return resolveTokens(designTokens, mappings, theme)\n    } catch (e) {\n      toast.error(e.message)\n    }\n\n    return {}\n  },\n)\n\nexport const $transformedTokens = $resolvedTokens.map(transformColors)\n\nlet memoCssVariables = {}\nexport const $cssVariables = $transformedTokens.map<Record<string, string>>((tokens) => {\n  if (!tokens) {\n    return memoCssVariables\n  }\n\n  memoCssVariables = Object.entries(tokens).reduce(\n    (acc, [name, value]) => ({\n      ...acc,\n      [`--${name}`]: value,\n    }),\n    {},\n  )\n\n  return memoCssVariables\n})\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useStore } from 'effector-react'\nimport { Textinput } from '@yandex/ui/Textinput/desktop/bundle'\nimport { ListTile } from '@yandex/ui/ListTile/desktop'\nimport { Text } from '@yandex/ui/Text/bundle'\nimport { cn } from '@bem-react/classname'\n\nimport { isColor } from '../../utils/isColor'\nimport { variablesChangedEvent } from '../../model/tokens'\nimport { IconBack } from '../IconBack'\nimport { ColorPicker } from './ColorPicker'\nimport { Description } from './Description'\n\nimport { metricaGoal } from '../YaMetrika'\nimport { $transformedTokens } from '../../model/cssVariables'\n\nimport './TextinputField.css'\n\nexport const cnTextinputField = cn('TextinputField')\n\nexport const TextinputField: React.FC<{\n  label: string\n  defaultValue: string\n  path: string[]\n  description: string\n  customTokens: string\n  rawValue?: string\n}> = ({ label, defaultValue, path, description, customTokens, rawValue }) => {\n  const transformedTokens = useStore($transformedTokens)\n  const [val, setVal] = useState(customTokens)\n  const token = transformedTokens[label]\n\n  const isColorValue = isColor(token) || isColor(defaultValue)\n  const colorValue = token || defaultValue\n  const isChanged = defaultValue !== val\n\n  // Update internal value when showcase is changed.\n  useEffect(() => {\n    setVal(rawValue || customTokens || defaultValue)\n  }, [defaultValue, customTokens, rawValue])\n\n  const handleClearClick = useCallback(() => {\n    setVal(defaultValue)\n    variablesChangedEvent({\n      path,\n      name: label,\n      value: defaultValue,\n      changed: false,\n    })\n    metricaGoal('clear-textinput')\n  }, [defaultValue, label, path])\n\n  const handleColorChange = useCallback(\n    (color) => {\n      let colorValue = ''\n\n      // TODO: Move to util.\n      if (color.source === 'rgb') {\n        colorValue = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`\n      } else if (color.source === 'hsl') {\n        colorValue = `hsla(${color.hsl.h}, ${color.hsl.s}, ${color.hsl.l}, ${color.hsl.a})`\n      } else {\n        colorValue = color.hex\n      }\n\n      setVal(colorValue)\n      variablesChangedEvent({\n        path,\n        name: label,\n        value: colorValue,\n        changed: colorValue !== defaultValue,\n      })\n    },\n    [path, defaultValue, label],\n  )\n\n  const handleChange = useCallback(\n    (event) => {\n      setVal(event.target.value)\n      variablesChangedEvent({\n        path,\n        name: label,\n        value: event.target.value,\n        changed: event.target.value !== defaultValue,\n      })\n      metricaGoal('change-tokens')\n    },\n    [path, defaultValue, label],\n  )\n\n  return (\n    <ListTile\n      leftSpace=\"m\"\n      rightSpace=\"m\"\n      alignItems=\"center\"\n      leading={\n        <div className={cnTextinputField('Label')}>\n          <Text typography=\"control-m\" color=\"secondary\">\n            {label}:{' '}\n          </Text>\n          {description && <Description description={description} />}\n        </div>\n      }\n    >\n      <div className={cnTextinputField('Control')}>\n        <Textinput\n          debounceTimeout={500}\n          onChange={handleChange}\n          iconRight={isChanged ? <IconBack onClick={handleClearClick} /> : <></>}\n          view=\"default\"\n          size=\"s\"\n          value={val}\n          hint={isChanged ? `Оригинальное значение - ${defaultValue}` : ''}\n          className={cnTextinputField('Input')}\n        />\n        {isColorValue && <ColorPicker color={colorValue} onColorChange={handleColorChange} />}\n      </div>\n    </ListTile>\n  )\n}\n","import React from 'react'\nimport { Text } from '@yandex/ui/Text/bundle'\n\nexport const Headline: React.FC = ({ children }) => (\n  <Text typography=\"display-s\" color=\"primary\">\n    {children}\n  </Text>\n)\n","import React from 'react'\nimport { Badge } from '@yandex/ui/Badge'\nimport { Button } from '@yandex/ui/Button/Button.bundle/desktop'\n\nimport { Headline } from '../../Headline'\n\nconst IconTwo = () => (\n  <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\">\n    <path d=\"M4.5 18a.5.5 0 1 1 0-1 .5.5 0 0 1 0 1zm0-3a2.5 2.5 0 0 0 0 5 2.5 2.5 0 0 0 0-5zm11 3a.5.5 0 1 1 0-1 .5.5 0 0 1 0 1zm0-3a2.5 2.5 0 0 0 0 5 2.5 2.5 0 0 0 0-5zM19 4H5.78L4.97.758A.998.998 0 0 0 4 0H1a1 1 0 0 0 0 2h2.22l.805 3.222.01.042 1.995 7.98a1 1 0 0 0 1.135.743l11.017-1.837c1.02-.17 1.818-1.11 1.818-2.14V5a1 1 0 0 0-1-1zm-1 6.01c0 .05-.085.157-.146.167L7.746 11.862 6.28 6H18v4.01z\" />\n  </svg>\n)\n\nexport const BadgeShowcase = () => {\n  return (\n    <>\n      <Headline>Badge</Headline>\n      <div\n        className=\"Showcase-Item\"\n        style={{ display: 'flex', justifyContent: 'space-between', width: 300 }}\n      >\n        <Badge />\n\n        <Badge content=\"?\" />\n\n        <Badge content={5}>\n          <IconTwo />\n        </Badge>\n\n        <Button view=\"default\" size=\"m\">\n          Закладка\n          <Badge color=\"#0679ff\" outlineColor=\"#0679ff\" content={5} style={{ marginLeft: 5 }} />\n        </Button>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Button as ButtonBase } from '@yandex/ui/Button'\nimport { Textinput as TextinputBase, withHasClear } from '@yandex/ui/Textinput/desktop'\nimport { Header, HeaderSearch, HeaderNav, HeaderNavItem } from '@yandex/ui/Header/desktop'\nimport { withViewSearchArrow as withViewSearchArrowButton } from '@yandex/ui/Header/Button'\nimport { withViewSearchArrow as withViewSearchArrowTextinput } from '@yandex/ui/Header/Textinput'\n\nimport { Headline } from '../../Headline'\n\nconst SearchButton = withViewSearchArrowButton(ButtonBase)\nconst SearchInput = withHasClear(withViewSearchArrowTextinput(TextinputBase))\n\nexport const HeaderShowcase = () => {\n  return (\n    <>\n      <Headline> Header </Headline>\n      <div className=\"Showcase-Item\">\n        <Header className=\"SearchHeader\">\n          <HeaderSearch action=\"//yandex.ru/search\">\n            <SearchInput view=\"search-arrow\" name=\"text\" hasClear value=\"Yandex\" />\n            <SearchButton view=\"search-arrow\"> Найти </SearchButton>\n          </HeaderSearch>\n        </Header>\n        <br /> <br />\n        <Header className=\"SearchHeader\">\n          <HeaderSearch action=\"//yandex.ru/search\">\n            <HeaderNav>\n              <HeaderNavItem href=\"/\"> Таб </HeaderNavItem>\n              <HeaderNavItem href=\"/\"> По </HeaderNavItem>\n              <HeaderNavItem href=\"/\"> Умолчанию </HeaderNavItem>\n              <HeaderNavItem href=\"/\" active>\n                {' '}\n                Активный{' '}\n              </HeaderNavItem>\n            </HeaderNav>\n          </HeaderSearch>\n        </Header>\n      </div>\n    </>\n  )\n}\n","import React, { createElement, ComponentType } from 'react'\n\nimport { AttachShowcase } from './Showcases/AttachShowcase';\nimport { BadgeShowcase } from './Showcases/BadgeShowcase';\nimport { ButtonGroupShowcase } from './Showcases/ButtonGroupShowcase';\nimport { ButtonShowcase } from './Showcases/ButtonShowcase';\nimport { CheckboxShowcase } from './Showcases/CheckboxShowcase';\nimport { DividerShowcase } from './Showcases/DividerShowcase';\nimport { HeaderShowcase } from './Showcases/HeaderShowcase';\nimport { LinkShowcase } from './Showcases/LinkShowcase';\nimport { MenuShowcase } from './Showcases/MenuShowcase';\nimport { MessageBoxShowcase } from './Showcases/MessageBoxShowcase';\nimport { ProgressShowcase } from './Showcases/ProgressShowcase';\nimport { RadioboxShowcase } from './Showcases/RadioboxShowcase';\nimport { RadioButtonShowcase } from './Showcases/RadioButtonShowcase';\nimport { SliderShowcase } from './Showcases/SliderShowcase';\nimport { SpinShowcase } from './Showcases/SpinShowcase';\nimport { TabsMenuShowcase } from './Showcases/TabsMenuShowcase';\nimport { TextareaShowcase } from './Showcases/TextareaShowcase';\nimport { TextinputShowcase } from './Showcases/TextinputShowcase';\nimport { TextShowcase } from './Showcases/TextShowcase';\nimport { TooltipShowcase } from './Showcases/TooltipShowcase';\nimport { TumblerShowcase } from './Showcases/TumblerShowcase';\nimport { UserPicShowcase } from './Showcases/UserPicShowcase';\n\nimport './Showcase.css'\n\nconst componentsMap: Record<string, ComponentType> = {\n  attach: AttachShowcase,\n  badge: BadgeShowcase,\n  button: ButtonShowcase,\n  buttonGroup: ButtonGroupShowcase,\n  checkbox: CheckboxShowcase,\n  divider: DividerShowcase,\n  header: HeaderShowcase,\n  link: LinkShowcase,\n  menu: MenuShowcase,\n  messageBox: MessageBoxShowcase,\n  progress: ProgressShowcase,\n  radiobox: RadioboxShowcase,\n  radioButton: RadioButtonShowcase,\n  spin: SpinShowcase,\n  tabsMenu: TabsMenuShowcase,\n  text: TextShowcase,\n  textarea: TextareaShowcase,\n  textinput: TextinputShowcase,\n  tooltip: TooltipShowcase,\n  tumbler: TumblerShowcase,\n  userPic: UserPicShowcase,\n  slider: SliderShowcase\n}\n\nexport const Showcase: React.FC<{ includes: string[] }> = ({ includes }) => {\n  return (\n    <div className=\"Showcase\">\n      {includes\n        .filter((componentName) => componentsMap[componentName])\n        .map((componentName) => createElement(componentsMap[componentName]))}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Attach } from '@yandex/ui/Attach/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const AttachShowcase = () => {\n  return (\n    <>\n      <Headline>Attach</Headline>\n      <div className=\"Showcase-Item\">\n        <Attach size=\"l\" view=\"default\">\n          Select file\n        </Attach>\n        <Attach size=\"m\" view=\"default\">\n          Select file\n        </Attach>\n        <Attach size=\"s\" view=\"default\">\n          Select file\n        </Attach>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Button } from '@yandex/ui/Button/Button.bundle/desktop'\nimport { Icon } from '@yandex/ui/Icon/Icon.bundle/desktop'\nimport { Text } from '@yandex/ui/Text/Text.bundle/desktop'\n\nimport { Headline } from '../../Headline'\n\nexport const ButtonShowcase = () => {\n  const view = ['default', 'action', 'pseudo', 'link', 'clear', 'raised']\n\n  return (\n    <>\n      <Headline>Button</Headline>\n      {view.map((view: any) => {\n        return (\n          <>\n            <p>View {view}</p>\n            <div className=\"Showcase-Item\">\n              <Button view={view} size=\"l\">\n                Button\n              </Button>\n              <Button view={view} size=\"m\">\n                Button\n              </Button>\n              <Button view={view} size=\"s\">\n                Button\n              </Button>\n              <Button view={view} size=\"s\" disabled>\n                Button\n              </Button>\n              <Button view={view} size=\"s\" checked>\n                Button\n              </Button>\n              <Button view={view} size=\"s\" progress>\n                Button\n              </Button>\n              <Button\n                view={view}\n                size=\"s\"\n                iconLeft={(className: string) => (\n                  <Icon size=\"s\" type=\"arrow\" direction=\"left\" className={className} />\n                )}\n                iconRight={(className: string) => (\n                  <Icon size=\"s\" type=\"arrow\" direction=\"left\" className={className} />\n                )}\n              >\n                Button\n              </Button>\n              <Button\n                view={view}\n                size=\"s\"\n                icon={(className: string) => (\n                  <Icon size=\"s\" type=\"arrow\" direction=\"left\" className={className} />\n                )}\n              />\n            </div>\n          </>\n        )\n      })}\n      <div className=\"Showcase-Item\" style={{ whiteSpace: 'normal' }}>\n        <Button view=\"default\" size=\"m\">\n          Button\n        </Button>\n        <Text>Любя, съешь щипцы, — вздохнёт мэр, — кайф жгуч.</Text>\n        <Text>\n          Шеф взъярён тчк щипцы с эхом гудбай Жюль. Эй, жлоб! Где туз? Прячь юных съёмщиц в шкаф.\n          Экс-граф? Плюш изъят. Бьём чуждый цен хвощ!\n        </Text>\n        <Button view=\"action\" size=\"m\">\n          Button\n        </Button>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Button } from '@yandex/ui/Button/Button.bundle/desktop'\nimport { ButtonGroup } from '@yandex/ui/ButtonGroup/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const ButtonGroupShowcase = () => {\n  const gaps = [undefined, 's', 'm', 'l', 'xl'] as ('s' | 'm' | 'l' | 'xl')[]\n  const pins = ['circle', 'round'] as ('circle' | 'round')[]\n\n  return (\n    <>\n      <Headline>ButtonGroup</Headline>\n      <div className=\"Showcase-Item\">\n        {gaps.map((gap, index) => (\n          <>\n            {index !== 0 && (\n              <>\n                {' '}\n                <br /> <br />{' '}\n              </>\n            )}\n            <p> Gap: {gap || 'no gap'} </p>\n            <ButtonGroup gap={gap}>\n              <Button view=\"default\" size=\"m\">\n                Button 1\n              </Button>\n              <Button view=\"default\" size=\"m\">\n                Button 2\n              </Button>\n              <Button view=\"default\" size=\"m\">\n                Button 3\n              </Button>\n            </ButtonGroup>\n          </>\n        ))}\n\n        {pins.map((pin) => (\n          <>\n            <br /> <br />\n            <p> Pin: {pin} </p>\n            <ButtonGroup pin={pin}>\n              <Button view=\"default\" size=\"m\">\n                Button 1\n              </Button>\n              <Button view=\"default\" size=\"m\">\n                Button 2\n              </Button>\n            </ButtonGroup>\n          </>\n        ))}\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Checkbox } from '@yandex/ui/Checkbox/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const CheckboxShowcase = () => {\n  return (\n    <>\n      <Headline>Checkbox</Headline>\n      <div className=\"Showcase-Item\">\n        <Checkbox size=\"m\" view=\"default\" label=\"Label\" checked />\n        <Checkbox size=\"m\" view=\"default\" label=\"Label\" />\n        <Checkbox size=\"m\" view=\"default\" label=\"Label\" disabled />\n        <Checkbox size=\"m\" view=\"default\" label=\"Label\" indeterminate />\n        <br />\n        <br />\n        <Checkbox size=\"s\" view=\"default\" label=\"Label\" checked />\n        <Checkbox size=\"s\" view=\"default\" label=\"Label\" />\n        <Checkbox size=\"s\" view=\"default\" label=\"Label\" disabled />\n        <Checkbox size=\"s\" view=\"default\" label=\"Label\" indeterminate />\n        <br />\n        <br />\n        <Checkbox size=\"s\" view=\"outline\" label=\"Label\" checked />\n        <Checkbox size=\"s\" view=\"outline\" label=\"Label\" />\n        <Checkbox size=\"s\" view=\"outline\" label=\"Label\" disabled />\n        <Checkbox size=\"s\" view=\"outline\" label=\"Label\" indeterminate />\n        <br />\n        <br />\n        <Checkbox size=\"m\" view=\"outline\" label=\"Label\" checked />\n        <Checkbox size=\"m\" view=\"outline\" label=\"Label\" />\n        <Checkbox size=\"m\" view=\"outline\" label=\"Label\" disabled />\n        <Checkbox size=\"m\" view=\"outline\" label=\"Label\" indeterminate />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Divider } from '@yandex/ui/Divider'\n\nimport { Headline } from '../../Headline'\n\nexport const DividerShowcase = () => {\n  return (\n    <>\n      <Headline>Divider</Headline>\n      <div className=\"Showcase-Item\">\n        <p>Content</p>\n        <Divider style={{ margin: '8px 0' }}>\n          <p>Section</p>\n        </Divider>\n        <p>Content</p>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Link } from '@yandex/ui/Link/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const LinkShowcase = () => {\n  return (\n    <>\n      <Headline>Link</Headline>\n      <div className=\"Showcase-Item\">\n        <Link href=\"https://ya.ru\" view=\"default\">\n          Ссылка\n        </Link>\n        <br />\n        <Link view=\"default\" pseudo>\n          Ссылка\n        </Link>\n        <br />\n        <Link href=\"https://ya.ru\" view=\"default\" disabled>\n          Ссылка\n        </Link>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Menu } from '@yandex/ui/Menu/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const MenuShowcase = () => {\n  const items = [\n    { value: 'a', content: 'Каждый' },\n    { value: 'b', content: 'Охотник' },\n    {\n      items: [\n        { value: 'c', content: 'Желает', disabled: true },\n        { value: 'd', content: 'Знать' },\n        { value: 'e', content: 'Где' },\n      ],\n    },\n  ]\n\n  const [value, setValue] = useState('a')\n\n  return (\n    <>\n      <Headline>Menu</Headline>\n      <div className=\"Showcase-Item\">\n        <Menu\n          size=\"m\"\n          theme=\"normal\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n        <Menu\n          size=\"s\"\n          theme=\"normal\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n      </div>\n      <div className=\"Showcase-Item\">\n        <Menu\n          size=\"m\"\n          view=\"default\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n        <Menu\n          size=\"s\"\n          view=\"default\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { MessageBox } from '@yandex/ui/MessageBox/desktop/bundle'\nimport { Button } from '@yandex/ui/Button/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const MessageBoxShowcase = () => {\n  return (\n    <>\n      <Headline>MessageBox</Headline>\n      <div className=\"Showcase-Item\">\n        <div style={{ backgroundColor: '#fff', padding: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"default\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"clear\" size=\"s\">\n                  Отклонить\n                </Button>\n                <Button view=\"action\" size=\"s\">\n                  Принять\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n        <div style={{ backgroundColor: '#000', padding: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"inverse\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"clear\" size=\"s\">\n                  Отклонить\n                </Button>\n                <Button view=\"action\" size=\"s\">\n                  Принять\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n        <div style={{ backgroundColor: '#fff', padding: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"promo\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"action\" size=\"s\">\n                  Подробнее\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Progress } from '@yandex/ui/Progress/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const ProgressShowcase = () => {\n  return (\n    <>\n      <Headline>Progres</Headline>\n      <div className=\"Showcase-Item\">\n        <Progress timing=\"linear\" value={50} maxValue={100} />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Radiobox } from '@yandex/ui/Radiobox/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const RadioboxShowcase = () => {\n  const options = [\n    { label: 'Option A', value: 'a' },\n    { label: 'Option B', value: 'b' },\n    { label: 'Option C (disabled)', value: 'c', disabled: true },\n  ]\n\n  return (\n    <>\n      <Headline>Radiobox</Headline>\n      <div className=\"Showcase-Item\">\n        <Radiobox size=\"m\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <Radiobox size=\"s\" view=\"default\" value=\"a\" options={options} />\n      </div>\n      <div className=\"Showcase-Item\">\n        <Radiobox size=\"m\" view=\"outline\" value=\"a\" options={options} />\n        <br />\n        <Radiobox size=\"s\" view=\"outline\" value=\"a\" options={options} />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { RadioButton } from '@yandex/ui/RadioButton/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const RadioButtonShowcase = () => {\n  const options = [\n    { value: 'a', children: 'Option A' },\n    { value: 'b', children: 'Option B' },\n    { value: 'c', children: 'Option C' },\n  ]\n\n  return (\n    <>\n      <Headline>RadioButton</Headline>\n      <div className=\"Showcase-Item\">\n        <RadioButton size=\"l\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <br />\n        <RadioButton size=\"m\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <br />\n        <RadioButton size=\"s\" view=\"default\" value=\"a\" options={options} />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Spin } from '@yandex/ui/Spin/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const SpinShowcase = () => {\n  return (\n    <>\n      <Headline>Spin</Headline>\n      <div className=\"Showcase-Item\">\n        <Spin progress view=\"default\" size=\"l\" />\n        <Spin progress view=\"default\" size=\"m\" />\n        <Spin progress view=\"default\" size=\"s\" />\n        <Spin progress view=\"default\" size=\"xs\" />\n        <Spin progress view=\"default\" size=\"xxs\" />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { TabsMenu } from '@yandex/ui/TabsMenu/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const TabsMenuShowcase = () => {\n  return (\n    <>\n      <Headline>TabsMenu</Headline>\n      <div className=\"Showcase-Item\">\n        <TabsMenu\n          size=\"m\"\n          view=\"default\"\n          layout=\"horiz\"\n          tabs={[\n            { id: 'search', content: 'Поиск' },\n            { id: 'images', content: 'Картинки' },\n            { id: 'video', content: 'Видео' },\n          ]}\n          activeTab={'search'}\n        />\n\n        <br />\n        <TabsMenu\n          size=\"s\"\n          view=\"default\"\n          layout=\"horiz\"\n          tabs={[\n            { id: 'search', content: 'Поиск' },\n            { id: 'images', content: 'Картинки' },\n            { id: 'video', content: 'Видео' },\n          ]}\n          activeTab={'search'}\n        />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Text } from '@yandex/ui/Text/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const TextShowcase = () => {\n  return (\n    <>\n      <Headline>Text</Headline>\n      <div className=\"Showcase-Item\">\n        <Text as=\"div\">\n          Миссия Яндекса — помогать людям решать задачи и достигать своих целей в жизни.\n        </Text>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Textarea } from '@yandex/ui/Textarea/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const TextareaShowcase = () => {\n  const [value1, setValue1] = useState('')\n\n  return (\n    <>\n      <Headline>Textarea</Headline>\n      <div className=\"Showcase-Item\">\n        <Textarea\n          hasClear\n          size=\"m\"\n          view=\"default\"\n          value={value1}\n          onChange={(event) => setValue1(event.target.value)}\n          onClearClick={() => setValue1('')}\n        />\n        <br />\n        <br />\n        <Textarea\n          hasClear\n          size=\"s\"\n          view=\"default\"\n          value={value1}\n          onChange={(event) => setValue1(event.target.value)}\n          onClearClick={() => setValue1('')}\n        />\n        <br />\n        <br />\n        <Textarea\n          hasClear\n          size=\"s\"\n          view=\"default\"\n          value={value1}\n          onChange={(event) => setValue1(event.target.value)}\n          onClearClick={() => setValue1('')}\n          state=\"error\"\n          hint=\"Error message\"\n        />\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Textinput } from '@yandex/ui/Textinput/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const TextinputShowcase = () => {\n  const [value1, setValue1] = useState('')\n  const [value2, setValue2] = useState('')\n  const [value3, setValue3] = useState('')\n  const [value4, setValue4] = useState('')\n  const [value5, setValue5] = useState('')\n  const [value6, setValue6] = useState('')\n\n  return (\n    <>\n      <Headline>Textinput</Headline>\n      <div className=\"Showcase-Item\" style={{ whiteSpace: 'normal' }}>\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"m\"\n            view=\"default\"\n            value={value1}\n            onChange={(event) => setValue1(event.target.value)}\n            onClearClick={() => setValue1('')}\n          />\n        </div>\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"s\"\n            view=\"default\"\n            value={value2}\n            onChange={(event) => setValue2(event.target.value)}\n            onClearClick={() => setValue2('')}\n          />\n        </div>\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"s\"\n            view=\"default\"\n            value={value3}\n            onChange={(event) => setValue3(event.target.value)}\n            onClearClick={() => setValue3('')}\n            state=\"error\"\n            hint=\"Error message\"\n          />\n        </div>\n      </div>\n      <div style={{ padding: 4 }}>\n        <Textinput\n          hasClear\n          size=\"s\"\n          label=\"Label\"\n          view=\"material\"\n          value={value4}\n          onChange={(event) => setValue4(event.target.value)}\n          onClearClick={() => setValue4('')}\n        />\n      </div>\n      <div style={{ padding: 4 }}>\n        <Textinput\n          hasClear\n          label=\"Label\"\n          size=\"m\"\n          view=\"material\"\n          value={value5}\n          onChange={(event) => setValue5(event.target.value)}\n          onClearClick={() => setValue5('')}\n        />\n      </div>\n      <div style={{ padding: 4 }}>\n        <Textinput\n          hasClear\n          label=\"Label\"\n          size=\"m\"\n          view=\"material\"\n          value={value6}\n          onChange={(event) => setValue6(event.target.value)}\n          onClearClick={() => setValue6('')}\n          state=\"error\"\n          hint=\"Error message\"\n        />\n      </div>\n    </>\n  )\n}\n","import React, { useState, useRef } from 'react'\nimport { Tooltip } from '@yandex/ui/Tooltip/desktop/bundle'\nimport { Button } from '@yandex/ui/Button/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const TooltipShowcase = () => {\n  const [visible1, setVisible1] = useState(true)\n  const [visible2, setVisible2] = useState(true)\n  const [visible3, setVisible3] = useState(true)\n  const [visible4, setVisible4] = useState(true)\n  const [visible5, setVisible5] = useState(true)\n  const [visible6, setVisible6] = useState(true)\n  const anchorRef1 = useRef<HTMLDivElement>(null)\n  const anchorRef2 = useRef<HTMLDivElement>(null)\n  const anchorRef3 = useRef<HTMLDivElement>(null)\n  const anchorRef4 = useRef<HTMLDivElement>(null)\n  const anchorRef5 = useRef<HTMLDivElement>(null)\n  const anchorRef6 = useRef<HTMLDivElement>(null)\n  const scopeRef = useRef<HTMLDivElement>(null)\n\n  return (\n    <>\n      <Headline>Tooltip</Headline>\n      <div className=\"Showcase-Item\">\n        <div style={{ position: 'relative', display: 'flex', height: 96 }} ref={scopeRef}>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef1}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible1(!visible1)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef2}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible2(!visible2)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef3}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible3(!visible3)}\n            >\n              Target\n            </Button>\n          </div>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"s\"\n            anchor={anchorRef1}\n            scope={scopeRef}\n            visible={visible1}\n          >\n            Size small\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"m\"\n            anchor={anchorRef2}\n            scope={scopeRef}\n            visible={visible2}\n          >\n            Size medium\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"l\"\n            anchor={anchorRef3}\n            scope={scopeRef}\n            visible={visible3}\n          >\n            Size large\n          </Tooltip>\n        </div>\n      </div>\n      <div className=\"Showcase-Item\">\n        <div style={{ position: 'relative', display: 'flex', height: 96 }} ref={scopeRef}>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef4}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible4(!visible4)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef5}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible5(!visible5)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginLeft: 32, marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef6}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible6(!visible6)}\n            >\n              Target\n            </Button>\n          </div>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"s\"\n            state=\"warning\"\n            anchor={anchorRef4}\n            scope={scopeRef}\n            visible={visible4}\n          >\n            Size small\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"m\"\n            state=\"success\"\n            anchor={anchorRef5}\n            scope={scopeRef}\n            visible={visible5}\n          >\n            Size medium\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"l\"\n            state=\"alert\"\n            anchor={anchorRef6}\n            scope={scopeRef}\n            visible={visible6}\n          >\n            Size large\n          </Tooltip>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Tumbler } from '@yandex/ui/Tumbler/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const TumblerShowcase = () => {\n  const [checked1, setChecked1] = useState(true)\n  const [checked2, setChecked2] = useState(false)\n\n  return (\n    <>\n      <Headline>Tumbler</Headline>\n      <div className=\"Showcase-Item\">\n        <>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"m\"\n              view=\"default\"\n              checked={checked1}\n              onChange={() => setChecked1(!checked1)}\n              labelBefore=\"labelBefore\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"m\"\n              view=\"default\"\n              checked\n              disabled\n              onChange={() => {}}\n              labelAfter=\"disabled check\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"s\"\n              view=\"default\"\n              checked={checked2}\n              onChange={() => setChecked2(!checked2)}\n              labelAfter=\"labelAfter\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"l\"\n              view=\"default\"\n              checked={false}\n              disabled\n              onChange={() => {}}\n              labelBefore={\n                <svg\n                  aria-label=\"labelBefore\"\n                  width=\"16\"\n                  height=\"16\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M3.5 7.003a1.5 1.5 0 0 0-1.5 1.5v6a1.5 1.5 0 0 0 1.5 1.5h9a1.5 1.5 0 0 0 1.5-1.5v-6a1.5 1.5 0 0 0-1.5-1.5H12v-2a4 4 0 0 0-8 0v2h-.5zm2.5-2a2 2 0 1 1 4 0V7H6V5.003z\"\n                    fill=\"currentColor\"\n                  />\n                </svg>\n              }\n              labelAfter=\"disabled\"\n            />\n          </div>\n        </>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { UserPic } from '@yandex/ui/UserPic/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const UserPicShowcase = () => {\n  return (\n    <>\n      <Headline>UserPic</Headline>\n      <div className=\"Showcase-Item\">\n        <>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic plus avatarId=\"43978/351415393-30646433\" size=\"m\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic avatarId=\"0/0-0\" hasCamera size=\"m\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic plus avatarId=\"0/0-0\" hasCamera size=\"s\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic\n              lodpiUrl=\"https://jing.yandex-team.ru/files/kri0-gen/halp_orange.jpg\"\n              size=\"s\"\n            />\n          </div>\n        </>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Slider, useSliderState } from '@yandex/ui/Slider/desktop/bundle'\n\nimport { Headline } from '../../Headline'\n\nexport const SliderShowcase = () => {\n  const state1 = useSliderState({ value: [20] })\n  const state2 = useSliderState({ value: [20, 50] })\n\n  const state3 = useSliderState({ value: [20] })\n  const state4 = useSliderState({ value: [20, 50] })\n\n  const state5 = useSliderState({ value: [20] })\n  const state6 = useSliderState({ value: [20, 50] })\n\n  const state7 = useSliderState({ value: [20] })\n  const state8 = useSliderState({ value: [20, 50] })\n\n  const state9 = useSliderState({ value: [20] })\n  const state10 = useSliderState({ value: [20, 50] })\n\n  return (\n    <>\n      <Headline>Slider</Headline>\n      <Slider view=\"default\" {...state1} />\n      <Slider view=\"default\" {...state2} />\n      <Slider filled view=\"default\" {...state3} />\n      <Slider filled view=\"default\" {...state4} />\n      <Slider reverse filled view=\"default\" {...state5} />\n      <Slider reverse filled view=\"default\" {...state6} />\n      <Slider filled step={25} view=\"default\" {...state7} />\n      <Slider filled step={25} view=\"default\" {...state8} />\n      <Slider filled step={20} showTicks showTickValues view=\"default\" {...state9} />\n      <Slider filled showTicks showTickValues step={20} view=\"default\" {...state10} />\n    </>\n  )\n}\n","export function toDeepToken(path: string[], prop: any): any {\n  const chunks = [...path].reverse()\n  let result: any = prop\n  for (let chunk of chunks) {\n    result = { [chunk]: result }\n  }\n  return result\n}\n","import { combine } from 'effector'\nimport deepmerge from 'deepmerge'\nimport YAML from 'yaml'\n\nimport { $designTokens } from '../../../model/tokens'\nimport { $theme } from '../../../model/themes'\nimport { $tokenMappings } from '../../../model/mappings'\nimport { $cssVariables } from '../../../model/cssVariables'\nimport { toDeepToken } from '../../../utils/toDeepToken'\nimport { transformMappings } from '../../../utils/transformers'\nimport { extractParams } from '../../../utils/resolveTokens'\nimport { ParamsType } from '../../../types'\n\nexport const $cssText = combine({ cssVariables: $cssVariables }, ({ cssVariables }) => {\n  const cssText = Object.keys(cssVariables).reduce(\n    (acc: string, v: string) =>\n      //@ts-ignore\n      `${acc}  ${v}: ${cssVariables[v]};\\n`,\n    '',\n  )\n  return `:root {\\n${cssText}}`\n})\n\nexport const $yamlText = combine(\n  { designTokens: $designTokens, mappings: $tokenMappings, theme: $theme },\n  ({ designTokens, mappings, theme: { allTokens } }) => {\n    const params: ParamsType[] = []\n    const seen = new Set<string>()\n    const addedTokens = new Set<string>()\n\n    const yml = Object.entries(designTokens).reduce(\n      (acc, [name, { changed, path, value, rawValue }]: any) => {\n        addedTokens.add(name)\n\n        if (rawValue) {\n          acc.push(toDeepToken(path, { value: rawValue }))\n          return acc\n        }\n\n        if (changed) {\n          const mappedValue = transformMappings(value.toString(), mappings)\n          acc.push(toDeepToken(path, { value: mappedValue }))\n\n          const paramsToAdd = (extractParams(value) || []).filter(({ token }) => {\n            const hasSeen = seen.has(token)\n            seen.add(token)\n            return !hasSeen\n          })\n          params.push(...paramsToAdd)\n        }\n        return acc\n      },\n      [] as any,\n    )\n\n    params\n      .filter(({ token }) => !addedTokens.has(token))\n      .forEach(({ token }) => {\n        if (allTokens[token]) {\n          const { path, value } = allTokens[token]\n          yml.push(toDeepToken(path, { value }))\n        }\n      })\n\n    const deepmergedYml = deepmerge.all(yml)\n    return YAML.stringify(deepmergedYml)\n  },\n)\n","import React, { FC, useState } from 'react'\nimport { useStore } from 'effector-react'\nimport { cnTheme } from '@yandex/ui/Theme'\n\nimport { TabsMenu } from '@yandex/ui/TabsMenu/TabsMenu.bundle/desktop'\nimport { Tumbler } from '@yandex/ui/Tumbler/Tumbler.bundle/desktop'\n\nimport { Showcase } from '../../Showcase'\nimport { metricaGoal } from '../../YaMetrika'\n\nimport { $cssVariables } from '../../../model/cssVariables'\nimport { $cssText, $yamlText } from './model'\n\nconst JSX = 'JSX'\nconst YAML = 'YAML'\nconst CSS = 'CSS'\n\nconst tabsNames = [JSX, YAML, CSS]\n\nexport const SandboxExample: FC<any> = ({ includes, theme }) => {\n  const [activeTab, setActiveTab] = useState(JSX)\n\n  const cssVariables: Record<string, string> = useStore($cssVariables)\n  const cssText = useStore($cssText)\n  const yamlText = useStore($yamlText)\n  const [shownDiff, setDiff] = useState(true)\n\n  const handleTabChange = (tab: string) => {\n    setActiveTab(tab)\n    metricaGoal(tab)\n  }\n\n  const handleDiffChange = () => {\n    setDiff((prev) => !prev)\n    metricaGoal('show-hide-changes')\n  }\n\n  const tabs = tabsNames.map((tab) => ({\n    id: tab,\n    onClick: () => {\n      handleTabChange(tab)\n    },\n    content: tab,\n  }))\n\n  return (\n    <div className=\"Sandbox-Examples\">\n      <div>\n        <div className=\"Sandbox-Showcase\">\n          <div className=\"Sandbox-Content\">\n            <div className=\"Sandbox-Tabs\">\n              <TabsMenu size=\"m\" view=\"default\" layout=\"horiz\" activeTab={activeTab} tabs={tabs} />\n              <div className=\"Tumbler-Wrapper\">\n                <Tumbler\n                  size=\"m\"\n                  view=\"default\"\n                  checked={shownDiff}\n                  onChange={handleDiffChange}\n                  labelAfter={'Показать изменения'}\n                />\n              </div>\n            </div>\n            <div\n              className={cnTheme(theme, ['Sandbox-ContentWrapper'])}\n              style={shownDiff ? cssVariables : {}}\n            >\n              {activeTab === JSX && <Showcase includes={includes} />}\n              {activeTab === CSS && (\n                <div className=\"Sandbox-ContentWrapper-YML\">\n                  <pre>\n                    <code>{cssText}</code>\n                  </pre>\n                </div>\n              )}\n              {activeTab === YAML && (\n                <div className=\"Sandbox-ContentWrapper-YML\">\n                  <pre>\n                    <code>{yamlText}</code>\n                  </pre>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { MappingsType } from '../types'\n\nexport const themeboxConfig = {\n  output: {\n    css: {\n      transforms: ['name/cti/kebab', 'json/extended/mapper'],\n      buildPath: './themes',\n      files: [\n        {\n          destination: 'tokens.json',\n          format: 'json/extended',\n        },\n      ],\n      actions: ['process-color'],\n    },\n  },\n}\n\nexport const downloadTheme = async (content: any, mappings: MappingsType) => {\n  const body = JSON.stringify({\n    config: themeboxConfig,\n    tokens: {\n      language: 'yaml',\n      content: content,\n    },\n    mappings,\n  })\n\n  const response = await fetch('https://themebox.now.sh', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body,\n  })\n\n  const json = await response.json()\n\n  if (!response.ok) {\n    throw new Error(json.error)\n  }\n\n  const res = JSON.parse(json.data[0].content)\n  const tokens = Object.entries(res).map(([_, item]: any) => ({\n    path: item.path,\n    name: item.name,\n    value: item.value,\n    rawValue: item.rawValue,\n    changed: true,\n  }))\n\n  return tokens\n}\n","import { attach, createStore, createEffect, createEvent, forward } from 'effector'\nimport { toast } from 'react-toastify'\n\nimport { $theme } from '../../../model/themes'\nimport { variablesChangedBatchEvent } from '../../../model/tokens'\nimport { downloadTheme } from '../../../api/downloadTheme'\nimport { ThemeType } from '../../../types'\n\ntype UploadRawTokensFxPropsType = {\n  theme: ThemeType\n  tokens: string\n}\n\nexport const uploadRawTokensEvent = createEvent()\n\nexport const $tokensText = createStore<string>(`button:\n  viewAction:\n    fillColor:\n      base:\n        value: \"#C728B3\"\n      progress:\n        base:\n          value: \"#C728B3\"\n        process:\n          value: \"#de1258\"\n  viewDefault:\n    fillColor:\n      base:\n        value: \"#ecb6ea\"\n`)\n\nexport const uploadRawTokensFx = attach({\n  source: {\n    theme: $theme,\n    tokens: $tokensText,\n  },\n  mapParams: (_, { theme, tokens }) =>\n    ({\n      theme,\n      tokens,\n    } as UploadRawTokensFxPropsType),\n  effect: createEffect(({ tokens, theme: { mappings } }: UploadRawTokensFxPropsType) => {\n    return downloadTheme(tokens, mappings)\n  }),\n})\n\nexport const $uploadRawTokensLoading = uploadRawTokensFx.pending\n\nexport const updateTokensEvent = createEvent<string>()\n\n$tokensText.on(updateTokensEvent, (_, payload) => payload)\n\nuploadRawTokensFx.doneData.watch((tokens) => {\n  variablesChangedBatchEvent(tokens)\n  toast.success('Токены успешно загружены')\n})\n\nuploadRawTokensFx.failData.watch((error) => toast.error(error.message, { autoClose: 5000 }))\n\nforward({\n  from: uploadRawTokensEvent,\n  to: uploadRawTokensFx,\n})\n","import React, { FC, ChangeEvent } from 'react'\nimport { useStore } from 'effector-react'\nimport { cn } from '@bem-react/classname'\n\nimport { TextareaWithAutoResize } from '@yandex/ui/Textarea/desktop/bundle'\nimport { Button } from '@yandex/ui/Button/Button.bundle/desktop'\nimport { Spacer } from '@yandex/ui/Spacer/desktop'\n\nimport {\n  uploadRawTokensEvent,\n  $uploadRawTokensLoading,\n  $tokensText,\n  updateTokensEvent,\n} from './model'\n\nexport const cnCustomThemeDownloader = cn('CustomThemeDownloader')\n\nexport const CustomThemeDownloader: FC = () => {\n  const progress = useStore($uploadRawTokensLoading)\n  const tokens = useStore($tokensText)\n\n  const handleClick = () => uploadRawTokensEvent()\n  const handleChange = (event: ChangeEvent<HTMLTextAreaElement>) =>\n    updateTokensEvent(event.target.value)\n\n  return (\n    <form className={cnCustomThemeDownloader()}>\n      Токены:\n      <Spacer all={10} />\n      <TextareaWithAutoResize view=\"default\" size=\"m\" value={tokens} onChange={handleChange} />\n      <Spacer all={10} />\n      <Button view=\"action\" size=\"m\" progress={progress} onClick={handleClick}>\n        Загрузить\n      </Button>\n    </form>\n  )\n}\n","import React, { useState } from 'react'\nimport { Select } from '@yandex/ui/Select/Select.bundle/desktop'\nimport { Textinput } from '@yandex/ui/Textinput/Textinput.bundle/desktop'\nimport { TabsMenu } from '@yandex/ui/TabsMenu/TabsMenu.bundle/desktop'\nimport { TabsPanes } from '@yandex/ui/TabsPanes/TabsPanes.bundle/desktop'\nimport { useStore } from 'effector-react'\n\nimport { TextinputField } from '../TextinputField'\nimport { metricaGoal } from '../YaMetrika'\n\nimport { SandboxExample } from './SandboxExample'\nimport { CustomThemeDownloader } from './CustomThemeDownloader'\nimport { $designTokens } from '../../model/tokens'\nimport { $invertedTokenMappings } from '../../model/mappings'\nimport { $cssVariables, $resolvedTokens } from '../../model/cssVariables'\nimport { $theme } from '../../model/themes'\nimport { transformMappings } from '../../utils/transformers'\n\nimport './Sandbox.css'\n\ntype SandboxProps = {}\n\nexport const Sandbox: React.FC<SandboxProps> = (props) => {\n  const {\n    preset,\n    tokens: { globals, components },\n  } = useStore($theme)\n  const designTokens = useStore($designTokens)\n  const invertedTokenMappings = useStore($invertedTokenMappings)\n\n  const cssVariables = useStore($cssVariables)\n  const resolvedTokens = useStore($resolvedTokens)\n  const tabs = ['globals', ...Object.keys(components)]\n  const [activeTab, setActiveTab] = useState('globals')\n  const [activeTab1, setActiveTab1] = useState('tokens')\n  const values = activeTab === 'globals' ? globals : components[activeTab]\n  const [filter, setFilter] = useState('')\n\n  const tokensTab = (\n    <>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-beetwen',\n          marginRight: 20,\n          marginBottom: 20,\n        }}\n      >\n        <Select\n          style={{ width: 150, marginRight: 20 }}\n          size=\"m\"\n          view=\"default\"\n          onChange={(event) => {\n            setActiveTab(event.target.value)\n            metricaGoal('select')\n          }}\n          value={activeTab}\n          options={tabs.map((tab) => ({ value: tab, content: tab }))}\n        />\n        <Textinput\n          debounceTimeout={500}\n          hasClear\n          onChange={(event) => {\n            setFilter(event.target.value)\n            metricaGoal('search')\n          }}\n          view=\"default\"\n          size=\"m\"\n          placeholder=\"Поиск по токенам\"\n          value={filter}\n        />\n      </div>\n      {Object.entries(values)\n        .filter(([groupName]) => groupName.includes(filter))\n        .map(([groupName, groupTokens]: any, index) => (\n          <TextinputField\n            key={index}\n            label={groupName}\n            defaultValue={groupTokens.value}\n            customTokens={(designTokens[groupName] || {}).value}\n            rawValue={transformMappings(\n              (designTokens[groupName] || {}).rawValue || '',\n              invertedTokenMappings,\n              true,\n            )}\n            path={groupTokens.path}\n            description={groupTokens.description}\n          />\n        ))}\n    </>\n  )\n\n  return (\n    <div className=\"Sandbox\">\n      <SandboxExample\n        theme={preset}\n        includes={activeTab === 'globals' ? Object.keys(components) : [activeTab]}\n      />\n      <div className=\"Sandbox-Tokens\">\n        <div className=\"Sandbox-Tokens-Tabs\">\n          <TabsMenu\n            view=\"default\"\n            layout=\"horiz\"\n            size=\"m\"\n            activeTab={activeTab1}\n            tabs={[\n              { id: 'custom', onClick: () => setActiveTab1('custom'), content: 'Загрузить тему' },\n              { id: 'tokens', onClick: () => setActiveTab1('tokens'), content: 'Токены' },\n            ]}\n          />\n        </div>\n        <TabsPanes\n          activePane={activeTab1}\n          panes={[\n            { id: 'custom', content: <CustomThemeDownloader /> },\n            { id: 'tokens', content: tokensTab },\n          ]}\n        />\n      </div>\n    </div>\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useGate } from 'effector-react'\nimport { configureRootTheme } from '@yandex/ui/Theme'\nimport { theme } from '@yandex/ui/Theme/presets/default'\n\nimport { ToastContainer, Slide } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.min.css'\n\nimport { Header } from './components/Header'\nimport { Sandbox } from './components/Sandbox'\n\nimport { variablesInitializationGate } from './model/tokens'\n\nimport './App.css'\n\nconfigureRootTheme({ theme })\n\nexport default () => {\n  useGate(variablesInitializationGate)\n\n  useEffect(() => {\n    window.onbeforeunload = (e: BeforeUnloadEvent) => {\n      e.preventDefault()\n      return ''\n    }\n  }, [])\n\n  return (\n    <div className=\"Site\">\n      <Header />\n      <div className=\"Content\">\n        <Sandbox />\n      </div>\n      <ToastContainer transition={Slide} autoClose={2000} position=\"bottom-right\" />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}