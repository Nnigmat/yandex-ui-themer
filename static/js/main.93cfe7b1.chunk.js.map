{"version":3,"sources":["lib/lego/Tooltip/index.ts","lib/lego/TabsMenu/_view/TabsMenu_view_figma.ts","lib/lego/TabsMenu/TabsMenu.tsx","lib/lego/Modal/_view/Modal_view_figma.ts","lib/lego/Modal/Modal.tsx","model/combine.ts","api/downloadTokens.ts","utils/queryParameters.ts","model/themes.ts","model/query.ts","utils/constants.ts","utils/extractParams.ts","utils/transformers.ts","model/mappings.ts","model/designTokens.ts","icons/BackIcon.tsx","icons/CloseEyeIcon.tsx","icons/UnionIcon.tsx","icons/TipIcon.tsx","icons/TrashIcon.tsx","icons/OpenEyeIcon.tsx","icons/SunIcon.tsx","components/Header/Controls/Controls.tsx","components/Header/Header.tsx","lib/lego/Divider/index.tsx","components/Panel/Panel.tsx","pages/componentsPage/components/Panels/constants.ts","pages/componentsPage/components/Panels/Panels.tsx","components/Textinput/TextinputBase.tsx","components/Textinput/Textinput.tsx","pages/componentsPage/components/Playground/Settings.tsx","utils/color.ts","utils/tokenType.ts","components/YaMetrika/YaMetrika.ts","pages/componentsPage/components/Playground/TextinputField/ColorPicker/ColorPicker.tsx","pages/componentsPage/components/Playground/TextinputField/TextinputPrevious/TextinputPrevious.tsx","api/downloadTheme.ts","utils/toDeepToken.ts","model/yaml.ts","model/resolvedTokens.ts","pages/componentsPage/model.ts","pages/componentsPage/components/Playground/TextinputField/TextinputField.tsx","pages/componentsPage/components/Playground/Tokens.tsx","pages/componentsPage/components/Playground/Code.tsx","pages/componentsPage/components/Playground/Playground.tsx","pages/componentsPage/components/TokenEditor/TokenEditor.tsx","model/css.ts","model/dark.ts","model/view.ts","pages/componentsPage/components/Showcase/Showcases/Overview/Headline/Headline.tsx","hooks/dragToFigma.ts","utils/figma.ts","utils/allComponents.ts","pages/componentsPage/components/ComponentWrapper/ComponentWrapper.tsx","utils/getWrappedComponent.ts","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/AttachShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/BadgeShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/ButtonGroupShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/ButtonShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/CheckboxShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/DividerShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/HeaderShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/LinkShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/MenuShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/MessageBoxShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/ProgressShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/RadioboxShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/RadioButtonShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/SliderShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/SpinShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/TabsMenuShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/TextareaShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/TextinputShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/TextShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/TooltipShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/TumblerShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Showcases/UserPicShowcase.tsx","pages/componentsPage/components/Showcase/Showcases/Overview/Overview.tsx","pages/componentsPage/components/Showcase/Showcases/index.ts","components/IconButton/IconButtonBase.tsx","components/IconButton/buttons/EyeIconButton.tsx","components/IconButton/buttons/SunIconButton.tsx","pages/componentsPage/components/Showcase/Showcase.tsx","pages/componentsPage/ComponentsPage.tsx","model/tokensText.ts","api/uploadTokens.ts","model/share-tokens.ts","pages/changesPage/Tokens/Tokens.tsx","pages/changesPage/ChangesPage.tsx","App.tsx","index.tsx","lib/lego/Tooltip/Tooltip.tsx","lib/lego/Tooltip/_view/Tooltip_view_figma.ts","lib/lego/Tooltip/_dark/Tooltip_dark.ts","../node_modules/@yandex/themekit/lib/vendors/style-dictionary/lib/utils sync"],"names":["withViewFigma","withBemMod","view","TabsMenu","compose","withLayoutHoriz","withAdaptive","composeU","withSizeM","withSizeS","TabsMenuCommon","defaultProps","layout","size","Modal","withThemeNormal","ModalDesktop","isCombineChange","createEvent","isCombineReset","$isCombine","createStore","on","state","reset","downloadTokens","tokensHash","a","fetch","method","body","JSON","stringify","response","json","ok","Error","errorMessage","parse","getLocation","window","location","href","replace","search","getQueryParameter","name","URLSearchParams","get","themeToAllTokens","theme","globals","Object","values","components","reduce","acc","val","themeChange","$themes","default","tokens","stylesDataDefault","mappings","mappingsDataDefault","preset","themeDefault","allTokens","inverse","stylesDataInverse","mappingsDataInverse","themeInverse","brand","stylesDataBrand","mappingsDataBrand","themeBrand","$theme","map","themes","keys","getState","$themeName","_","themeName","tokensQueryParameterUpdate","value","queryParams","set","history","pushState","toString","setQueryParameter","delete","query","deleteQueryParameter","PARAM_DASH_RE","PARAM_DOT_RE","BRACES_REMOVAL_RE","extractParams","template","params","String","match","el","token","transformMappings","inverted","$tokenMappings","entries","path","mappedName","join","$invertedTokenMappings","variablesChange","variablesChangeBatch","variablesReset","isVariablesChangedReset","$designTokens","$hasTokens","length","$listDesignTokens","$dotSepDesignTokens","combine","designTokens","$isVariablesChanged","variablesInitializationGate","createGate","initializeVariables","createEffect","toast","success","error","ret","forEach","v","watch","forward","from","open","to","console","log","BackIcon","props","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","fillOpacity","CloseEyeIcon","type","UnionIcon","className","TipIcon","TrashIcon","OpenEyeIcon","SunIcon","Controls","scopeRef","useRef","useState","visible","setVisible","isCombine","useStore","changesPresent","handleClose","ref","onClick","scope","onClose","color","onPress","destructive","cnHeader","cn","Header","activeTab","setActiveTab","showChangesNotification","tabs","id","content","notify","Divider","cnPanel","Panel","children","active","panelsTree","controls","navigation","progress","surface","cnPanels","defaultSections","Array","includes","component","toLowerCase","Panels","activePanel","panels","onPanelSelect","setSearch","sections","setSections","onChange","e","target","renderIcon","placeholder","key","index","section","some","label","checked","prev","i","handleSectionChange","filter","cnTextinput","TextinputBase","tip","has_tip","Boolean","Tooltip","Textinput","Component","options","Select","Switch","Input","Settings","isColor","toHEXA","hex","_color","extract","slice","split","Number","trim","a1","a2","a3","alpha","r","g","b","rgbToHex","h","s","l","Math","min","f","n","k","max","round","padStart","hslToHex","fullForm","parseInt","toUpperCase","getType","hasParams","metricaGoal","goal","ym","ColorPicker","onColorChange","forceVisible","shape","anchorRef","handleClick","useCallback","handleColorChange","event","useEffect","style","background","direction","anchor","onChangeComplete","cnTextinputPrevious","TextinputPrevious","themeboxConfig","output","css","transforms","buildPath","files","destination","format","actions","downloadTheme","build","mapper","whitepaper","entry","platform","properties","parseContent","res","dictionary","allProperties","item","rawValue","original","changed","toDeepToken","prop","chunks","reverse","result","chunk","$yamlText","yml","push","deepmergedYml","deepmerge","all","YAML","$resolvedTokens","resolvedTokensUpdate","resolveTokensFx","resolveTokensAttach","attach","effect","source","mapParams","componentChange","tokenChange","tokenReset","activeTabChange","$component","$token","$tokenPresent","$activeTab","DebouncedInput","withDebounceInput","TextinputField","defaultValue","description","customTokens","useHover","disabled","isHovered","hoverProps","pickerVisible","setPickerVisible","setValue","isColorValue","colorValue","isChanged","handleClearClick","rgb","hsl","convertColorObj","handleChange","handleLink","has_color","type_link","type_color","type_text","debounceTimeout","forceNotifyByEnter","forceNotifyOnBlur","data-testid","Tokens","invertedTokenMappings","groupName","groupTokens","Code","cnPlayground","Playground","handleCombineChange","stopPropagation","cnTokenEditor","TokenEditor","readOnly","$cssVariables","$cssText","variables","cssText","darkToggle","$dark","viewChange","$view","$isFigma","initializeView","isFigma","viewInitializationGate","payload","Headline","dark","useDragToFigma","elementRef","dragRef","offsetX","offsetY","iframeX","iframeY","current","dragElem","dragStartHandler","dataTransfer","effectAllowed","setData","currentTarget","innerHTML","dropEffect","screenX","clientX","screenY","clientY","dragEndHandler","windowSize","outerWidth","outerHeight","dropPosition","screenLeft","screenTop","elem","position","htmlToFigma","parent","postMessage","pluginMessage","figmaId","data","layers","sendToFigma","offset","x","y","addEventListener","removeEventListener","allComponents","Attach","Badge","Button","ButtonGroup","Checkbox","Drawer","Icon","Image","Link","ListTile","Menu","MessageBox","Popup","Progress","Radiobox","RadioButton","Slider","Spacer","Spin","TabsPanes","Text","Textarea","Tumbler","UserPic","cnComponentWrapper","ComponentWrapper","React","forwardRef","__name","componentProps","draggable","createElement","getWrappedComponent","IconTwo","SearchButton","withViewSearchArrowButton","ButtonBase","SearchInput","withHasClear","withViewSearchArrowTextinput","componentsMap","badge","display","justifyContent","outlineColor","marginLeft","button","marginBottom","flexDirection","alignItems","flexBasis","marginRight","buttonGroup","gaps","undefined","gap","pin","checkbox","indeterminate","divider","margin","header","action","hasClear","link","pseudo","menu","items","messageBox","timing","maxValue","radiobox","radioButton","spin","tabsMenu","text","as","whiteSpace","textarea","value1","setValue1","onClearClick","hint","textinput","value2","setValue2","value3","setValue3","value4","setValue4","value5","setValue5","value6","setValue6","padding","tooltip","visible1","setVisible1","visible2","setVisible2","visible3","setVisible3","visible4","setVisible4","visible5","setVisible5","visible6","setVisible6","anchorRef1","anchorRef2","anchorRef3","anchorRef4","anchorRef5","anchorRef6","innerRef","hasTail","tumbler","checked1","setChecked1","checked2","setChecked2","labelBefore","labelAfter","aria-label","userPic","plus","avatarId","hasCamera","lodpiUrl","slider","state1","useSliderState","state2","state3","state4","state5","state6","state7","state8","state9","state10","filled","step","showTicks","showTickValues","Showcases","overview","componentName","cnIconButtonBase","IconButtonBase","buttonProps","useButton","EyeIconButton","close","SunIconButton","Showcase","showDiff","setShowDiff","cssVariables","handleSunIconClick","cnTheme","cnComponentsPage","ComponentsPage","showTokenEditor","panel","rawTokensUpload","$tokensText","uploadRawTokensFx","tokensUpdate","pending","doneData","failData","message","autoClose","uploadTokens","tokensShare","shareTokens","$shareTokensDisabled","hasTokens","copy","setFormat","tokensText","shareDisabled","ChangesPage","configureRootTheme","Fade","cssTransition","enter","exit","useGate","activePane","panes","transition","closeButton","limit","hideProgressBar","ReactDOM","render","StrictMode","document","getElementById","enhance","withDark","TooltipDesktop","TooltipStateful","TooltipStatefulDesktop","webpackEmptyContext","req","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.93cfe7b1.chunk.js","sourcesContent":["export * from './Tooltip'\n","import { withBemMod } from '@bem-react/core'\n\nimport './TabsMenu_view_figma.css'\n\nexport type TabsMenuViewFigmaProps = {\n  /**\n   * Стилевое оформление тултипа.\n   */\n  view?: 'figma'\n}\n\n/**\n * Модификатор, отвечающий за внешний вид тултипа.\n * @param {TabsMenuViewFigmaProps} props\n */\nexport const withViewFigma = withBemMod<TabsMenuViewFigmaProps>('TabsMenu', {\n  view: 'figma',\n})\n","import { compose, composeU } from '@bem-react/core'\n\n// base\nimport { TabsMenu as TabsMenuCommon } from '@yandex/ui/TabsMenu'\n// _layout\nimport { withLayoutHoriz } from '@yandex/ui/TabsMenu/_layout/TabsMenu_layout_horiz'\n// _size\nimport { withSizeM } from '@yandex/ui/TabsMenu/_size/TabsMenu_size_m'\nimport { withSizeS } from '@yandex/ui/TabsMenu/_size/TabsMenu_size_s'\n// _view\nimport { withViewFigma } from './_view/TabsMenu_view_figma'\n// _adaptive\nimport { withAdaptive } from '@yandex/ui/TabsMenu/_adaptive/TabsMenu_adaptive@desktop'\n\nexport * from '@yandex/ui/TabsMenu/desktop/bundle'\n\nexport const TabsMenu = compose(\n  withLayoutHoriz,\n  withViewFigma,\n  withAdaptive,\n  composeU(withSizeM, withSizeS),\n)(TabsMenuCommon)\n\nTabsMenu.defaultProps = {\n  view: 'figma',\n  layout: 'horiz',\n  size: 'm',\n}\n","import { withBemMod } from '@bem-react/core'\n\nimport './Modal_view_figma.css'\n\nexport type ModalViewFigmaProps = {\n  /**\n   * Стилевое оформление тултипа.\n   */\n  view?: 'figma'\n}\n\n/**\n * Модификатор, отвечающий за внешний вид модала.\n * @param {ModalViewFigmaProps} props\n */\nexport const withViewFigma = withBemMod<ModalViewFigmaProps>('Modal', {\n  view: 'figma',\n})\n","import { compose } from '@bem-react/core'\n\n// base\nimport { Modal as ModalDesktop, withThemeNormal } from '@yandex/ui/Modal'\n// _view\nimport { withViewFigma } from './_view/Modal_view_figma'\n// _view\n\nexport * from '../Modal'\n\nexport const Modal = compose(withViewFigma, withThemeNormal)(ModalDesktop)\n\nModal.defaultProps = {\n  view: 'figma',\n}\n","import { createEvent, createStore } from 'effector'\n\nexport const isCombineChange = createEvent()\nexport const isCombineReset = createEvent()\n\nexport const $isCombine = createStore(false)\n\n$isCombine.on(isCombineChange, (state) => !state).reset(isCombineReset)\n","import { VariablesType } from '../types'\n\nexport const downloadTokens = async (tokensHash: string | null) => {\n  if (!tokensHash) {\n    return\n  }\n\n  const response = await fetch('https://functions.yandexcloud.net/d4eg1ughq5da8rgfonij', {\n    method: 'POST',\n    body: JSON.stringify({\n      tokensHash,\n    }),\n  })\n\n  const json = await response.json()\n\n  if (!response.ok) {\n    throw new Error(json.errorMessage)\n  }\n\n  return JSON.parse(json) as { tokens: VariablesType[]; theme: string }\n}\n","const getLocation = () => window.location.href.replace(window.location.search, '')\n\nexport const getQueryParameter = (name: string) => {\n  return new URLSearchParams(window.location.search).get(name)\n}\n\nexport const setQueryParameter = (name: string, value: string) => {\n  const queryParams = new URLSearchParams(window.location.search)\n  queryParams.set(name, value)\n\n  window.history.pushState({}, '', `${getLocation()}?${queryParams.toString()}`)\n}\n\nexport const deleteQueryParameter = (name: string) => {\n  const queryParams = new URLSearchParams(window.location.search)\n  queryParams.delete(name)\n\n  const query = queryParams.toString() ? `?${queryParams.toString()}` : ''\n\n  window.history.pushState({}, '', getLocation() + query)\n}\n","import { createStore, createEvent } from 'effector'\n\nimport { theme as themeDefault } from '@yandex/ui/Theme/presets/default'\nimport { theme as themeInverse } from '@yandex/ui/Theme/presets/inverse'\nimport { theme as themeBrand } from '@yandex/ui/Theme/presets/brand'\n\nimport stylesDataDefault from '../themes/presets/example/root.json'\nimport stylesDataInverse from '../themes/presets/example-inverse/root.json'\nimport stylesDataBrand from '../themes/presets/example-brand/root.json'\n\nimport mappingsDataDefault from '../themes/presets/example/mappings.json'\nimport mappingsDataInverse from '../themes/presets/example-inverse/mappings.json'\nimport mappingsDataBrand from '../themes/presets/example-brand/mappings.json'\n\nimport { ThemeType, ThemeNamesType, TokensType } from '../types'\n\nconst themeToAllTokens = (theme: TokensType) => ({\n  ...theme.globals,\n  ...Object.values(theme.components).reduce((acc, val) => ({\n    ...acc,\n    ...val,\n  })),\n})\n\nexport const themeChange = createEvent<ThemeNamesType>()\n\nexport const $themes = createStore<Record<string, ThemeType>>({\n  default: {\n    tokens: stylesDataDefault,\n    mappings: mappingsDataDefault,\n    preset: themeDefault,\n    allTokens: themeToAllTokens(stylesDataDefault),\n  },\n  inverse: {\n    tokens: stylesDataInverse,\n    mappings: mappingsDataInverse,\n    preset: themeInverse,\n    allTokens: themeToAllTokens(stylesDataInverse),\n  },\n  brand: {\n    tokens: stylesDataBrand,\n    mappings: mappingsDataBrand,\n    preset: themeBrand,\n    allTokens: themeToAllTokens(stylesDataBrand),\n  },\n})\n\nexport const $themesNames = $themes.map((themes) => Object.keys(themes))\n\nexport const $theme = createStore<ThemeType>($themes.getState().default)\n\nexport const $themeName = createStore<ThemeNamesType>('default')\n\n$theme.on(themeChange, (_, themeName) => $themes.getState()[themeName])\n\n$themeName.on(themeChange, (_, themeName) => themeName)\n","import { setQueryParameter, deleteQueryParameter } from '../utils/queryParameters'\n\nexport const TOKENS_QUERY_PARAMETER = 'tokens'\n\nexport const tokensQueryParameterUpdate = (tokens?: string) => {\n  if (!tokens) {\n    deleteQueryParameter(TOKENS_QUERY_PARAMETER)\n    return\n  }\n\n  setQueryParameter(TOKENS_QUERY_PARAMETER, tokens)\n}\n","export const COLOR_RE = /color\\(.+\\)/\nexport const PARAM_DASH_RE = /({([a-zA-Z-]+)})/g\nexport const PARAM_DOT_RE = /({([a-zA-Z.]+)})/g\nexport const BRACES_REMOVAL_RE = /[{}]/g\n","import { ParamsType } from '../types'\nimport { PARAM_DASH_RE, BRACES_REMOVAL_RE } from './constants'\n\n/**\n * Get parameters from string.\n *\n * @param value {string} String from which parameters should be retrieved\n * @returns {ParamsType[] | undefined}\n *\n * @example\n *\n * extractParams('{button-bg-color}') // [ { template: '{button-bg-color}', token: 'button-bg-color'} ]\n * extractParams('{width} {height}') // [ {template: '{width}', token: 'width'}, { template: '{height}', token: 'height'} ]\n */\nexport const extractParams = (\n  value: string,\n  template: RegExp = PARAM_DASH_RE,\n): ParamsType[] | undefined => {\n  const params = String(value).match(template)\n\n  if (!params) {\n    return\n  }\n\n  return params.reduce<ParamsType[]>(\n    (acc, el) => [...acc, { template: el, token: el.replace(BRACES_REMOVAL_RE, '') }],\n    [],\n  )\n}\n\nexport const hasParams = (value: string, template: RegExp = PARAM_DASH_RE): boolean => {\n  const params = value.match(template)\n  return Boolean(params)\n}\n","import { PARAM_DASH_RE, PARAM_DOT_RE } from './constants'\nimport { extractParams } from './extractParams'\nimport { MappingsType } from '../types'\n\nexport type TokensType = Record<string, string>\n\nexport function transformMappings(\n  token: string,\n  mappings: MappingsType,\n  inverted: boolean = false,\n): string {\n  const template = !inverted ? PARAM_DASH_RE : PARAM_DOT_RE\n  const params = extractParams(token, template)\n\n  if (!params) {\n    return token\n  }\n\n  return params.reduce((acc, { token }) => {\n    const value = mappings[token] || token\n    return acc.replace(token, value)\n  }, token)\n}\n","import { $theme } from './themes'\nimport { MappingsType } from '../types'\n\n/**\n * Object for design tokens mappings storing\n *\n * @example\n *\n * {\n *  'button-view-action-fill-color-base': 'button.viewAction.fillColor.base.value',\n * }\n */\nexport const $tokenMappings = $theme.map<MappingsType>(({ allTokens }) =>\n  Object.entries(allTokens).reduce((acc, [name, { path }]) => {\n    const mappedName = [...path, 'value'].join('.')\n    return { ...acc, [name]: mappedName }\n  }, {}),\n)\n\n/**\n * Object for design tokens mappings storing\n *\n * @example\n *\n * {\n *  'button.viewAction.fillColor.base.value': 'button-view-action-fill-color-base',\n * }\n */\nexport const $invertedTokenMappings = $theme.map<MappingsType>(({ allTokens }) =>\n  Object.entries(allTokens).reduce((acc, [name, { path }]) => {\n    const mappedName = [...path, 'value'].join('.')\n    return { ...acc, [mappedName]: name }\n  }, {}),\n)\n","import { createStore, createEvent, createEffect, forward, combine, Store } from 'effector'\nimport { createGate } from 'effector-react'\nimport { toast } from 'react-toastify'\n\nimport { downloadTokens } from '../api/downloadTokens'\nimport { getQueryParameter } from '../utils/queryParameters'\nimport { themeChange } from './themes'\nimport { tokensQueryParameterUpdate } from './query'\nimport { VariablesType, ThemeNamesType, DesignTokensType, ListDesignTokensType } from '../types'\nimport { transformMappings } from '../utils/transformers'\nimport { $tokenMappings } from './mappings'\n\nexport const variablesInitialization = createEvent()\nexport const variablesChange = createEvent<VariablesType>()\nexport const variablesChangeBatch = createEvent<VariablesType[]>()\nexport const variablesReset = createEvent()\n\n// Ивент который говорит о том, что пользователь открыл страница с изменениями (Changes)\nexport const isVariablesChangedReset = createEvent()\n\nexport const tokensUpload = createEvent()\n\nexport const $designTokens = createStore<DesignTokensType>({})\n\nexport const $hasTokens = $designTokens.map((tokens) => Object.keys(tokens).length !== 0)\n\nexport const $listDesignTokens = $designTokens.map<ListDesignTokensType>((tokens) =>\n  Object.values(tokens).map((token) => ({ ...token })),\n)\n\nexport const $dotSepDesignTokens: Store<DesignTokensType> = combine(\n  $designTokens,\n  $tokenMappings,\n  (designTokens, mappings) =>\n    Object.entries(designTokens).reduce(\n      (acc, [name, { value, ...token }]) => ({\n        ...acc,\n        [name]: {\n          ...token,\n          value: transformMappings(value, mappings),\n        },\n      }),\n      {},\n    ),\n)\n\nexport const $isVariablesChanged = createStore(false)\n\nexport const variablesInitializationGate = createGate()\n\nexport const initializeVariables = createEffect(async () => {\n  const tokensHash = getQueryParameter('tokens')\n\n  if (!tokensHash) {\n    return\n  }\n\n  try {\n    const response = await downloadTokens(tokensHash)\n\n    if (!response) {\n      throw new Error('No response')\n    }\n\n    const { tokens, theme } = response\n\n    themeChange(theme as ThemeNamesType)\n    variablesChangeBatch(tokens)\n    tokensQueryParameterUpdate(tokensHash)\n    toast.success('Theme successfully downloaded')\n  } catch (err) {\n    toast.error(\"Couldn't download the Theme\")\n  }\n})\n\n// TODO: Удалять значение из стора если change=false.\n$designTokens\n  .on(variablesChange, (state, token) => ({ ...state, [token.name]: token }))\n  .on(variablesChangeBatch, (state, tokens) => {\n    const ret: Record<string, any> = {}\n    tokens.forEach((v) => (ret[v.name] = v))\n    return { ...state, ...ret }\n  })\n  .reset(variablesReset)\n\n$isVariablesChanged\n  .on(variablesChange, () => true)\n  .reset(isVariablesChangedReset)\n  .reset(variablesReset)\n\nvariablesReset.watch(() => {\n  toast.success('All changes reset')\n  tokensQueryParameterUpdate()\n})\n\nforward({\n  from: variablesInitializationGate.open,\n  to: initializeVariables,\n})\n\n$designTokens.watch(console.log)\n","import React, { FC } from 'react'\n\nimport { IconProps } from './types'\n\nexport type BackIconProps = IconProps\n\nexport const BackIcon: FC<BackIconProps> = ({ ...props }) => (\n  <svg\n    {...props}\n    width=\"13\"\n    height=\"12\"\n    viewBox=\"0 0 13 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M2.70718 5.00004L5.35363 7.64648L4.64652 8.35359L1.14652 4.85359L0.792969 4.50004L1.14652 4.14648L4.64652 0.646484L5.35363 1.35359L2.70718 4.00004H6.50008C10.0762 4.00004 13.0001 6.9239 13.0001 10.5L13.0001 12H12.0001L12.0001 10.5C12.0001 7.47618 9.52393 5.00004 6.50008 5.00004H2.70718Z\"\n      fill=\"black\"\n      fillOpacity=\"0.8\"\n    />\n  </svg>\n)\n","import React, { FC } from 'react'\n\nimport { IconProps } from './types'\n\nexport type CloseEyeIconProps = IconProps & { type: 'white' | 'black' }\n\nexport const CloseEyeIcon: FC<CloseEyeIconProps> = ({ type, ...props }) => (\n  <svg\n    {...props}\n    width=\"20\"\n    height=\"10\"\n    viewBox=\"0 0 20 10\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M17.6347 3.24478C18.4044 2.51355 19.0692 1.67306 19.6041 0.748291H17.9623C16.208 3.26336 13.2941 4.90725 9.99726 4.90725C6.70037 4.90725 3.78656 3.26336 2.03219 0.748291H0.390405C0.925582 1.67349 1.59073 2.51435 2.36092 3.24582L0.150391 5.45643L1.13071 6.43671L3.4279 4.13943C4.41331 4.86503 5.52317 5.43164 6.71961 5.80126L5.86431 8.88033L7.20008 9.25138L8.06813 6.1264C8.69462 6.23629 9.33923 6.2936 9.99726 6.2936C10.6558 6.2936 11.301 6.23619 11.9279 6.12612L12.7961 9.25138L14.1318 8.88033L13.2764 5.8008C14.4728 5.43102 15.5825 4.86426 16.5678 4.13852L18.8661 6.43672L19.8464 5.45641L17.6347 3.24478Z\"\n      fill={type === 'white' ? 'white' : '#222222'}\n    />\n  </svg>\n)\n","import React, { FC } from 'react'\n\nimport { IconProps } from './types'\n\nexport const UnionIcon: FC<IconProps> = ({ className }) => (\n  <svg\n    className={className}\n    width=\"12\"\n    height=\"12\"\n    viewBox=\"0 0 12 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M3.74279 2.74819L6.00006 0.500244L8.25733 2.74819L6.00006 4.99614L3.74279 2.74819ZM2.74819 8.25731L0.500244 6.00004L2.74819 3.74278L4.99614 6.00004L2.74819 8.25731ZM8.25731 9.25191L6.00004 11.4999L3.74278 9.25191L6.00004 7.00396L8.25731 9.25191ZM11.4999 6.00006L9.25191 3.74279L7.00396 6.00006L9.25191 8.25733L11.4999 6.00006Z\"\n      fill=\"#7B61FF\"\n    />\n  </svg>\n)\n","import React, { FC } from 'react'\n\nimport { IconProps } from './types'\n\nexport const TipIcon: FC<IconProps> = (props) => (\n  <svg\n    {...props}\n    width=\"12\"\n    height=\"12\"\n    viewBox=\"0 0 12 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M11 6C11 8.761 8.761 11 6 11C3.239 11 1 8.761 1 6C1 3.239 3.239 1 6 1C8.761 1 11 3.239 11 6ZM12 6C12 9.313 9.314 12 6 12C2.686 12 0 9.313 0 6C0 2.687 2.686 0 6 0C9.314 0 12 2.687 12 6ZM5.488 6.383C5.4 6.599 5.355 6.889 5.355 7.253H6.355L6.371 7.016C6.4 6.76 6.513 6.538 6.711 6.348L7.027 6.047C7.275 5.807 7.448 5.59 7.547 5.395C7.646 5.197 7.695 4.987 7.695 4.765C7.695 4.279 7.543 3.902 7.238 3.637C6.934 3.369 6.505 3.234 5.953 3.234C5.406 3.234 4.973 3.375 4.656 3.656C4.341 3.937 4.181 4.326 4.176 4.824H5.309C5.312 4.677 5.344 4.552 5.402 4.45C5.426 4.408 5.455 4.37 5.488 4.336C5.55 4.273 5.622 4.226 5.705 4.196C5.78 4.169 5.862 4.156 5.953 4.156C6.359 4.156 6.563 4.376 6.563 4.816C6.563 4.891 6.553 4.964 6.532 5.036C6.512 5.103 6.484 5.169 6.445 5.234C6.367 5.364 6.21 5.535 5.973 5.746C5.738 5.955 5.577 6.166 5.488 6.383ZM5.418 8.023C5.301 8.135 5.242 8.279 5.242 8.453C5.242 8.625 5.3 8.767 5.414 8.879C5.531 8.991 5.684 9.047 5.875 9.047C5.995 9.047 6.102 9.024 6.192 8.979C6.244 8.953 6.29 8.919 6.332 8.879C6.449 8.767 6.508 8.625 6.508 8.453C6.508 8.279 6.448 8.135 6.328 8.023C6.211 7.909 6.06 7.852 5.875 7.852C5.781 7.852 5.695 7.867 5.617 7.896C5.543 7.925 5.477 7.967 5.418 8.023Z\"\n      fill=\"black\"\n      fillOpacity=\"0.301961\"\n    />\n  </svg>\n)\n","import React, { FC } from 'react'\n\nimport { IconProps } from './types'\n\nexport const TrashIcon: FC<IconProps> = (props) => (\n  <svg\n    {...props}\n    width=\"12\"\n    height=\"16\"\n    viewBox=\"0 0 12 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M5 1.5C4.44772 1.5 4 1.94772 4 2.5H8C8 1.94772 7.55228 1.5 7 1.5H5ZM9 2.5C9 1.39543 8.10457 0.5 7 0.5H5C3.89543 0.5 3 1.39543 3 2.5H1.5H0L0 3.5H1V13.5C1 14.6046 1.89543 15.5 3 15.5H9C10.1046 15.5 11 14.6046 11 13.5V3.5H12V2.5H10.5H9ZM10 3.5H8.5H3.5H2V13.5C2 14.0523 2.44772 14.5 3 14.5H9C9.55228 14.5 10 14.0523 10 13.5V3.5ZM4 10.5V6.5H5V10.5H4ZM7 10.5V6.5H8V10.5H7Z\"\n      fill=\"black\"\n    />\n  </svg>\n)\n","import React, { FC } from 'react'\n\nimport { IconProps } from './types'\n\nexport type OpenEyeIconProps = IconProps & { type: 'white' | 'black' }\n\nexport const OpenEyeIcon: FC<OpenEyeIconProps> = ({ type, ...props }) => (\n  <svg\n    {...props}\n    width=\"20\"\n    height=\"12\"\n    viewBox=\"0 0 20 12\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M9.99914 10.159C6.81074 10.159 4.00713 8.50346 2.40422 5.99998C4.00713 3.49649 6.81074 1.84094 9.99914 1.84094C13.1875 1.84094 15.9911 3.4965 17.5941 5.99998C15.9911 8.50346 13.1875 10.159 9.99914 10.159ZM9.99914 0.45459C13.9891 0.45459 17.4542 2.702 19.1975 5.99998C17.4542 9.29796 13.9891 11.5454 9.99914 11.5454C6.00917 11.5454 2.54411 9.29796 0.800781 5.99998C2.54411 2.70199 6.00917 0.45459 9.99914 0.45459ZM9.99914 8.7728C11.5305 8.7728 12.7718 7.53142 12.7718 6.0001C12.7718 4.46879 11.5305 3.22741 9.99914 3.22741C8.46782 3.22741 7.22644 4.46879 7.22644 6.0001C7.22644 7.53142 8.46782 8.7728 9.99914 8.7728Z\"\n      fill={type === 'white' ? 'white' : '#222222'}\n    />\n  </svg>\n)\n","import React, { FC } from 'react'\n\nimport { IconProps } from './types'\n\nexport type SunIconProps = IconProps & { type: 'white' | 'black' }\n\nexport const SunIcon: FC<SunIconProps> = ({ type, ...props }) =>\n  type === 'white' ? (\n    <svg\n      {...props}\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M7.19956 3.68499C7.14639 3.77904 7.06092 3.85043 6.96059 3.89051C6.86793 3.92753 6.76627 3.93636 6.66948 3.91209L2.99026 2.98959L3.92325 6.6175C3.95066 6.72405 3.94078 6.8362 3.89952 6.93819C3.85601 7.04571 3.77945 7.13746 3.67859 7.19475L0.5 9L3.67858 10.8053C3.77944 10.8625 3.85601 10.9543 3.89952 11.0618C3.94079 11.1638 3.95066 11.276 3.92326 11.3825L2.99026 15.0104L6.6695 14.0879C6.76628 14.0636 6.86793 14.0725 6.96059 14.1095C7.06092 14.1496 7.14639 14.221 7.19956 14.315L9 17.5L10.8628 14.2747C10.9094 14.1941 10.9828 14.1326 11.069 14.0976C11.1516 14.064 11.2425 14.0561 11.3289 14.078L15.0111 15.0104L14.0896 11.2761C14.0707 11.1995 14.0775 11.1191 14.1069 11.0459C14.1384 10.9674 14.1944 10.9006 14.2677 10.8584L17.5 9L14.2677 7.14158C14.1944 7.09939 14.1384 7.03263 14.1069 6.95408C14.0775 6.88086 14.0707 6.80047 14.0896 6.72389L15.0111 2.98959L11.3289 3.92198C11.2425 3.94386 11.1516 3.93599 11.069 3.90244C10.9828 3.86741 10.9094 3.80592 10.8628 3.72533L9 0.5L7.19956 3.68499ZM10.1396 4.64557C9.77567 4.55057 9.39374 4.5 9 4.5C6.51472 4.5 4.5 6.51472 4.5 9C4.5 11.4853 6.51472 13.5 9 13.5C9.39375 13.5 9.7757 13.4494 10.1397 13.3544C8.83816 12.3486 8 10.7722 8 8.99998C8 7.22783 8.83814 5.65143 10.1396 4.64557Z\"\n        fill=\"white\"\n      />\n    </svg>\n  ) : (\n    <svg\n      {...props}\n      width=\"18\"\n      height=\"18\"\n      viewBox=\"0 0 18 18\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M10.8004 3.68499C10.8536 3.77904 10.9391 3.85043 11.0394 3.89051C11.1321 3.92753 11.2337 3.93636 11.3305 3.91209L15.0097 2.98959L14.0767 6.6175C14.0493 6.72405 14.0592 6.8362 14.1005 6.93819C14.144 7.04571 14.2206 7.13746 14.3214 7.19475L17.5 9L14.3214 10.8053C14.2206 10.8625 14.144 10.9543 14.1005 11.0618C14.0592 11.1638 14.0493 11.276 14.0767 11.3825L15.0097 15.0104L11.3305 14.0879C11.2337 14.0636 11.1321 14.0725 11.0394 14.1095C10.9391 14.1496 10.8536 14.221 10.8004 14.315L9 17.5L7.13716 14.2747C7.09061 14.1941 7.01719 14.1326 6.93097 14.0976C6.84839 14.064 6.7575 14.0561 6.67108 14.078L2.98892 15.0104L3.91043 11.2761C3.92933 11.1995 3.92247 11.1191 3.89311 11.0459C3.86162 10.9674 3.80565 10.9006 3.73228 10.8584L0.5 9L3.73228 7.14158C3.80565 7.09939 3.86162 7.03263 3.89311 6.95408C3.92247 6.88086 3.92933 6.80047 3.91043 6.72389L2.98892 2.98959L6.67108 3.92198C6.7575 3.94386 6.84839 3.93599 6.93097 3.90244C7.01719 3.86741 7.09061 3.80592 7.13716 3.72533L9 0.5L10.8004 3.68499ZM7.86036 4.64557C8.22433 4.55057 8.60626 4.5 9 4.5C11.4853 4.5 13.5 6.51472 13.5 9C13.5 11.4853 11.4853 13.5 9 13.5C8.60625 13.5 8.2243 13.4494 7.86031 13.3544C9.16184 12.3486 10 10.7722 10 8.99998C10 7.22783 9.16186 5.65143 7.86036 4.64557Z\"\n        fill=\"#222222\"\n      />\n    </svg>\n  )\n","import React, { FC, useRef, useState } from 'react'\nimport { useStore } from 'effector-react'\n\nimport { Modal } from '../../../lib/lego/Modal'\nimport { $isCombine } from '../../../model/combine'\nimport { variablesReset, $hasTokens } from '../../../model/designTokens'\n\nimport { TrashIcon } from '../../../icons'\nimport { Button, Icon } from 'react-figma-components'\n\nimport './Controls.css'\n\nexport type ControlsProps = { className: string }\n\nexport const Controls: FC<ControlsProps> = (props) => {\n  const scopeRef = useRef<HTMLDivElement>(null)\n  const [visible, setVisible] = useState(false)\n  const isCombine = useStore($isCombine)\n  const changesPresent = useStore($hasTokens)\n\n  const handleClick = () => {\n    setVisible(true)\n  }\n\n  const handleClose = () => {\n    setVisible(false)\n  }\n\n  const handleSubmit = () => {\n    variablesReset()\n    setVisible(false)\n  }\n\n  return (\n    <div {...props} ref={scopeRef}>\n      {!isCombine && changesPresent && (\n        <div className=\"Control\" onClick={handleClick}>\n          <TrashIcon className=\"Reset-Icon\" />\n          Reset all changes\n        </div>\n      )}\n      <Modal theme=\"normal\" visible={visible} scope={scopeRef} onClose={handleClose}>\n        <div className=\"Reset-Modal\">\n          <div className=\"Title\">\n            <span>Do you want to reset all changes?</span>\n            <Icon name=\"close\" color=\"black\" onClick={handleClose} className=\"CloseIcon\" />\n          </div>\n          <div className=\"Buttons\">\n            <Button view=\"secondary\" onPress={handleClose}>\n              Cancel\n            </Button>\n            <Button view=\"primary\" destructive onPress={handleSubmit}>\n              Reset changes\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  )\n}\n","import React, { FC } from 'react'\nimport { cn } from '@bem-react/classname'\nimport { useStore } from 'effector-react'\n\nimport { TabsMenu } from '../../lib/lego/TabsMenu'\nimport { Controls } from './Controls'\nimport { $isVariablesChanged } from '../../model/designTokens'\n\nimport './Header.css'\n\nexport type ActiveTabType = 'components' | 'changes'\n\nexport type HeaderProps = {\n  activeTab: ActiveTabType\n  setActiveTab: (newActiveTab: ActiveTabType) => void\n}\n\nexport const cnHeader = cn('Header')\n\nexport const Header: FC<HeaderProps> = ({ activeTab, setActiveTab }) => {\n  const showChangesNotification = useStore($isVariablesChanged)\n\n  return (\n    <div className={cnHeader()}>\n      <TabsMenu\n        activeTab={activeTab}\n        tabs={[\n          {\n            id: 'components',\n            onClick: () => setActiveTab('components'),\n            content: 'Components',\n          },\n          {\n            id: 'changes',\n            onClick: () => setActiveTab('changes'),\n            content: (\n              <div\n                className={cnHeader('Changes', {\n                  notify: showChangesNotification,\n                })}\n              >\n                Changes\n              </div>\n            ),\n          },\n        ]}\n      />\n      <Controls className={cnHeader('Controls')} />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Divider as DividerBase } from '@yandex/ui/Divider'\n\nimport './Divider.css'\n\nexport const Divider = () => <DividerBase />\n","import React, { ReactNode, FC, MouseEventHandler } from 'react'\nimport { cn } from '@bem-react/classname'\n\nimport { UnionIcon } from '../../icons'\n\nimport './Panel.css'\n\nexport const cnPanel = cn('Panel')\n\nexport type PanelProps = {\n  children?: ReactNode\n  className?: string\n  onClick?: MouseEventHandler\n  active?: boolean\n}\n\nexport const Panel: FC<PanelProps> = ({ children, className, active, ...props }) => (\n  <div className={cnPanel({ active }, [className])} {...props}>\n    <UnionIcon className={cnPanel('Icon')} />\n    <span className={cnPanel('Label')}>{children}</span>\n  </div>\n)\n","export const panelsTree: Record<string, string[]> = {\n  content: ['badge', 'divider', 'icon', 'image', 'header', 'text', 'userpic'],\n  controls: [\n    'attach',\n    'button',\n    'buttonGroup',\n    'checkbox',\n    'menu',\n    'radioButton',\n    'radioBox',\n    'textarea',\n    'textinput',\n    'tumbler',\n    'select',\n  ],\n  layout: ['listTile', 'spacer'],\n  navigation: ['link', 'tabsMenu'],\n  progress: ['progress', 'spin'],\n  surface: ['drawer', 'messageBox', 'modal', 'popup', 'tabsPanes', 'tooltip'],\n}\n","import React, { FC, Fragment, useState } from 'react'\nimport { Input, Icon, Disclosure } from 'react-figma-components'\nimport { cn } from '@bem-react/classname'\n\nimport { Panel } from '../../../../components/Panel'\nimport { Divider } from '../../../../lib/lego/Divider'\n\nimport { panelsTree } from './constants'\n\nimport './Panels.css'\n\nexport const cnPanels = cn('Panels')\n\nexport type PanelsProps = {\n  className: string\n  panels: string[]\n  activePanel: string\n  onPanelSelect: (panel: string) => void\n}\n\n// By default all disclosures are open\nconst defaultSections = Array(Object.keys(panelsTree).length).fill(true)\n\nconst includes = (component: string, search: string) =>\n  component.toLowerCase().includes(search.toLowerCase())\n\nexport const Panels: FC<PanelsProps> = ({ className, panels, activePanel, onPanelSelect }) => {\n  const [search, setSearch] = useState('')\n  const [sections, setSections] = useState(defaultSections)\n\n  const handleSectionChange = (index: number) => {\n    setSections((prev) => prev.map((el, i) => (i === index ? !el : el)))\n  }\n\n  return (\n    <div className={cnPanels(null, [className])}>\n      <Input\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n        renderIcon={<Icon name=\"search\" color=\"black\" />}\n        placeholder=\"Search\"\n        className={cnPanels('Input')}\n      />\n      <Divider />\n      <div className={cnPanels('Content')}>\n        {/* Overview is not belong to any class */}\n        {includes('overview', search) && (\n          <Panel\n            key=\"overview\"\n            active={activePanel === 'overview'}\n            onClick={() => onPanelSelect('overview')}\n          >\n            overview\n          </Panel>\n        )}\n\n        {Object.entries(panelsTree).map(([section, components], index) => {\n          if (!components.some((component) => includes(component, search))) {\n            return <Fragment key={section} />\n          }\n\n          return (\n            <Disclosure\n              label={section}\n              checked={sections[index]}\n              onChange={() => handleSectionChange(index)}\n              className=\"Panels-Disclosure\"\n              key={section}\n            >\n              {components\n                .filter((component) => includes(component, search))\n                .map((component) => (\n                  <Panel\n                    key={component}\n                    active={activePanel === component}\n                    onClick={() => onPanelSelect(component)}\n                  >\n                    {component}\n                  </Panel>\n                ))}\n            </Disclosure>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n","import React, { FC, ReactNode } from 'react'\nimport { cn } from '@bem-react/classname'\n\nimport { TipIcon } from '../../icons'\nimport { TooltipStateful } from '../../lib/lego/Tooltip'\n\nimport './TextinputBase.css'\n\nexport const cnTextinput = cn('Textinput')\n\nexport type TextinputBaseProps = {\n  label: string\n  children?: ReactNode\n  className?: string\n  tip?: string\n}\n\nexport const TextinputBase: FC<TextinputBaseProps> = ({ children, className, tip, label }) => {\n  return (\n    <div className={cnTextinput({ has_tip: Boolean(tip) }, [className])}>\n      <div className={cnTextinput('Tip')}>\n        {tip && (\n          <TooltipStateful content={tip}>\n            <span>\n              <TipIcon className={cnTextinput('TipIcon')} />\n            </span>\n          </TooltipStateful>\n        )}\n        <span className={cnTextinput('Label')}>{label}</span>\n      </div>\n      <div className={cnTextinput('Body')}>{children}</div>\n    </div>\n  )\n}\n","import React, { ChangeEvent, FC } from 'react'\nimport { Select, Input, Item, Switch } from 'react-figma-components'\n\nimport { TextinputBase, TextinputBaseProps, cnTextinput } from '.'\n\nexport type TextinputProps = TextinputBaseProps & {\n  type: 'select' | 'boolean' | 'text'\n  options?: Array<{\n    value: string\n    label: string\n  }>\n  value?: string\n  onChange?: (event: ChangeEvent) => void\n}\n\nexport const Textinput: FC<TextinputProps> = ({\n  value,\n  type,\n  options = [],\n  onChange,\n  ...props\n}) => {\n  let Component: FC\n\n  if (type === 'select' && options.length === 0) {\n    throw new Error('select type should have options prop')\n  }\n\n  switch (type) {\n    case 'select':\n      Component = Select\n      break\n    case 'boolean':\n      Component = Switch\n      break\n    case 'text':\n      Component = Input\n      break\n    default:\n      throw new Error('component type is not defined')\n  }\n\n  return (\n    <TextinputBase {...props} className={cnTextinput({ [`type_${type}`]: Boolean(type) })}>\n      {\n        // @ts-ignore\n        <Component onChange={onChange} value={value}>\n          {type === 'select'\n            ? options.map(({ value, label }) => (\n                <Item value={value} key={`${label}-${value}`}>\n                  {label}\n                </Item>\n              ))\n            : null}\n        </Component>\n      }\n    </TextinputBase>\n  )\n}\n","import React, { FC } from 'react'\n\nimport { Textinput } from '../../../../components/Textinput'\n\nexport type SettingsProps = {}\n\nexport const Settings: FC<SettingsProps> = () => {\n  return (\n    <>\n      <Textinput\n        label=\"size\"\n        tip=\"размер кнопки\"\n        type=\"select\"\n        options={[\n          { value: 's', label: 's' },\n          { value: 'm', label: 'm' },\n        ]}\n      />\n      <Textinput label=\"content\" tip=\"содержимое кнопки\" type=\"text\" />\n      <Textinput\n        label=\"view\"\n        tip=\"внешний вид кнопки\"\n        type=\"select\"\n        options={[\n          { value: 'ks', label: 's' },\n          { value: 'm', label: 'm' },\n        ]}\n      />\n      <Textinput\n        label=\"state\"\n        tip=\"состояние кнопки\"\n        type=\"select\"\n        options={[\n          { value: 's', label: 's' },\n          { value: 'm', label: 'm' },\n        ]}\n      />\n\n      <Textinput\n        label=\"pin\"\n        tip=\"форма кнопки\"\n        type=\"select\"\n        options={[\n          { value: 's', label: 's' },\n          { value: 'm', label: 'm' },\n        ]}\n      />\n      <Textinput label=\"check\" tip=\"выбранная кнопка\" type=\"boolean\" />\n    </>\n  )\n}\n","type Color =\n  | { source: 'rgb'; rgb: { r: number; g: number; b: number; a: number } }\n  | { source: 'hsl'; hsl: { h: number; s: number; l: number; a: number } }\n  | { source: 'hex'; hex: string }\n\nexport function isColor(value: string): boolean {\n  return Boolean(String(value).match(/^(#|hsla?|rgba?)/))\n}\n\nfunction hslToHex(h: number, s: number, l: number) {\n  l /= 100\n  const a = (s * Math.min(l, 1 - l)) / 100\n  const f = (n: number) => {\n    const k = (n + h / 30) % 12\n    const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1)\n    return Math.round(255 * color)\n      .toString(16)\n      .padStart(2, '0') // convert to Hex and prefix \"0\" if needed\n  }\n  return `${f(0)}${f(8)}${f(4)}`\n}\n\nfunction rgbToHex(r: number, g: number, b: number) {\n  return (\n    (r | (1 << 8)).toString(16).slice(1) +\n    (g | (1 << 8)).toString(16).slice(1) +\n    (b | (1 << 8)).toString(16).slice(1)\n  )\n}\n\nexport function convertColorObj(color: Color): string {\n  let colorValue = ''\n\n  // TODO: Move to util.\n  if (color.source === 'rgb') {\n    colorValue = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`\n  } else if (color.source === 'hsl') {\n    colorValue = `hsla(${color.hsl.h}, ${color.hsl.s}, ${color.hsl.l}, ${color.hsl.a})`\n  } else {\n    colorValue = color.hex\n  }\n\n  return colorValue\n}\n\nexport function toHEXA(color: string) {\n  const _color = String(color)\n  let hex, a\n\n  if (_color.match(/(rgb|hsl)/)) {\n    const extract = _color.match(/\\((.*)\\)/)\n\n    if (!extract) {\n      throw new Error('Wrong color value. Empty rgb/hsl body')\n    }\n\n    // Parameters depends on the applied function\n    //     r   g   b   alpha\n    //     h   s   l   alpha\n    const [a1, a2, a3, alpha] = extract[0]\n      .slice(1, extract[0].length - 1)\n      .split(',')\n      .map((el) => Number(el.trim()))\n\n    hex = _color.match(/rgb/) ? rgbToHex(a1, a2, a3) : hslToHex(a1, a2, a3)\n    a = alpha ?? 1\n  } else {\n    let fullForm = _color.slice(1)\n    if (_color.length === 4 || _color.length === 5) {\n      const r = _color[1],\n        g = _color[2],\n        b = _color[3]\n      fullForm = r + r + g + g + b + b + (_color.length === 5 ? color[4] + color[4] : '')\n    }\n\n    if (fullForm.length === 9) {\n      // _______ <- color part\n      // #FFFFFF00\n      //        -- <- alpha part\n      hex = fullForm.slice(0, -2)\n      a = parseInt(fullForm.slice(fullForm.length - 2, fullForm.length), 16)\n    } else {\n      hex = fullForm\n      a = 1\n    }\n  }\n\n  return [hex.toUpperCase(), `${Math.round(a * 100)}%`]\n}\n","import { isColor } from './color'\nimport { hasParams } from '../utils/extractParams'\n\nexport const getType = (token: string) => {\n  if (isColor(token)) {\n    return 'color'\n  }\n\n  if (typeof token === 'string' && hasParams(token)) {\n    return 'link'\n  }\n\n  return 'text'\n}\n","export const COUNTER_ID = '69595123'\n\nexport const metricaGoal = (goal: string) => {\n  // @ts-ignore\n  window.ym(COUNTER_ID, 'reachGoal', goal)\n}\n","import React, { useState, useRef, useCallback, useEffect, FC } from 'react'\nimport { ChromePicker } from 'react-color'\nimport { Popup } from '@yandex/ui/Popup/desktop/bundle'\n\nimport { metricaGoal } from '../../../../../../components/YaMetrika'\n\nimport './ColorPicker.css'\n\nexport type ColorPickerProps = {\n  color: string\n  onColorChange?: (color: string) => void\n  onClose?: () => void\n  shape?: 'circle' | 'square'\n  forceVisible?: boolean\n}\n\nexport const ColorPicker: FC<ColorPickerProps> = ({\n  color,\n  onColorChange,\n  onClose,\n  forceVisible = false,\n  shape = 'circle',\n}) => {\n  const [visible, setVisible] = useState(false)\n\n  const scopeRef = useRef<HTMLDivElement>(null)\n  const anchorRef = useRef<HTMLDivElement>(null)\n\n  const handleClick = useCallback(() => {\n    if (!onColorChange) {\n      return\n    }\n\n    setVisible(true)\n    metricaGoal('picker')\n  }, [onColorChange])\n\n  const handleClose = useCallback(() => {\n    setVisible(false)\n    onClose?.()\n  }, [onClose])\n\n  const handleColorChange = useCallback(\n    (event) => {\n      onColorChange?.(event)\n      metricaGoal('change-tokens')\n    },\n    [onColorChange],\n  )\n\n  useEffect(() => {\n    setVisible(forceVisible)\n  }, [forceVisible])\n\n  return (\n    <div ref={scopeRef} className=\"ColorPicker\">\n      <div\n        ref={anchorRef}\n        onClick={handleClick}\n        className={`ColorPicker-Preview ColorPicker-Preview_shape_${shape}`}\n        style={{ background: color }}\n      />\n      <Popup\n        direction=\"bottom-end\"\n        target=\"anchor\"\n        anchor={anchorRef}\n        view=\"default\"\n        visible={visible}\n        scope={scopeRef}\n        onClose={handleClose}\n      >\n        <ChromePicker color={color} onChangeComplete={handleColorChange} />\n      </Popup>\n    </div>\n  )\n}\n","import React, { FC } from 'react'\nimport { cn } from '@bem-react/classname'\n\nimport { TextinputBase, TextinputBaseProps } from '../../../../../../components/Textinput'\nimport { toHEXA } from '../../../../../../utils/color'\n\nimport './TextinputPrevious.css'\n\nexport const cnTextinputPrevious = cn('TextinputPrevious')\n\nexport type TextinputPreviousProps = Omit<TextinputBaseProps, 'label'> & {\n  color: string\n}\n\nexport const TextinputPrevious: FC<TextinputPreviousProps> = ({ color, ...props }) => {\n  const [hex, alpha] = toHEXA(color)\n\n  return (\n    <TextinputBase label=\"initial value\" className={cnTextinputPrevious()}>\n      <div className={cnTextinputPrevious('Body')}>\n        <span className={cnTextinputPrevious('Hex')}>{hex}</span>\n        <span className={cnTextinputPrevious('Alpha')}>{alpha}</span>\n      </div>\n    </TextinputBase>\n  )\n}\n","import { ListDesignTokensType, MappingsType } from '../types'\nimport { build } from '@yandex/themekit/lib/core/build'\nimport { parseContent } from '@yandex/themekit/lib/core/parseContent'\n\nimport { getType } from '../utils/tokenType'\n\nexport const themeboxConfig = {\n  output: {\n    css: {\n      transforms: ['name/cti/kebab', 'json/extended/mapper'],\n      buildPath: './themes',\n      files: [\n        {\n          destination: 'tokens.json',\n          format: 'json/extended',\n        },\n      ],\n      actions: ['process-color'],\n    },\n  },\n}\n\nexport const downloadTheme = async (content: any, mappings: MappingsType) => {\n  const res = await build([\n    {\n      mapper: mappings,\n      whitepaper: {},\n      entry: 'browser',\n      platform: 'desktop',\n      properties: parseContent(content, 'yaml') as object,\n      ...themeboxConfig,\n    },\n  ])\n\n  const properties = res['css'].dictionary.allProperties\n\n  const tokens: ListDesignTokensType = Object.entries(properties).map(([_, item]: any) => ({\n    path: item.path,\n    name: item.name,\n    value: item.value,\n    rawValue: item.original.value,\n    changed: true,\n    type: getType(item.value),\n  }))\n\n  return tokens\n}\n","export function toDeepToken(path: string[], prop: any): any {\n  const chunks = [...path].reverse()\n  let result: any = prop\n  for (let chunk of chunks) {\n    result = { [chunk]: result }\n  }\n  return result\n}\n","import { combine } from 'effector'\nimport deepmerge from 'deepmerge'\nimport YAML from 'yaml'\n\nimport { ParamsType } from '../types'\nimport { PARAM_DOT_RE } from '../utils/constants'\nimport { extractParams } from '../utils/extractParams'\nimport { toDeepToken } from '../utils/toDeepToken'\nimport { $invertedTokenMappings } from './mappings'\nimport { $theme } from './themes'\nimport { $dotSepDesignTokens } from './designTokens'\n\nexport const $yamlText = combine(\n  {\n    designTokens: $dotSepDesignTokens,\n    mappings: $invertedTokenMappings,\n    theme: $theme,\n  },\n  ({ designTokens, mappings, theme: { allTokens } }) => {\n    if (Object.keys(designTokens).length === 0) {\n      return ''\n    }\n\n    // Make object for yaml from designTokens\n    const yml = Object.values(designTokens).reduce((acc, { changed, path, value, rawValue }) => {\n      if (rawValue) {\n        acc.push(toDeepToken(path, { value: rawValue }))\n      } else if (changed) {\n        acc.push(toDeepToken(path, { value }))\n      }\n\n      return acc\n    }, [] as any)\n\n    // Get all params from designTokens values\n    const params = Object.values(designTokens).reduce<ParamsType[]>(\n      (acc, { value, rawValue }) => [\n        ...acc,\n        ...(extractParams(rawValue || value, PARAM_DOT_RE) || []),\n      ],\n      [],\n    )\n\n    // If param is in the theme and it was not redefined then add theme's value to the yaml\n    params\n      .map(({ token }) => mappings[token] || token)\n      .filter((token) => !(token in designTokens))\n      .forEach((token) => {\n        if (allTokens[token]) {\n          const { path, value } = allTokens[token]\n          yml.push(toDeepToken(path, { value }))\n        }\n      })\n\n    const deepmergedYml = deepmerge.all(yml)\n    return YAML.stringify(deepmergedYml)\n  },\n)\n","import { createStore, createEvent, createEffect, forward, attach } from 'effector'\n\nimport { downloadTheme } from '../api/downloadTheme'\nimport { variablesReset } from './designTokens'\nimport { $yamlText } from './yaml'\nimport { DesignTokensType, VariablesType, MappingsType } from '../types'\nimport { $theme } from './themes'\n\nexport const $resolvedTokens = createStore<DesignTokensType>({})\n\nconst resolvedTokensUpdate = createEvent<VariablesType[]>()\n\n$resolvedTokens\n  .on(resolvedTokensUpdate, (_, tokens) =>\n    tokens.reduce((acc, token) => ({ ...acc, [token.name]: token }), {}),\n  )\n  .reset(variablesReset)\n\nexport const resolveTokensFx = createEffect(\n  async ({ content, mappings }: { content: string; mappings: MappingsType }) => {\n    resolvedTokensUpdate(await downloadTheme(content, mappings))\n  },\n)\n\nexport const resolveTokensAttach = attach({\n  effect: resolveTokensFx,\n  source: $theme,\n  mapParams: (content: string, { mappings }) => ({\n    content,\n    mappings,\n  }),\n})\n\nforward({ from: $yamlText, to: resolveTokensAttach })\n","import { createStore, createEvent } from 'effector'\n\nexport const componentChange = createEvent<string>()\nexport const tokenChange = createEvent<string>()\nexport const tokenReset = createEvent()\nexport const activeTabChange = createEvent<string>()\n\n// Current selected component to be shown\nexport const $component = createStore<string>('overview')\n\n// Current selected token to be edited\nexport const $token = createStore<string>('')\nexport const $tokenPresent = $token.map((token) => token.length > 0)\n\n// Current tab to show\nexport const $activeTab = createStore<string>('')\n\n$component.on(componentChange, (_, component) => component)\n\n$token.on(tokenChange, (_, token) => token).reset(tokenReset)\n\n$activeTab.on(activeTabChange, (_, activeTab) => activeTab)\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport { useStore } from 'effector-react'\nimport { withDebounceInput } from '@yandex/ui/withDebounceInput'\nimport { Input, IconButton } from 'react-figma-components'\nimport { useHover } from 'web-platform-alpha'\n\nimport { isColor, convertColorObj, toHEXA } from '../../../../../utils/color'\nimport { getType } from '../../../../../utils/tokenType'\nimport { variablesChange } from '../../../../../model/designTokens'\nimport { TextinputBase, cnTextinput } from '../../../../../components/Textinput'\nimport { ColorPicker } from './ColorPicker'\nimport { TextinputPrevious } from './TextinputPrevious'\nimport { BackIcon } from '../../../../../icons'\n\nimport { metricaGoal } from '../../../../../components/YaMetrika'\nimport { $resolvedTokens } from '../../../../../model/resolvedTokens'\n\nimport './TextinputField.css'\nimport { tokenChange } from '../../../model'\n\nconst DebouncedInput = withDebounceInput(Input)\n\nexport const TextinputField: React.FC<{\n  label: string\n  defaultValue: string\n  path: string[]\n  description: string\n  customTokens: string\n  rawValue?: string\n}> = ({ label, defaultValue, path, description, customTokens, rawValue }) => {\n  const { isHovered, hoverProps } = useHover({ disabled: false })\n  const [pickerVisible, setPickerVisible] = useState(false)\n  const [value, setValue] = useState(customTokens)\n  const resolvedTokens = useStore($resolvedTokens)\n  const token = resolvedTokens[label]?.value\n\n  const isColorValue = isColor(token) || isColor(defaultValue)\n  const colorValue = typeof token === 'string' ? token : defaultValue\n  const [hex, alpha] = toHEXA(colorValue)\n  const isChanged = defaultValue !== value\n  const type = getType(value)\n\n  // Update internal value when showcase is changed.\n  useEffect(() => {\n    setValue(rawValue || customTokens || defaultValue)\n  }, [defaultValue, customTokens, rawValue])\n\n  const handleClearClick = useCallback(() => {\n    setValue(defaultValue)\n    variablesChange({\n      path,\n      name: label,\n      value: defaultValue,\n      changed: false,\n      type: getType(defaultValue),\n    })\n    metricaGoal('clear-textinput')\n  }, [defaultValue, label, path])\n\n  const handleColorChange = useCallback(\n    (color) => {\n      const colorValue = convertColorObj(color)\n\n      setValue(colorValue)\n      variablesChange({\n        path,\n        name: label,\n        value: colorValue,\n        changed: colorValue !== defaultValue,\n        type: 'color',\n      })\n    },\n    [path, defaultValue, label],\n  )\n\n  const handleChange = useCallback(\n    (event) => {\n      setValue(event.target.value)\n      variablesChange({\n        path,\n        name: label,\n        value: event.target.value,\n        changed: event.target.value !== defaultValue,\n        type: getType(event.target.value),\n      })\n      metricaGoal('change-tokens')\n    },\n    [path, defaultValue, label],\n  )\n\n  const handleLink = (token: string) => {\n    tokenChange(token)\n  }\n\n  return (\n    <>\n      <TextinputBase\n        label={label}\n        tip={description}\n        className={cnTextinput({ has_color: isColorValue })}\n      >\n        <div className={`TextinputField-Control ${isHovered ? 'isHovered' : ''}`} {...hoverProps}>\n          {type === 'link' && (\n            <div className={cnTextinput({ type_link: true })}>\n              {isColorValue && <ColorPicker color={colorValue} shape=\"circle\" />}\n              <span>{label}</span>\n              {isHovered && (\n                <IconButton\n                  name=\"break\"\n                  onPress={() => handleLink(label)}\n                  className=\"Textinput-BreakIcon\"\n                />\n              )}\n            </div>\n          )}\n          {type === 'color' && (\n            <>\n              <div\n                className={cnTextinput({ type_color: true })}\n                onClick={() => setPickerVisible(true)}\n              >\n                <ColorPicker\n                  color={colorValue}\n                  onColorChange={handleColorChange}\n                  shape=\"square\"\n                  forceVisible={pickerVisible}\n                  onClose={() => setPickerVisible(false)}\n                />\n                <span className=\"Textinput-Hex\">{hex}</span>\n                <span className=\"Textinput-Alpha\">{alpha}</span>\n              </div>\n              {isHovered && (\n                <IconButton\n                  name=\"hyperlink\"\n                  onPress={() => handleLink(label)}\n                  className=\"Textinput-BreakIcon\"\n                />\n              )}\n              {isChanged && (\n                <div onClick={handleClearClick}>\n                  <BackIcon className=\"Textinput-Back\" />\n                </div>\n              )}\n            </>\n          )}\n          {type === 'text' && (\n            <div className={cnTextinput({ type_text: true })}>\n              <DebouncedInput\n                onChange={handleChange}\n                value={value}\n                debounceTimeout={500}\n                forceNotifyByEnter\n                forceNotifyOnBlur\n                data-testid={label}\n                className=\"TextinputField-Input\"\n              />\n            </div>\n          )}\n        </div>\n      </TextinputBase>\n      {type === 'color' && isChanged && <TextinputPrevious color={defaultValue} />}\n    </>\n  )\n}\n","import { useStore } from 'effector-react'\nimport React, { FC } from 'react'\n\nimport { TextinputField } from './TextinputField'\nimport { $designTokens } from '../../../../model/designTokens'\nimport { $invertedTokenMappings } from '../../../../model/mappings'\nimport { $theme } from '../../../../model/themes'\nimport { transformMappings } from '../../../../utils/transformers'\nimport { $component } from '../../model'\n\nimport { mockTokens } from './mockTokens'\n\nexport type TokensProps = {}\n\nexport const Tokens: FC<TokensProps> = () => {\n  const {\n    tokens: { globals, components },\n  } = useStore($theme)\n  const component = useStore($component)\n  const designTokens = useStore($designTokens)\n  const invertedTokenMappings = useStore($invertedTokenMappings)\n\n  const values = component === 'overview' ? globals : components[component]\n  // const values = mockTokens\n\n  return (\n    <>\n      {Object.entries(values).map(([groupName, groupTokens]: any, index) => (\n        <TextinputField\n          key={groupName}\n          label={groupName}\n          defaultValue={groupTokens.value}\n          customTokens={designTokens[groupName]?.value || ''}\n          rawValue={transformMappings(\n            (designTokens[groupName] || {}).rawValue || '',\n            invertedTokenMappings,\n            true,\n          )}\n          path={groupTokens.path}\n          description={groupTokens.description}\n        />\n      ))}\n    </>\n  )\n}\n","import React, { FC } from 'react'\n\nexport type CodeProps = {}\n\nexport const Code: FC<CodeProps> = () => {\n  return <>Code page</>\n}\n","import React, { useState, FC, useEffect, MouseEvent } from 'react'\nimport { useStore } from 'effector-react'\nimport { cn } from '@bem-react/classname'\nimport { Icon, Button } from 'react-figma-components'\n\nimport { TabsMenu } from '../../../../lib/lego/TabsMenu'\nimport { Divider } from '../../../../lib/lego/Divider'\n\nimport { Settings } from './Settings'\nimport { Tokens } from './Tokens'\nimport { Code } from './Code'\n\nimport { $component, $activeTab, activeTabChange } from '../../model'\nimport { $isCombine, isCombineChange, isCombineReset } from '../../../../model/combine'\n\nimport './Playground.css'\n\nconst cnPlayground = cn('Playground')\n\nexport type PlaygroundProps = {\n  className: string\n}\n\nexport const Playground: FC<PlaygroundProps> = ({ className }) => {\n  const component = useStore($component)\n  const combine = useStore($isCombine)\n  const activeTab = useStore($activeTab)\n\n  const handleCombineChange = (e: MouseEvent<HTMLDivElement>) => {\n    e.stopPropagation()\n    isCombineChange()\n  }\n\n  useEffect(() => {\n    if (component === 'overview') {\n      activeTabChange('tokens')\n    }\n  }, [component])\n\n  useEffect(() => isCombineReset, [component, activeTab])\n\n  return (\n    <div className={cnPlayground(null, [className])}>\n      <TabsMenu\n        activeTab={activeTab}\n        tabs={[\n          // Overview page should not have settings tab\n          ...(component !== 'overview'\n            ? [\n                {\n                  id: 'settings',\n                  onClick: () => activeTabChange('settings'),\n                  content: 'Settings',\n                },\n              ]\n            : []),\n          {\n            id: 'tokens',\n            onClick: () => activeTabChange('tokens'),\n            content: component === 'overview' ? 'Global Tokens' : 'Design Tokens',\n          },\n          // { id: 'code', onClick: () => setActiveTab('code'), content: 'Code' },\n        ]}\n        className={cnPlayground('Header')}\n      />\n      <Divider />\n      <div className={cnPlayground('Body')}>\n        {component !== 'overview' && activeTab === 'settings' && <Settings />}\n        {activeTab === 'tokens' && <Tokens />}\n        {activeTab === 'code' && <Code />}\n      </div>\n      {component !== 'overview' && activeTab === 'settings' && (\n        <>\n          <Divider />\n          <div className={cnPlayground('Footer', { active: combine })}>\n            <div\n              className={cnPlayground('Footer-Header')}\n              onClick={(e) => !combine && handleCombineChange(e)}\n            >\n              <div className={cnPlayground('Footer-Header-Title')}>Combine mode </div>\n              <div className={cnPlayground('Footer-Header-Button')}>\n                <Icon\n                  name={combine ? 'minus' : 'plus'}\n                  color={combine ? 'black' : 'black3'}\n                  onClick={handleCombineChange}\n                />\n              </div>\n            </div>\n            {combine && (\n              <>\n                <p>\n                  Option Menu are multiselect now. Choose needed props and generate variants to\n                  Figma canvas\n                </p>\n                <div className={cnPlayground('Footer-Buttons')}>\n                  <Button view=\"secondary\" disabled={!combine}>\n                    Reset Selection\n                  </Button>\n                  <Button view=\"primary\" disabled={!combine}>\n                    Generate Variants\n                  </Button>\n                </div>\n              </>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n","import React, { FC } from 'react'\nimport { useStore } from 'effector-react'\nimport { cn } from '@bem-react/classname'\nimport { Button, Icon, Input, Switch, Textarea } from 'react-figma-components'\n\nimport { Divider } from '../../../../lib/lego/Divider'\nimport { TooltipStateful } from '../../../../lib/lego/Tooltip'\nimport { $token, tokenReset } from '../../model'\nimport { TipIcon } from '../../../../icons'\nimport './TokenEditor.css'\n\nexport const cnTokenEditor = cn('TokenEditor')\n\nexport type TokenEditorProps = {\n  className?: string\n}\n\nexport const TokenEditor: FC<TokenEditorProps> = ({ className, ...props }) => {\n  const token = useStore($token)\n\n  return (\n    <div className={cnTokenEditor(null, [className])} {...props}>\n      <div className={cnTokenEditor('Header')}>\n        <span>Edit token</span>\n        <Icon\n          name=\"close\"\n          color=\"black\"\n          onClick={tokenReset}\n          className={cnTokenEditor('CloseIcon')}\n        />\n      </div>\n      <Divider />\n      <div className={cnTokenEditor('Description')}>\n        <Input value={token} readOnly />\n        <Textarea readOnly />\n      </div>\n      <Divider />\n      <div className={cnTokenEditor('Controls')}>\n        <div className={cnTokenEditor('Header')}>\n          <span>Properties</span>\n          <div className={cnTokenEditor('Switch')}>\n            <Switch />\n            <span>Inheritance</span>\n            <TooltipStateful content=\"You can use formulas in “color{} h{} s{} l{} a{}” format \">\n              <span>\n                <TipIcon className=\"\" />\n              </span>\n            </TooltipStateful>\n          </div>\n        </div>\n        <div className={cnTokenEditor('Input')}></div>\n        <div className={cnTokenEditor('Actions')}>\n          <Button view=\"primary\">Save Changes</Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { $resolvedTokens } from './resolvedTokens'\n\nexport const $cssVariables = $resolvedTokens.map<Record<string, string>>((tokens) => {\n  return Object.entries(tokens).reduce(\n    (acc, [name, { value }]) => ({\n      ...acc,\n      [`--${name}`]: value,\n    }),\n    {},\n  )\n})\n\nexport const $cssText = $cssVariables.map((variables) => {\n  const cssText = Object.keys(variables).reduce(\n    (acc: string, v: string) => `${acc}  ${v}: ${variables[v]};\\n`,\n    '',\n  )\n  return `:root {\\n${cssText}}`\n})\n","import { createEvent, createStore } from 'effector'\n\nexport const darkToggle = createEvent()\n\nexport const $dark = createStore(false)\n\n$dark.on(darkToggle, (state, _) => !state)\n","import { createEffect, createEvent, createStore, forward } from 'effector'\nimport { createGate } from 'effector-react'\nimport { getQueryParameter } from '../utils/queryParameters'\n\nexport type ViewType = 'figma' | 'web'\n\nexport const viewChange = createEvent<ViewType>()\n\nexport const $view = createStore<ViewType>('figma')\nexport const $isFigma = $view.map((state) => state === 'figma')\n\nexport const initializeView = createEffect(async () => {\n  const isFigma = getQueryParameter('figma')\n  viewChange(isFigma === 'true' ? 'figma' : 'web')\n})\n\nexport const viewInitializationGate = createGate()\n\n$view.on(viewChange, (_, payload) => payload)\n\nforward({\n  from: viewInitializationGate.open,\n  to: initializeView,\n})\n","import React from 'react'\nimport { useStore } from 'effector-react'\n\nimport { $dark } from '../../../../../../../model/dark'\nimport './Headline.css'\n\nexport const Headline: React.FC = ({ children }) => {\n  const dark = useStore($dark)\n  return <div className={`Headline ${dark && 'Headline_dark'}`}>{children}</div>\n}\n","import { useEffect } from 'react'\nimport { sendToFigma } from '../utils/figma'\n\ninterface ComponentParams {\n  name: string\n  props: unknown\n}\n\nconst fixYOffset = 44\n\nexport const useDragToFigma = (\n  elementRef: React.RefObject<HTMLElement>,\n  dragRef: React.RefObject<HTMLElement>,\n  params: ComponentParams,\n) => {\n  useEffect(() => {\n    let offsetX = 0\n    let offsetY = 0\n    let iframeX = 0\n    let iframeY = 0\n\n    if (!dragRef?.current || !elementRef?.current) return\n\n    const dragElem = dragRef.current\n\n    const dragStartHandler = (e: DragEvent) => {\n      // const { offsetX, offsetY } = e.nativeEvent;\n      //@ts-ignore\n      e.dataTransfer.effectAllowed = 'copyMove'\n      //@ts-ignore\n      e.dataTransfer.setData('text/plain', e.currentTarget?.innerHTML)\n      //@ts-ignore\n      e.dataTransfer.dropEffect = 'copy'\n      // Getting the offset position (The position of the cursor relative to the top-left corner of item being dragged)\n\n      offsetX = e.offsetX\n      offsetY = e.offsetY\n      iframeX = e.screenX - e.clientX\n      iframeY = e.screenY - e.clientY\n    }\n\n    const dragEndHandler = (e: DragEvent) => {\n      // Don't proceed if the item was dropped inside the plugin window.\n      // if (e.view?.length === 0) return;\n\n      // Getting the size of the app/browser window.\n      const windowSize = {\n        width: window.outerWidth,\n        height: window.outerHeight,\n      }\n\n      // Getting the position of the cursor relative to the top-left corner of the browser page (Where the hamburger icon is)\n      const dropPosition = {\n        clientX: iframeX + e.clientX - window.screenLeft,\n        clientY: iframeY + e.clientY - window.screenTop - fixYOffset,\n      }\n\n      // These are the offsets set from the dragstart event.\n      const offset = {\n        x: offsetX,\n        y: offsetY,\n      }\n      sendToFigma({\n        position: { offset, dropPosition, windowSize },\n        elem: elementRef.current as HTMLElement,\n        name: params.name,\n        // props: params.props,\n        props: {},\n      })\n    }\n\n    dragElem?.addEventListener('dragstart', dragStartHandler)\n    dragElem?.addEventListener('dragend', dragEndHandler)\n\n    return () => {\n      dragElem?.removeEventListener('dragstart', dragStartHandler)\n      dragElem?.removeEventListener('dragend', dragEndHandler)\n    }\n  }, [dragRef, elementRef, params.props, params.name])\n}\n","import { htmlToFigma } from 'html-figma/browser'\n\ninterface SendToFigmaParams {\n  id?: string\n  props: unknown\n  name: string\n  elem: HTMLElement\n  position: {\n    dropPosition: { clientX: number; clientY: number }\n    offset: {\n      x: number\n      y: number\n    }\n    windowSize: { width: number; height: number }\n  }\n}\n\nexport const sendToFigma = ({ id, props = {}, name, elem, position }: SendToFigmaParams) => {\n  const result = elem ? htmlToFigma(elem) : null\n\n  window.parent.postMessage(\n    {\n      pluginMessage: {\n        type: 'import',\n        figmaId: id,\n        data: {\n          // @ts-ignore\n          layers: result,\n          props,\n          name,\n          position,\n        },\n      },\n    },\n    '*',\n  )\n}\n","import { Attach } from '@yandex/ui/Attach/desktop/bundle'\nimport { Badge } from '@yandex/ui/Badge'\nimport { Button } from '@yandex/ui/Button/desktop/bundle'\nimport { ButtonGroup } from '@yandex/ui/ButtonGroup/desktop/bundle'\nimport { Checkbox } from '@yandex/ui/Checkbox/desktop/bundle'\nimport { Divider } from '@yandex/ui/Divider'\nimport { Drawer } from '@yandex/ui/Drawer/touch-phone/bundle'\nimport { Header } from '@yandex/ui/Header'\nimport { Icon } from '@yandex/ui/Icon/desktop/bundle'\nimport { Image } from '@yandex/ui/Image/desktop/bundle'\nimport { Link } from '@yandex/ui/Link/desktop/bundle'\nimport { ListTile } from '@yandex/ui/ListTile'\nimport { Menu } from '@yandex/ui/Menu/desktop/bundle'\nimport { MessageBox } from '@yandex/ui/MessageBox/desktop/bundle'\nimport { Modal } from '@yandex/ui/Modal/desktop/bundle'\nimport { Popup } from '@yandex/ui/Popup/desktop/bundle'\nimport { Progress } from '@yandex/ui/Progress/desktop/bundle'\nimport { Radiobox } from '@yandex/ui/Radiobox/desktop/bundle'\nimport { RadioButton } from '@yandex/ui/RadioButton/desktop/bundle'\nimport { Select } from '@yandex/ui/Select/desktop/bundle'\nimport { Slider } from '@yandex/ui/Slider/desktop/bundle'\nimport { Spacer } from '@yandex/ui/Spacer'\nimport { Spin } from '@yandex/ui/Spin/desktop/bundle'\nimport { TabsMenu } from '@yandex/ui/TabsMenu/desktop/bundle'\nimport { TabsPanes } from '@yandex/ui/TabsPanes/desktop/bundle'\nimport { Text } from '@yandex/ui/Text/desktop/bundle'\nimport { Textarea } from '@yandex/ui/Textarea/desktop/bundle'\nimport { Textinput } from '@yandex/ui/Textinput/desktop/bundle'\nimport { Tooltip } from '@yandex/ui/Tooltip/desktop/bundle'\nimport { Tumbler } from '@yandex/ui/Tumbler/desktop/bundle'\nimport { UserPic } from '@yandex/ui/UserPic/desktop/bundle'\n\nexport const allComponents = {\n  Attach,\n  Badge,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Divider,\n  Drawer,\n  Header,\n  Icon,\n  Image,\n  Link,\n  ListTile,\n  Menu,\n  MessageBox,\n  Modal,\n  Popup,\n  Progress,\n  Radiobox,\n  RadioButton,\n  Select,\n  Slider,\n  Spacer,\n  Spin,\n  TabsMenu,\n  TabsPanes,\n  Text,\n  Textarea,\n  Textinput,\n  Tooltip,\n  Tumbler,\n  UserPic,\n}\n","import React, { createElement, useRef } from 'react'\nimport { cn } from '@bem-react/classname'\n\nimport './ComponentWrapper.css'\nimport { useDragToFigma } from '../../../../hooks/dragToFigma'\nimport { AllComponentsNames } from '../../../../utils/getComponentByName'\nimport { allComponents } from '../../../../utils/allComponents'\n\nconst cnComponentWrapper = cn('ComponentWrapper')\n\nexport const ComponentWrapper: React.FC<{\n  __name: AllComponentsNames\n  props: unknown\n}> = React.forwardRef((props, ref) => {\n  const { __name, ...componentProps } = props\n  const component = allComponents[__name]\n  const componentRef = useRef<HTMLElement>(null)\n  const dragRef = useRef(null)\n\n  useDragToFigma(dragRef, dragRef, { name: __name, props: componentProps })\n\n  return (\n    <div ref={dragRef} draggable className={cnComponentWrapper()}>\n      <div className={cnComponentWrapper('Element')}>\n        {\n          // @ts-expect-error\n          createElement(component, {\n            ...componentProps,\n            // ref\n          })\n        }\n      </div>\n    </div>\n  )\n})\n","import React, { createElement } from 'react'\nimport { ComponentWrapper } from '../pages/componentsPage/components/ComponentWrapper/ComponentWrapper'\nimport { AllComponentsNames, AllComponentsTypes } from './getComponentByName'\n\n// function getWrappedComponent<T extends AllComponentsNames>(name: T) => (props: AllComponentsTypes[T]) => React.FC<unknown>\n\nexport function getWrappedComponent<T extends AllComponentsNames>(\n  name: T,\n): React.FC<AllComponentsTypes[T]> {\n  return (props, ref) =>\n    createElement(\n      ComponentWrapper,\n      // @ts-ignore\n      { ...props, __name: name, ref },\n    )\n}\n","import React from 'react'\nimport { useStore } from 'effector-react'\n\nimport { $isFigma } from '../../../../../../../model/view'\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Attach = getWrappedComponent('Attach')\n\nexport const AttachShowcase = () => {\n  const isFigma = useStore($isFigma)\n\n  return (\n    <>\n      <Headline>Attach</Headline>\n      {isFigma ? (\n        <>\n          <div className=\"Showcase-Item\">\n            <Attach size=\"s\" view=\"default\">\n              Select file\n            </Attach>\n          </div>\n          <div className=\"Showcase-Item\">\n            <Attach size=\"m\" view=\"default\">\n              Select file\n            </Attach>\n          </div>\n          <div className=\"Showcase-Item\">\n            <Attach size=\"l\" view=\"default\">\n              Select file\n            </Attach>\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"Showcase-Item Showcase-Attach\">\n            <Attach size=\"s\" view=\"default\">\n              Select file\n            </Attach>\n            <Attach size=\"m\" view=\"default\">\n              Select file\n            </Attach>\n            <Attach size=\"l\" view=\"default\">\n              Select file\n            </Attach>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport { Button } from '@yandex/ui/Button/Button.bundle/desktop'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Badge = getWrappedComponent('Badge')\n\nconst IconTwo = () => (\n  <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\">\n    <path d=\"M4.5 18a.5.5 0 1 1 0-1 .5.5 0 0 1 0 1zm0-3a2.5 2.5 0 0 0 0 5 2.5 2.5 0 0 0 0-5zm11 3a.5.5 0 1 1 0-1 .5.5 0 0 1 0 1zm0-3a2.5 2.5 0 0 0 0 5 2.5 2.5 0 0 0 0-5zM19 4H5.78L4.97.758A.998.998 0 0 0 4 0H1a1 1 0 0 0 0 2h2.22l.805 3.222.01.042 1.995 7.98a1 1 0 0 0 1.135.743l11.017-1.837c1.02-.17 1.818-1.11 1.818-2.14V5a1 1 0 0 0-1-1zm-1 6.01c0 .05-.085.157-.146.167L7.746 11.862 6.28 6H18v4.01z\" />\n  </svg>\n)\n\nexport const BadgeShowcase = () => {\n  return (\n    <>\n      <Headline>Badge</Headline>\n      <div\n        className=\"Showcase-Item\"\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          width: 250,\n        }}\n      >\n        <Badge />\n\n        <Badge content=\"?\" />\n\n        <Badge content={5}>\n          <IconTwo />\n        </Badge>\n\n        <Button view=\"default\" size=\"m\">\n          Закладка\n          <Badge color=\"#0679ff\" outlineColor=\"#0679ff\" content={5} style={{ marginLeft: 5 }} />\n        </Button>\n      </div>\n    </>\n  )\n}\n","import React, { Fragment } from 'react'\nimport { Button } from '@yandex/ui/Button/Button.bundle/desktop'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst ButtonGroup = getWrappedComponent('ButtonGroup')\n\nexport const ButtonGroupShowcase = () => {\n  const gaps = [undefined, 's', 'm', 'l', 'xl'] as ('s' | 'm' | 'l' | 'xl')[]\n  const pins = ['circle', 'round'] as ('circle' | 'round')[]\n\n  return (\n    <>\n      <Headline>ButtonGroup</Headline>\n      <div className=\"Showcase-Item\">\n        {gaps.map((gap, index) => (\n          <Fragment key={`${gap}-${index}`}>\n            {index !== 0 && (\n              <>\n                {' '}\n                <br /> <br />{' '}\n              </>\n            )}\n            <p> Gap: {gap || 'no gap'} </p>\n            <ButtonGroup gap={gap}>\n              <Button view=\"default\" size=\"m\">\n                Button 1\n              </Button>\n              <Button view=\"default\" size=\"m\">\n                Button 2\n              </Button>\n              <Button view=\"default\" size=\"m\">\n                Button 3\n              </Button>\n            </ButtonGroup>\n          </Fragment>\n        ))}\n\n        {pins.map((pin) => (\n          <Fragment key={`${pin}`}>\n            <br /> <br />\n            <p> Pin: {pin} </p>\n            <ButtonGroup pin={pin} key={pin}>\n              <Button view=\"default\" size=\"m\">\n                Button 1\n              </Button>\n              <Button view=\"default\" size=\"m\">\n                Button 2\n              </Button>\n            </ButtonGroup>\n          </Fragment>\n        ))}\n      </div>\n    </>\n  )\n}\n","import React, { Fragment } from 'react'\nimport { useStore } from 'effector-react'\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nimport { $isFigma } from '../../../../../../../model/view'\nimport { Headline } from '../Headline'\n\nconst Button = getWrappedComponent('Button')\n\nexport const ButtonShowcase = () => {\n  const isFigma = useStore($isFigma)\n  const view = ['default', 'action', 'pseudo', 'link', 'clear', 'raised']\n  const size = ['s', 'm', 'l']\n\n  return (\n    <>\n      <Headline>Button</Headline>\n      {view.map((view: any) => (\n        <Fragment key={view}>\n          <p>View: {view}</p>\n          <div\n            className=\"Showcase-Item\"\n            style={{\n              display: 'flex',\n              width: 250,\n              marginBottom: 30,\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: isFigma ? 'column' : 'row',\n                alignItems: isFigma ? 'flex-start' : 'center',\n                flexBasis: '50%',\n                marginRight: isFigma ? 0 : 40,\n              }}\n            >\n              {size.map((size: any) => (\n                <div style={{ marginBottom: 16 }} key={`${view}-${size}`}>\n                  <Button view={view} size={size}>\n                    Button\n                  </Button>\n                </div>\n              ))}\n            </div>\n\n            <div\n              style={{\n                display: 'flex',\n                alignItems: isFigma ? 'flex-start' : 'center',\n                flexDirection: isFigma ? 'column' : 'row',\n              }}\n            >\n              <div style={{ marginBottom: 16 }}>\n                <Button view={view} size=\"s\" disabled>\n                  Button\n                </Button>\n              </div>\n              <div style={{ marginBottom: 16 }}>\n                <Button view={view} size=\"m\" checked>\n                  Button\n                </Button>\n              </div>\n              <div style={{ marginBottom: 16 }}>\n                <Button view={view} size=\"l\" progress>\n                  Button\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Fragment>\n      ))}\n    </>\n  )\n}\n","import React from 'react'\nimport { useStore } from 'effector-react'\n\nimport { $isFigma } from '../../../../../../../model/view'\nimport { Headline } from '../Headline'\nimport { Fragment } from 'react'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Checkbox = getWrappedComponent('Checkbox')\n\nexport const CheckboxShowcase = () => {\n  const isFigma = useStore($isFigma)\n  const view = ['outline', 'default']\n  const size = ['s', 'm']\n\n  return (\n    <>\n      <Headline>Checkbox</Headline>\n      {!isFigma &&\n        view.map((view: any) => (\n          <Fragment key={view}>\n            <p>View: {view}</p>\n            <div className=\"Showcase-Item\" style={{ display: 'flex', width: 250 }}>\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: isFigma ? 'column' : 'row',\n                  alignItems: isFigma ? 'flex-start' : 'center',\n                  flexBasis: '50%',\n                  marginRight: isFigma ? 0 : 40,\n                }}\n              >\n                {size.map((size: any) => (\n                  <div\n                    style={{\n                      marginBottom: 16,\n                      marginRight: 20,\n                    }}\n                    key={`${view}-${size}`}\n                  >\n                    <Checkbox view={view} size={size} label=\"Label\" />\n                  </div>\n                ))}\n              </div>\n\n              <div\n                style={{\n                  display: 'flex',\n                  alignItems: isFigma ? 'flex-start' : 'center',\n                  flexDirection: isFigma ? 'column' : 'row',\n                }}\n              >\n                <div\n                  style={{\n                    marginBottom: 16,\n                    marginRight: 20,\n                  }}\n                >\n                  <Checkbox view={view} size=\"s\" label=\"Label\" disabled />\n                </div>\n                <div\n                  style={{\n                    marginBottom: 16,\n                    marginRight: 20,\n                  }}\n                >\n                  <Checkbox view={view} size=\"m\" label=\"Label\" indeterminate />\n                </div>\n                <div\n                  style={{\n                    marginBottom: 16,\n                    marginRight: 20,\n                  }}\n                >\n                  <Checkbox view={view} size=\"m\" label=\"Label\" checked />\n                </div>\n              </div>\n            </div>\n          </Fragment>\n        ))}\n      {isFigma && (\n        <div className=\"Showcase-Item\">\n          <p>View: Outline </p>\n          <Checkbox size=\"s\" view=\"outline\" label=\"Label\" checked />\n          <Checkbox size=\"s\" view=\"outline\" label=\"Label\" />\n          <Checkbox size=\"s\" view=\"outline\" label=\"Label\" disabled />\n          <Checkbox size=\"s\" view=\"outline\" label=\"Label\" indeterminate />\n          <br />\n          <br />\n          <Checkbox size=\"m\" view=\"outline\" label=\"Label\" checked />\n          <Checkbox size=\"m\" view=\"outline\" label=\"Label\" />\n          <Checkbox size=\"m\" view=\"outline\" label=\"Label\" disabled />\n          <Checkbox size=\"m\" view=\"outline\" label=\"Label\" indeterminate />\n          <br />\n          <br />\n          <p>View: Default </p>\n          <Checkbox size=\"m\" view=\"default\" label=\"Label\" checked />\n          <Checkbox size=\"m\" view=\"default\" label=\"Label\" />\n          <Checkbox size=\"m\" view=\"default\" label=\"Label\" disabled />\n          <Checkbox size=\"m\" view=\"default\" label=\"Label\" indeterminate />\n          <br />\n          <br />\n          <Checkbox size=\"s\" view=\"default\" label=\"Label\" checked />\n          <Checkbox size=\"s\" view=\"default\" label=\"Label\" />\n          <Checkbox size=\"s\" view=\"default\" label=\"Label\" disabled />\n          <Checkbox size=\"s\" view=\"default\" label=\"Label\" indeterminate />\n        </div>\n      )}\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Divider = getWrappedComponent('Divider')\n\nexport const DividerShowcase = () => {\n  return (\n    <>\n      <Headline>Divider</Headline>\n      <div className=\"Showcase-Item\">\n        <Divider style={{ margin: '8px 0' }}>\n          <p>Section</p>\n        </Divider>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Button as ButtonBase } from '@yandex/ui/Button'\nimport { Textinput as TextinputBase, withHasClear } from '@yandex/ui/Textinput/desktop'\nimport { Header, HeaderSearch, HeaderNav, HeaderNavItem } from '@yandex/ui/Header/desktop'\nimport { withViewSearchArrow as withViewSearchArrowButton } from '@yandex/ui/Header/Button'\nimport { withViewSearchArrow as withViewSearchArrowTextinput } from '@yandex/ui/Header/Textinput'\n\nimport { Headline } from '../Headline'\n\nconst SearchButton = withViewSearchArrowButton(ButtonBase)\nconst SearchInput = withHasClear(withViewSearchArrowTextinput(TextinputBase))\n\nexport const HeaderShowcase = () => {\n  return (\n    <>\n      <Headline> Header </Headline>\n      <div className=\"Showcase-Item\">\n        <Header className=\"SearchHeader\">\n          <HeaderSearch action=\"//yandex.ru/search\">\n            <SearchInput view=\"search-arrow\" name=\"text\" hasClear value=\"Yandex\" />\n            <SearchButton view=\"search-arrow\"> Найти </SearchButton>\n          </HeaderSearch>\n        </Header>\n        <br /> <br />\n        <Header className=\"SearchHeader\">\n          <HeaderSearch action=\"//yandex.ru/search\">\n            <HeaderNav>\n              <HeaderNavItem href=\"/\"> Таб </HeaderNavItem>\n              <HeaderNavItem href=\"/\"> По </HeaderNavItem>\n              <HeaderNavItem href=\"/\"> Умолчанию </HeaderNavItem>\n              <HeaderNavItem href=\"/\" active>\n                Активный\n              </HeaderNavItem>\n            </HeaderNav>\n          </HeaderSearch>\n        </Header>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Link = getWrappedComponent('Link')\n\nexport const LinkShowcase = () => {\n  return (\n    <>\n      <Headline>Link</Headline>\n      <div className=\"Showcase-Item\">\n        <Link href=\"https://ya.ru\" view=\"default\">\n          Ссылка\n        </Link>\n        <br />\n        <Link view=\"default\" pseudo>\n          Ссылка\n        </Link>\n        <br />\n        <Link href=\"https://ya.ru\" view=\"default\" disabled>\n          Ссылка\n        </Link>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Menu = getWrappedComponent('Menu')\n\nexport const MenuShowcase = () => {\n  const items = [\n    { value: 'a', content: 'Каждый' },\n    { value: 'b', content: 'Охотник' },\n    {\n      items: [\n        { value: 'c', content: 'Желает', disabled: true },\n        { value: 'd', content: 'Знать' },\n        { value: 'e', content: 'Где' },\n      ],\n    },\n  ]\n\n  const [value, setValue] = useState('a')\n\n  return (\n    <>\n      <Headline>Menu</Headline>\n      <div className=\"Showcase-Item\">\n        <Menu\n          size=\"m\"\n          theme=\"normal\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n        <Menu\n          size=\"s\"\n          theme=\"normal\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n      </div>\n      <div className=\"Showcase-Item\">\n        <Menu\n          size=\"m\"\n          view=\"default\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n        <Menu\n          size=\"s\"\n          view=\"default\"\n          items={items}\n          value={value}\n          onChange={(event: any) => setValue(event.target.value)}\n        />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Button } from '@yandex/ui/Button/desktop/bundle'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst MessageBox = getWrappedComponent('MessageBox')\n\nexport const MessageBoxShowcase = () => {\n  return (\n    <>\n      <Headline>MessageBox</Headline>\n      <div className=\"Showcase-Item\">\n        <div style={{ marginBottom: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"default\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"clear\" size=\"s\">\n                  Отклонить\n                </Button>\n                <Button view=\"action\" size=\"s\">\n                  Принять\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n        <div style={{ marginBottom: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"inverse\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"clear\" size=\"s\">\n                  Отклонить\n                </Button>\n                <Button view=\"action\" size=\"s\">\n                  Принять\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n        <div style={{ marginBottom: '16px' }}>\n          <MessageBox\n            onClose={() => null}\n            view=\"promo\"\n            size=\"m\"\n            actions={\n              <>\n                <Button view=\"action\" size=\"s\">\n                  Подробнее\n                </Button>\n              </>\n            }\n          >\n            Новая почта с классными темами!\n          </MessageBox>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Progress = getWrappedComponent('Progress')\n\nexport const ProgressShowcase = () => {\n  return (\n    <>\n      <Headline>Progres</Headline>\n      <div className=\"Showcase-Item\">\n        <Progress timing=\"linear\" value={50} maxValue={100} />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Radiobox = getWrappedComponent('Radiobox')\n\nexport const RadioboxShowcase = () => {\n  const options = [\n    { label: 'Option A', value: 'a' },\n    { label: 'Option B', value: 'b' },\n    { label: 'Option C (disabled)', value: 'c', disabled: true },\n  ]\n\n  return (\n    <>\n      <Headline>Radiobox</Headline>\n      <div className=\"Showcase-Item\">\n        <Radiobox size=\"m\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <Radiobox size=\"s\" view=\"default\" value=\"a\" options={options} />\n      </div>\n      <div className=\"Showcase-Item\">\n        <Radiobox size=\"m\" view=\"outline\" value=\"a\" options={options} />\n        <br />\n        <Radiobox size=\"s\" view=\"outline\" value=\"a\" options={options} />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst RadioButton = getWrappedComponent('RadioButton')\n\nexport const RadioButtonShowcase = () => {\n  const options = [\n    { value: 'a', children: 'Option A' },\n    { value: 'b', children: 'Option B' },\n    { value: 'c', children: 'Option C' },\n  ]\n\n  return (\n    <>\n      <Headline>RadioButton</Headline>\n      <div className=\"Showcase-Item\">\n        <RadioButton size=\"l\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <br />\n        <RadioButton size=\"m\" view=\"default\" value=\"a\" options={options} />\n        <br />\n        <br />\n        <RadioButton size=\"s\" view=\"default\" value=\"a\" options={options} />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { useSliderState } from '@yandex/ui/Slider/desktop/bundle'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Slider = getWrappedComponent('Slider')\n\nexport const SliderShowcase = () => {\n  const state1 = useSliderState({ value: [20] })\n  const state2 = useSliderState({ value: [20, 50] })\n\n  const state3 = useSliderState({ value: [20] })\n  const state4 = useSliderState({ value: [20, 50] })\n\n  const state5 = useSliderState({ value: [20] })\n  const state6 = useSliderState({ value: [20, 50] })\n\n  const state7 = useSliderState({ value: [20] })\n  const state8 = useSliderState({ value: [20, 50] })\n\n  const state9 = useSliderState({ value: [20] })\n  const state10 = useSliderState({ value: [20, 50] })\n\n  return (\n    <>\n      <Headline>Slider</Headline>\n      <Slider view=\"default\" {...state1} />\n      <Slider view=\"default\" {...state2} />\n      <Slider filled view=\"default\" {...state3} />\n      <Slider filled view=\"default\" {...state4} />\n      <Slider reverse filled view=\"default\" {...state5} />\n      <Slider reverse filled view=\"default\" {...state6} />\n      <Slider filled step={25} view=\"default\" {...state7} />\n      <Slider filled step={25} view=\"default\" {...state8} />\n      <Slider filled step={20} showTicks showTickValues view=\"default\" {...state9} />\n      <Slider filled showTicks showTickValues step={20} view=\"default\" {...state10} />\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Spin = getWrappedComponent('Spin')\n\nexport const SpinShowcase = () => {\n  return (\n    <>\n      <Headline>Spin</Headline>\n      <div className=\"Showcase-Item\">\n        <Spin progress view=\"default\" size=\"l\" />\n        <Spin progress view=\"default\" size=\"m\" />\n        <Spin progress view=\"default\" size=\"s\" />\n        <Spin progress view=\"default\" size=\"xs\" />\n        <Spin progress view=\"default\" size=\"xxs\" />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst TabsMenu = getWrappedComponent('TabsMenu')\n\nexport const TabsMenuShowcase = () => {\n  return (\n    <>\n      <Headline>TabsMenu</Headline>\n      <div className=\"Showcase-Item\">\n        <TabsMenu\n          size=\"m\"\n          view=\"default\"\n          layout=\"horiz\"\n          tabs={[\n            { id: 'search', content: 'Поиск' },\n            { id: 'images', content: 'Картинки' },\n            { id: 'video', content: 'Видео' },\n          ]}\n          activeTab={'search'}\n        />\n\n        <br />\n        <TabsMenu\n          size=\"s\"\n          view=\"default\"\n          layout=\"horiz\"\n          tabs={[\n            { id: 'search', content: 'Поиск' },\n            { id: 'images', content: 'Картинки' },\n            { id: 'video', content: 'Видео' },\n          ]}\n          activeTab={'search'}\n        />\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Textarea = getWrappedComponent('Textarea')\n\nexport const TextareaShowcase = () => {\n  const [value1, setValue1] = useState('')\n\n  return (\n    <>\n      <Headline>Textarea</Headline>\n      <div className=\"Showcase-Item\">\n        <Textarea\n          hasClear\n          size=\"m\"\n          view=\"default\"\n          value={value1}\n          onChange={(event) => setValue1(event.target.value)}\n          onClearClick={() => setValue1('')}\n        />\n        <br />\n        <br />\n        <Textarea\n          hasClear\n          size=\"s\"\n          view=\"default\"\n          value={value1}\n          onChange={(event) => setValue1(event.target.value)}\n          onClearClick={() => setValue1('')}\n        />\n        <br />\n        <br />\n        <Textarea\n          hasClear\n          size=\"s\"\n          view=\"default\"\n          value={value1}\n          onChange={(event) => setValue1(event.target.value)}\n          onClearClick={() => setValue1('')}\n          state=\"error\"\n          hint=\"Error message\"\n        />\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Textinput = getWrappedComponent('Textinput')\n\nexport const TextinputShowcase = () => {\n  const [value1, setValue1] = useState('')\n  const [value2, setValue2] = useState('')\n  const [value3, setValue3] = useState('')\n  const [value4, setValue4] = useState('')\n  const [value5, setValue5] = useState('')\n  const [value6, setValue6] = useState('')\n\n  return (\n    <>\n      <Headline>Textinput</Headline>\n      <div className=\"Showcase-Item\" style={{ whiteSpace: 'normal' }}>\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"m\"\n            view=\"default\"\n            value={value1}\n            onChange={(event) => setValue1(event.target.value)}\n            onClearClick={() => setValue1('')}\n          />\n        </div>\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"s\"\n            view=\"default\"\n            value={value2}\n            onChange={(event) => setValue2(event.target.value)}\n            onClearClick={() => setValue2('')}\n          />\n        </div>\n        <div style={{ padding: 4 }}>\n          <Textinput\n            hasClear\n            size=\"s\"\n            view=\"default\"\n            value={value3}\n            onChange={(event) => setValue3(event.target.value)}\n            onClearClick={() => setValue3('')}\n            state=\"error\"\n            hint=\"Error message\"\n          />\n        </div>\n      </div>\n      <div style={{ padding: 4 }}>\n        <Textinput\n          hasClear\n          size=\"s\"\n          label=\"Label\"\n          view=\"material\"\n          value={value4}\n          onChange={(event) => setValue4(event.target.value)}\n          onClearClick={() => setValue4('')}\n        />\n      </div>\n      <div style={{ padding: 4 }}>\n        <Textinput\n          hasClear\n          label=\"Label\"\n          size=\"m\"\n          view=\"material\"\n          value={value5}\n          onChange={(event) => setValue5(event.target.value)}\n          onClearClick={() => setValue5('')}\n        />\n      </div>\n      <div style={{ padding: 4 }}>\n        <Textinput\n          hasClear\n          label=\"Label\"\n          size=\"m\"\n          view=\"material\"\n          value={value6}\n          onChange={(event) => setValue6(event.target.value)}\n          onClearClick={() => setValue6('')}\n          state=\"error\"\n          hint=\"Error message\"\n        />\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Text = getWrappedComponent('Text')\n\nexport const TextShowcase = () => {\n  return (\n    <>\n      <Headline>Text</Headline>\n      <div className=\"Showcase-Item\">\n        <Text as=\"div\" style={{ whiteSpace: 'normal' }}>\n          Миссия Яндекса — помогать людям решать задачи и достигать своих целей в жизни.\n        </Text>\n      </div>\n    </>\n  )\n}\n","import React, { useState, useRef } from 'react'\nimport { Button } from '@yandex/ui/Button/desktop/bundle'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Tooltip = getWrappedComponent('Tooltip')\n\nexport const TooltipShowcase = () => {\n  const [visible1, setVisible1] = useState(true)\n  const [visible2, setVisible2] = useState(true)\n  const [visible3, setVisible3] = useState(true)\n  const [visible4, setVisible4] = useState(true)\n  const [visible5, setVisible5] = useState(true)\n  const [visible6, setVisible6] = useState(true)\n  const anchorRef1 = useRef<HTMLDivElement>(null)\n  const anchorRef2 = useRef<HTMLDivElement>(null)\n  const anchorRef3 = useRef<HTMLDivElement>(null)\n  const anchorRef4 = useRef<HTMLDivElement>(null)\n  const anchorRef5 = useRef<HTMLDivElement>(null)\n  const anchorRef6 = useRef<HTMLDivElement>(null)\n  const scopeRef = useRef<HTMLDivElement>(null)\n\n  return (\n    <>\n      <Headline>Tooltip</Headline>\n      <div className=\"Showcase-Item\">\n        <div\n          style={{\n            position: 'relative',\n            display: 'flex',\n            height: 96,\n          }}\n          ref={scopeRef}\n        >\n          <div style={{ marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef1}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible1(!visible1)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef2}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible2(!visible2)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef3}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible3(!visible3)}\n            >\n              Target\n            </Button>\n          </div>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"s\"\n            anchor={anchorRef1}\n            scope={scopeRef}\n            visible={visible1}\n          >\n            Size small\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"m\"\n            anchor={anchorRef2}\n            scope={scopeRef}\n            visible={visible2}\n          >\n            Size medium\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"l\"\n            anchor={anchorRef3}\n            scope={scopeRef}\n            visible={visible3}\n          >\n            Size large\n          </Tooltip>\n        </div>\n      </div>\n      <div className=\"Showcase-Item\">\n        <div\n          style={{\n            position: 'relative',\n            display: 'flex',\n            height: 96,\n          }}\n          ref={scopeRef}\n        >\n          <div style={{ marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef4}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible4(!visible4)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef5}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible5(!visible5)}\n            >\n              Target\n            </Button>\n          </div>\n          <div style={{ marginRight: 32 }}>\n            <Button\n              innerRef={anchorRef6}\n              size=\"m\"\n              view=\"default\"\n              onClick={() => setVisible6(!visible6)}\n            >\n              Target\n            </Button>\n          </div>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"s\"\n            state=\"warning\"\n            anchor={anchorRef4}\n            scope={scopeRef}\n            visible={visible4}\n          >\n            Size small\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"m\"\n            state=\"success\"\n            anchor={anchorRef5}\n            scope={scopeRef}\n            visible={visible5}\n          >\n            Size medium\n          </Tooltip>\n          <Tooltip\n            hasTail\n            direction=\"bottom\"\n            view=\"default\"\n            size=\"l\"\n            state=\"alert\"\n            anchor={anchorRef6}\n            scope={scopeRef}\n            visible={visible6}\n          >\n            Size large\n          </Tooltip>\n        </div>\n      </div>\n    </>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst Tumbler = getWrappedComponent('Tumbler')\n\nexport const TumblerShowcase = () => {\n  const [checked1, setChecked1] = useState(true)\n  const [checked2, setChecked2] = useState(false)\n\n  return (\n    <>\n      <Headline>Tumbler</Headline>\n      <div className=\"Showcase-Item\">\n        <>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"m\"\n              view=\"default\"\n              checked={checked1}\n              onChange={() => setChecked1(!checked1)}\n              labelBefore=\"labelBefore\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"m\"\n              view=\"default\"\n              checked\n              disabled\n              onChange={() => {}}\n              labelAfter=\"disabled check\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"s\"\n              view=\"default\"\n              checked={checked2}\n              onChange={() => setChecked2(!checked2)}\n              labelAfter=\"labelAfter\"\n            />\n          </div>\n          <div style={{ marginBottom: 8 }}>\n            <Tumbler\n              size=\"l\"\n              view=\"default\"\n              checked={false}\n              disabled\n              onChange={() => {}}\n              labelBefore={\n                <svg\n                  aria-label=\"labelBefore\"\n                  width=\"16\"\n                  height=\"16\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M3.5 7.003a1.5 1.5 0 0 0-1.5 1.5v6a1.5 1.5 0 0 0 1.5 1.5h9a1.5 1.5 0 0 0 1.5-1.5v-6a1.5 1.5 0 0 0-1.5-1.5H12v-2a4 4 0 0 0-8 0v2h-.5zm2.5-2a2 2 0 1 1 4 0V7H6V5.003z\"\n                    fill=\"currentColor\"\n                  />\n                </svg>\n              }\n              labelAfter=\"disabled\"\n            />\n          </div>\n        </>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Headline } from '../Headline'\n\nimport { getWrappedComponent } from '../../../../../../../utils/getWrappedComponent'\n\nconst UserPic = getWrappedComponent('UserPic')\n\nexport const UserPicShowcase = () => {\n  return (\n    <>\n      <Headline>UserPic</Headline>\n      <div className=\"Showcase-Item\">\n        <>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic plus avatarId=\"43978/351415393-30646433\" size=\"m\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic avatarId=\"0/0-0\" hasCamera size=\"m\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic plus avatarId=\"0/0-0\" hasCamera size=\"s\" />\n          </div>\n          <div style={{ marginRight: '20px', display: 'inline-block' }}>\n            <UserPic\n              lodpiUrl=\"https://jing.yandex-team.ru/files/kri0-gen/halp_orange.jpg\"\n              size=\"s\"\n            />\n          </div>\n        </>\n      </div>\n    </>\n  )\n}\n","import React, { createElement, ComponentType } from 'react'\nimport { useStore } from 'effector-react'\n\nimport { $dark } from '../../../../../../model/dark'\nimport { $isFigma } from '../../../../../../model/view'\n\nimport { AttachShowcase } from './Showcases/AttachShowcase'\nimport { BadgeShowcase } from './Showcases/BadgeShowcase'\nimport { ButtonGroupShowcase } from './Showcases/ButtonGroupShowcase'\nimport { ButtonShowcase } from './Showcases/ButtonShowcase'\nimport { CheckboxShowcase } from './Showcases/CheckboxShowcase'\nimport { DividerShowcase } from './Showcases/DividerShowcase'\nimport { HeaderShowcase } from './Showcases/HeaderShowcase'\nimport { LinkShowcase } from './Showcases/LinkShowcase'\nimport { MenuShowcase } from './Showcases/MenuShowcase'\nimport { MessageBoxShowcase } from './Showcases/MessageBoxShowcase'\nimport { ProgressShowcase } from './Showcases/ProgressShowcase'\nimport { RadioboxShowcase } from './Showcases/RadioboxShowcase'\nimport { RadioButtonShowcase } from './Showcases/RadioButtonShowcase'\nimport { SliderShowcase } from './Showcases/SliderShowcase'\nimport { SpinShowcase } from './Showcases/SpinShowcase'\nimport { TabsMenuShowcase } from './Showcases/TabsMenuShowcase'\nimport { TextareaShowcase } from './Showcases/TextareaShowcase'\nimport { TextinputShowcase } from './Showcases/TextinputShowcase'\nimport { TextShowcase } from './Showcases/TextShowcase'\nimport { TooltipShowcase } from './Showcases/TooltipShowcase'\nimport { TumblerShowcase } from './Showcases/TumblerShowcase'\nimport { UserPicShowcase } from './Showcases/UserPicShowcase'\n\nimport './Overview.css'\n\nconst componentsMap: Record<string, ComponentType> = {\n  attach: AttachShowcase,\n  badge: BadgeShowcase,\n  button: ButtonShowcase,\n  buttonGroup: ButtonGroupShowcase,\n  checkbox: CheckboxShowcase,\n  divider: DividerShowcase,\n  header: HeaderShowcase,\n  link: LinkShowcase,\n  menu: MenuShowcase,\n  messageBox: MessageBoxShowcase,\n  progress: ProgressShowcase,\n  radiobox: RadioboxShowcase,\n  radioButton: RadioButtonShowcase,\n  spin: SpinShowcase,\n  tabsMenu: TabsMenuShowcase,\n  text: TextShowcase,\n  textarea: TextareaShowcase,\n  textinput: TextinputShowcase,\n  tooltip: TooltipShowcase,\n  tumbler: TumblerShowcase,\n  userPic: UserPicShowcase,\n  slider: SliderShowcase,\n}\n\nexport const Overview: React.FC<any> = (props) => {\n  const dark = useStore($dark)\n  const isFigma = useStore($isFigma)\n\n  return (\n    <div className={`Overview ${dark ? 'Overview_dark' : ''} ${isFigma ? 'Overview_figma' : ''}`}>\n      {Object.entries(componentsMap).map(([componentName, component]) =>\n        createElement(component, { key: componentName }),\n      )}\n    </div>\n  )\n}\n","import { Overview } from './Overview'\n\nexport const Showcases = {\n  overview: Overview,\n}\n","import React, { FC, HTMLProps, useRef } from 'react'\nimport { useButton, UseButtonProps } from 'web-platform-alpha'\nimport { cn } from '@bem-react/classname'\nimport { TooltipStateful } from '../../lib/lego/Tooltip'\n\nimport './IconButtonBase.css'\n\nexport type IconButtonBaseProps = HTMLProps<HTMLButtonElement> &\n  UseButtonProps & {\n    /**\n     * @default false\n     */\n    dark?: boolean\n\n    /**\n     * Tip for tooltip\n     */\n    tip?: string\n  }\n\nexport const cnIconButtonBase = cn('IconButtonBase')\n\nexport const IconButtonBase: FC<IconButtonBaseProps> = ({\n  className,\n  children,\n  dark,\n  tip,\n  ...props\n}) => {\n  const ref = useRef(null)\n  const { buttonProps } = useButton(props, ref)\n\n  return (\n    <TooltipStateful content={tip} dark={dark}>\n      <button {...buttonProps} ref={ref} className={cnIconButtonBase({ dark }, [className])}>\n        {children}\n      </button>\n    </TooltipStateful>\n  )\n}\n","import React, { FC } from 'react'\n\nimport { IconButtonBase, cnIconButtonBase, IconButtonBaseProps } from '../IconButtonBase'\nimport { CloseEyeIcon, OpenEyeIcon } from '../../../icons'\n\nexport const EyeIconButton: FC<IconButtonBaseProps & { close?: boolean }> = ({\n  close,\n  dark,\n  ...props\n}) => {\n  const type = dark ? 'black' : 'white'\n  const tip = close ? 'Show changes' : 'Hide changes'\n\n  return (\n    <IconButtonBase dark={dark} tip={tip} {...props}>\n      {close ? (\n        <CloseEyeIcon type={type} className={cnIconButtonBase('Icon')} />\n      ) : (\n        <OpenEyeIcon type={type} className={cnIconButtonBase('Icon')} />\n      )}\n    </IconButtonBase>\n  )\n}\n","import React, { FC } from 'react'\n\nimport { IconButtonBase, cnIconButtonBase, IconButtonBaseProps } from '../IconButtonBase'\nimport { SunIcon } from '../../../icons'\n\nexport const SunIconButton: FC<IconButtonBaseProps> = ({ dark, ...props }) => {\n  const type = dark ? 'black' : 'white'\n  const tip = dark ? 'Lighten background' : 'Darkent background'\n\n  return (\n    <IconButtonBase dark={dark} tip={tip} {...props}>\n      <SunIcon type={type} className={cnIconButtonBase('Icon')} />\n    </IconButtonBase>\n  )\n}\n","import React, { useState, FC, createElement } from 'react'\nimport { useStore } from 'effector-react'\nimport { cnTheme } from '@yandex/ui/Theme'\n\nimport { $cssVariables } from '../../../../model/css'\n\nimport { Showcases } from './Showcases'\nimport { $theme } from '../../../../model/themes'\nimport { $dark, darkToggle } from '../../../../model/dark'\nimport { $component } from '../../model'\n\nimport { EyeIconButton, SunIconButton } from '../../../../components/IconButton'\n\nexport type ShowcaseProps = {\n  className: string\n}\n\nexport const Showcase: FC<ShowcaseProps> = ({ className }) => {\n  const [showDiff, setShowDiff] = useState(true)\n\n  const { preset } = useStore($theme)\n  const cssVariables = useStore($cssVariables)\n  const component = useStore($component)\n  const dark = useStore($dark)\n\n  const handleSunIconClick = darkToggle\n  const handleEyeIconClick = () => setShowDiff((prev) => !prev)\n\n  return (\n    <>\n      <div\n        className={cnTheme({ ...preset, dark }, [className])}\n        style={showDiff ? cssVariables : {}}\n      >\n        {/* @ts-ignore */}\n        {Showcases[component] && createElement(Showcases[component])}\n      </div>\n      <SunIconButton dark={dark} onPress={handleSunIconClick} className=\"SunIcon\" />\n      <EyeIconButton\n        dark={dark}\n        onPress={handleEyeIconClick}\n        close={!showDiff}\n        className=\"EyeIcon\"\n      />\n    </>\n  )\n}\n","import React from 'react'\nimport { useStore } from 'effector-react'\nimport { cn } from '@bem-react/classname'\n\nimport { $theme } from '../../model/themes'\n\nimport './ComponentsPage.css'\nimport { Panels } from './components/Panels'\nimport { Playground } from './components/Playground'\nimport { TokenEditor } from './components/TokenEditor'\nimport { Showcase } from './components/Showcase'\nimport { $component, $tokenPresent, componentChange } from './model'\n\nconst cnComponentsPage = cn('ComponentsPage')\n\nexport const ComponentsPage = () => {\n  const {\n    tokens: { components },\n  } = useStore($theme)\n  const component = useStore($component)\n  const showTokenEditor = useStore($tokenPresent)\n\n  const panels = ['overview', ...Object.keys(components)]\n  const handlePanelSelection = (panel: string) => {\n    componentChange(panel)\n  }\n\n  return (\n    <div className={cnComponentsPage()}>\n      <Panels\n        className={cnComponentsPage('Panels')}\n        panels={panels}\n        activePanel={component}\n        onPanelSelect={handlePanelSelection}\n      />\n      <Showcase className={cnComponentsPage('Showcase')} />\n      <Playground className={cnComponentsPage('Playground')} />\n      {/* <button onClick={() => tokenChange('token-name')}>Token Editor</button> */}\n      {showTokenEditor && <TokenEditor className={cnComponentsPage('TokenEditor')} />}\n    </div>\n  )\n}\n","import { attach, createEffect, createEvent, forward } from 'effector'\nimport { toast } from 'react-toastify'\n\nimport { $theme } from './themes'\nimport { variablesChangeBatch } from './designTokens'\nimport { downloadTheme } from '../api/downloadTheme'\nimport { $yamlText } from './yaml'\nimport { ThemeType } from '../types'\n\ntype UploadRawTokensFxPropsType = {\n  theme: ThemeType\n  tokens: string\n}\n\nexport const rawTokensUpload = createEvent()\n\n// TODO: Вынести вынести логику с загрузкой в yaml.ts\nexport const $tokensText = $yamlText.map((value) => value)\n\nexport const uploadRawTokensFx = attach({\n  source: {\n    theme: $theme,\n    tokens: $tokensText,\n  },\n  mapParams: (_, { theme, tokens }) =>\n    ({\n      theme,\n      tokens,\n    } as UploadRawTokensFxPropsType),\n  effect: createEffect(({ tokens, theme: { mappings } }: UploadRawTokensFxPropsType) => {\n    return downloadTheme(tokens, mappings)\n  }),\n})\n\nexport const $uploadRawTokensLoading = uploadRawTokensFx.pending\n\nexport const tokensUpdate = createEvent<string>()\n\n$tokensText.on(tokensUpdate, (_, payload) => payload)\n\nuploadRawTokensFx.doneData.watch((tokens) => {\n  variablesChangeBatch(tokens)\n  toast.success('Tokens successfully uploaded')\n})\n\nuploadRawTokensFx.failData.watch((error) => toast.error(error.message, { autoClose: 5000 }))\n\nforward({\n  from: rawTokensUpload,\n  to: uploadRawTokensFx,\n})\n","import { VariablesType } from '../types'\n\nexport const uploadTokens = async (theme: string, tokens: VariablesType[]) => {\n  const response = await fetch('https://functions.yandexcloud.net/d4emk05t1v8gvek4q8l0', {\n    method: 'POST',\n    body: JSON.stringify({\n      theme,\n      tokens,\n    }),\n  })\n\n  const json = await response.json()\n\n  if (!response.ok) {\n    throw new Error(json.errorMessage)\n  }\n\n  return json.tokensHash\n}\n","import { attach, createEffect, createEvent, forward } from 'effector'\nimport copy from 'copy-to-clipboard'\nimport { toast } from 'react-toastify'\n\nimport { $themeName } from './themes'\nimport { $hasTokens, $listDesignTokens } from './designTokens'\nimport { tokensQueryParameterUpdate } from './query'\nimport { uploadTokens } from '../api/uploadTokens'\n\nimport { ThemeNamesType, VariablesType } from '../types'\n\ntype ShareTokensFxPropsType = {\n  themeName: ThemeNamesType\n  tokens: VariablesType[]\n}\n\nexport const tokensShare = createEvent()\n\nexport const shareTokens = attach({\n  source: {\n    themeName: $themeName,\n    tokens: $listDesignTokens,\n  },\n  mapParams: (_: any, { themeName, tokens }) => ({\n    themeName,\n    tokens,\n  }),\n  effect: createEffect(({ themeName, tokens }: ShareTokensFxPropsType) => {\n    if (tokens.length === 0) {\n      return\n    }\n\n    return uploadTokens(themeName, tokens)\n  }),\n})\n\nexport const $shareTokensLoading = shareTokens.pending\nexport const $shareTokensDisabled = $hasTokens.map((hasTokens) => !hasTokens)\n\nshareTokens.doneData.watch((tokensHash) => {\n  if (!tokensHash) {\n    return\n  }\n\n  tokensQueryParameterUpdate(tokensHash)\n  copy(window.location.href)\n  toast.success('Link successfully copied to clipboard')\n})\n\nshareTokens.failData.watch((error) => toast.error(error, { autoClose: 5000 }))\n\nforward({\n  from: tokensShare,\n  to: shareTokens,\n})\n","import { useStore } from 'effector-react'\nimport React, { ChangeEvent, FC, useState } from 'react'\nimport { Button, Switch, Textarea } from 'react-figma-components'\nimport { $cssText } from '../../../model/css'\nimport { $isFigma } from '../../../model/view'\n\nimport { rawTokensUpload, tokensUpdate, $tokensText } from '../../../model/tokensText'\nimport { tokensShare, $shareTokensDisabled } from '../../../model/share-tokens'\n\nimport './Tokens.css'\n\nexport type TokensProps = {}\n\nexport const Tokens: FC<TokensProps> = (props) => {\n  const [format, setFormat] = useState<'yaml' | 'css'>('yaml')\n  const tokensText = useStore($tokensText)\n  const cssText = useStore($cssText)\n  const isFigma = useStore($isFigma)\n  const shareDisabled = useStore($shareTokensDisabled)\n\n  const handleSwitchChange = () =>\n    setFormat((format) => {\n      switch (format) {\n        case 'yaml':\n          return 'css'\n        case 'css':\n          return 'yaml'\n        default:\n          return 'css'\n      }\n    })\n\n  const handleTextareaChange = (event: ChangeEvent<HTMLInputElement>) => {\n    tokensUpdate(event.target.value)\n  }\n\n  const handleUploadClick = () => {\n    rawTokensUpload()\n  }\n\n  const handlePushToCanvasClick = () => {}\n\n  return (\n    <div className=\"Tokens\">\n      <div className=\"Tokens-Header\">\n        <span>View code:</span> YAML\n        <Switch\n          checked={format !== 'yaml'}\n          onChange={handleSwitchChange}\n          className=\"Tokens-Switch\"\n        />\n        CSS\n      </div>\n      <Textarea\n        value={format === 'yaml' ? tokensText : cssText}\n        onChange={handleTextareaChange}\n        className=\"Tokens-Textinput\"\n        placeholder=\"Tokens\"\n      />\n      <div className=\"Tokens-Buttons\">\n        <Button\n          view=\"tertiary\"\n          onClick={tokensShare}\n          disabled={shareDisabled}\n          onPress={tokensShare}\n          data-testid=\"share=button\"\n        >\n          Share Theme\n        </Button>\n        <Button view=\"secondary\" onPress={handleUploadClick}>\n          Upload Theme\n        </Button>\n        {isFigma && (\n          <Button view=\"primary\" onPress={handlePushToCanvasClick}>\n            Push all to canvas\n          </Button>\n        )}\n      </div>\n    </div>\n  )\n}\n","import React, { FC, useEffect } from 'react'\n\nimport { Tokens } from './Tokens'\nimport { isVariablesChangedReset } from '../../model/designTokens'\n\nimport './ChangesPage.css'\n\nexport type ChangesPageProps = {}\n\nexport const ChangesPage: FC<ChangesPageProps> = () => {\n  useEffect(isVariablesChangedReset, [])\n\n  return (\n    <div className=\"ChangesPage\">\n      <Tokens />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useGate } from 'effector-react'\nimport { configureRootTheme } from '@yandex/ui/Theme'\nimport { TabsPanes } from '@yandex/ui/TabsPanes/desktop/bundle'\nimport { theme } from '@yandex/ui/Theme/presets/default'\n\nimport { ToastContainer, cssTransition } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport 'animate.css'\nimport '@fontsource/inter'\n\nimport { Header, ActiveTabType } from './components/Header'\nimport { Divider } from './lib/lego/Divider'\n\nimport { ComponentsPage } from './pages/componentsPage'\nimport { ChangesPage } from './pages/changesPage'\n\nimport { variablesInitializationGate } from './model/designTokens'\nimport { viewInitializationGate } from './model/view'\n\nimport './App.css'\nimport './Toastify.css'\n\nconfigureRootTheme({ theme })\n\nconst Fade = cssTransition({\n  enter: 'animate__animated animate__fadeIn',\n  exit: 'animate__animated animate__fadeOut',\n})\n\nexport default () => {\n  const [activeTab, setActiveTab] = useState<ActiveTabType>('components')\n\n  useGate(variablesInitializationGate)\n  useGate(viewInitializationGate)\n\n  // useEffect(() => {\n  //   window.onbeforeunload = (e: BeforeUnloadEvent) => {\n  //     e.preventDefault(\n  //     return ''\n  //   }\n  // }, [])\n\n  return (\n    <div className=\"Site\">\n      <Header activeTab={activeTab} setActiveTab={setActiveTab} />\n      <Divider />\n      <TabsPanes\n        activePane={activeTab}\n        panes={[\n          { id: 'components', content: <ComponentsPage /> },\n          { id: 'changes', content: <ChangesPage /> },\n        ]}\n      />\n      <ToastContainer\n        transition={Fade}\n        autoClose={2000}\n        position=\"bottom-center\"\n        // closeOnClick={false}\n        closeButton={false}\n        limit={1}\n        hideProgressBar={true}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","import { compose } from '@bem-react/core'\n\n// base\nimport {\n  Tooltip as TooltipDesktop,\n  TooltipStateful as TooltipStatefulDesktop,\n} from '@yandex/ui/Tooltip/Tooltip@desktop'\n\n// _size\nimport { withSizeS } from '@yandex/ui/Tooltip/_size/Tooltip_size_s'\n// _view\nimport { withViewFigma } from './_view/Tooltip_view_figma'\n\nimport { withDark } from './_dark/Tooltip_dark'\n\nexport * from '@yandex/ui/Tooltip/Tooltip@desktop'\n\nconst enhance = compose(withViewFigma, withDark, withSizeS)\n\nexport const Tooltip = enhance(TooltipDesktop)\nexport const TooltipStateful = enhance(TooltipStatefulDesktop)\n\nTooltip.defaultProps = {\n  hasTail: true,\n  view: 'figma',\n  size: 's',\n  direction: 'left',\n}\n\nTooltipStateful.defaultProps = {\n  hasTail: true,\n  view: 'figma',\n  size: 's',\n  direction: 'left',\n}\n","import { withBemMod } from '@bem-react/core'\n\nimport './Tooltip_view_figma.css'\n\nexport type TooltipViewFigmaProps = {\n  /**\n   * Стилевое оформление тултипа.\n   */\n  view?: 'figma'\n}\n\n/**\n * Модификатор, отвечающий за внешний вид тултипа.\n * @param {TooltipViewFigmaProps} props\n */\nexport const withViewFigma = withBemMod<TooltipViewFigmaProps>('Tooltip', {\n  view: 'figma',\n})\n","import { withBemMod } from '@bem-react/core'\n\nimport './Tooltip_dark.css'\n\nexport type TooltipDarkProps = {\n  /**\n   * Стилевое оформление тултипа.\n   */\n  dark?: boolean\n}\n\n/**\n * Модификатор, отвечающий за внешний вид тултипа.\n * @param {TooltipDarkProps} props\n */\nexport const withDark = withBemMod<TooltipDarkProps>('Tooltip', { dark: true })\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 988;"],"sourceRoot":""}